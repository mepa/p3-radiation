
###Auto generated file###
###will be clobbered during the next make


# Note that MODUPPERCASE is defined by Makefile.h for sites and compilers where this is necessary,
# and Makefile should include Makefile.h before Makefile.Depend .

/home/r900-3/milos/hdf5-1.6.7/include.o: 
fftsg.o: 
fftsg2d.o: 
fftsg3d.o: 
Burn.o: 
Burn_computeAbarZbar.o: 
Burn_computeDt.o: constants.h
Burn_finalize.o: 
Burn_guardCellMaskHook.o: Flash.h
Burn_init.o: 
Burn_nseAtDens.o: 
Burn_nseAtPres.o: 

ifdef MODUPPERCASE
Chem.o : COSMOLOGY_INTERFACE.mod DRIVER_INTERFACE.mod PHYSICALCONSTANTS_INTERFACE.mod CHEM_DATA.mod GRID_INTERFACE.mod PHOTOIONIZATION_DATA.mod EOS_INTERFACE.mod Eos.h Multispecies.h constants.h Flash.h Flash_mpi.h 
else
Chem.o : cosmology_interface.mod driver_interface.mod physicalconstants_interface.mod chem_data.mod grid_interface.mod photoionization_data.mod eos_interface.mod Eos.h Multispecies.h constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Chem_computeDt.o : CHEM_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Chem_computeDt.o : chem_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Chem_init.o : CHEM_DATA.mod MULTISPECIES_INTERFACE.mod SIMULATION_DATA.mod PHYSICALCONSTANTS_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod Multispecies.h constants.h Flash.h 
else
Chem_init.o : chem_data.mod multispecies_interface.mod simulation_data.mod physicalconstants_interface.mod runtimeparameters_interface.mod driver_interface.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
ColumnDensity.o : COSMOLOGY_INTERFACE.mod SIMULATION_DATA.mod RADIATIONFIELD_DATA.mod TIMERS_INTERFACE.mod DRIVER_DATA.mod GRID_INTERFACE.mod COLUMNDENSITY_DATA.mod constants.h Flash.h Flash_mpi.h 
else
ColumnDensity.o : cosmology_interface.mod simulation_data.mod radiationfield_data.mod timers_interface.mod driver_data.mod grid_interface.mod columndensity_data.mod constants.h Flash.h Flash_mpi.h
endif

ColumnDensity_finalize.o: 

ifdef MODUPPERCASE
ColumnDensity_init.o : RUNTIMEPARAMETERS_INTERFACE.mod COLUMNDENSITY_DATA.mod CD_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
ColumnDensity_init.o : runtimeparameters_interface.mod columndensity_data.mod cd_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Conductivity.o : CONDUCTIVITY_INTERFACE.mod Flash.h 
else
Conductivity.o : conductivity_interface.mod Flash.h
endif

Conductivity_finalize.o: 
Conductivity_init.o: 
Cool.o: 
Cool_computeDt.o: constants.h Flash.h
Cool_finalize.o: 
Cool_init.o: 
Cool_unitTest.o: 

ifdef MODUPPERCASE
CosmologicalFunctions.o : UT_INTERPOLATIONINTERFACE.mod COSMOLOGY_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
CosmologicalFunctions.o : ut_interpolationinterface.mod cosmology_data.mod driver_interface.mod constants.h
endif

Cosmology_cdmPowerSpectrum.o: 
Cosmology_computeDeltaCrit.o: 

ifdef MODUPPERCASE
Cosmology_computeDt.o : COSMOLOGY_DATA.mod DRIVER_INTERFACE.mod  
else
Cosmology_computeDt.o : cosmology_data.mod driver_interface.mod 
endif

Cosmology_computeVariance.o: 
Cosmology_finalize.o: 

ifdef MODUPPERCASE
Cosmology_getOldRedshift.o : COSMOLOGY_DATA.mod  
else
Cosmology_getOldRedshift.o : cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_getParams.o : COSMOLOGY_DATA.mod  
else
Cosmology_getParams.o : cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_getRedshift.o : COSMOLOGY_DATA.mod  
else
Cosmology_getRedshift.o : cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_init.o : IO_INTERFACE.mod PHYSICALCONSTANTS_INTERFACE.mod COSMOLOGY_DATA.mod DRIVER_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod constants.h Flash.h 
else
Cosmology_init.o : io_interface.mod physicalconstants_interface.mod cosmology_data.mod driver_interface.mod runtimeparameters_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Cosmology_massToLength.o : COSMOLOGY_DATA.mod  
else
Cosmology_massToLength.o : cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_redshiftHydro.o : COSMOLOGY_DATA.mod EOS_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Cosmology_redshiftHydro.o : cosmology_data.mod eos_interface.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Cosmology_redshiftToTime.o : COSMOLOGY_DATA.mod  
else
Cosmology_redshiftToTime.o : cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_sendOutputData.o : IO_INTERFACE.mod COSMOLOGY_DATA.mod  
else
Cosmology_sendOutputData.o : io_interface.mod cosmology_data.mod 
endif


ifdef MODUPPERCASE
Cosmology_solveFriedmannEqn.o : COSMOLOGY_DATA.mod  
else
Cosmology_solveFriedmannEqn.o : cosmology_data.mod 
endif

Cosmology_unitTest.o: 
Debugger_init.o: 
Deleptonize.o: 
Deleptonize_finalize.o: 
Deleptonize_getBounce.o: 
Deleptonize_init.o: 
Diffuse.o: 
Diffuse_advance1D.o: 
Diffuse_computeDt.o: constants.h Flash.h
Diffuse_finalize.o: 
Diffuse_fluxLimiter.o: 
Diffuse_init.o: 
Diffuse_setContextInfo.o: 
Diffuse_solveScalar.o: 
Diffuse_species.o: constants.h Flash.h
Diffuse_therm.o: constants.h Flash.h
Diffuse_visc.o: constants.h Flash.h

ifdef MODUPPERCASE
Driver_abortFlash.o : DRIVER_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
Driver_abortFlash.o : driver_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_checkMPIErrorCode.o : DRIVER_DATA.mod DRIVER_INTERFACE.mod  
else
Driver_checkMPIErrorCode.o : driver_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
Driver_computeDt.o : COSMOLOGY_INTERFACE.mod RADTRANS_INTERFACE.mod COOL_INTERFACE.mod DIFFUSE_INTERFACE.mod HEAT_INTERFACE.mod PARTICLES_INTERFACE.mod DRIVER_DATA.mod RADIATIONFIELD_INTERFACE.mod BURN_INTERFACE.mod GRID_INTERFACE.mod HYDRO_INTERFACE.mod HEATEXCHANGE_INTERFACE.mod STIR_INTERFACE.mod constants.h Flash.h 
else
Driver_computeDt.o : cosmology_interface.mod radtrans_interface.mod cool_interface.mod diffuse_interface.mod heat_interface.mod particles_interface.mod driver_data.mod radiationfield_interface.mod burn_interface.mod grid_interface.mod hydro_interface.mod heatexchange_interface.mod stir_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_computeDtTemp.o : DRIVER_DATA.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Driver_computeDtTemp.o : driver_data.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_driftBlock.o : DRIVER_DATA.mod TREE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Driver_driftBlock.o : driver_data.mod tree.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_driftSetSrcLoc.o : DRIVER_DATA.mod  
else
Driver_driftSetSrcLoc.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_driftUnk.o : DRIVER_DATA.mod TREE.mod constants.h Flash.h 
else
Driver_driftUnk.o : driver_data.mod tree.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_evolveFlash.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod RADTRANS_INTERFACE.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod DIFFUSE_INTERFACE.mod TIMERS_INTERFACE.mod DRIVER_DATA.mod PROFILER_INTERFACE.mod LOGFILE_INTERFACE.mod PARTICLES_INTERFACE.mod GRAVITY_INTERFACE.mod HYDRO_INTERFACE.mod EOS_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
Driver_evolveFlash.o : io_interface.mod cosmology_interface.mod radtrans_interface.mod driver_interface.mod grid_interface.mod diffuse_interface.mod timers_interface.mod driver_data.mod profiler_interface.mod logfile_interface.mod particles_interface.mod gravity_interface.mod hydro_interface.mod eos_interface.mod simulation_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_finalizeFlash.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod INCOMPNS_INTERFACE.mod MULTISPECIES_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod SOLIDMECHANICS_INTERFACE.mod TIMERS_INTERFACE.mod NSE_INTERFACE.mod DRIVER_DATA.mod IMBOUND_INTERFACE.mod SIMULATION_INTERFACE.mod PARTICLES_INTERFACE.mod GRAVITY_INTERFACE.mod HYDRO_INTERFACE.mod EOS_INTERFACE.mod  
else
Driver_finalizeFlash.o : io_interface.mod cosmology_interface.mod incompns_interface.mod multispecies_interface.mod grid_interface.mod driver_interface.mod runtimeparameters_interface.mod solidmechanics_interface.mod timers_interface.mod nse_interface.mod driver_data.mod imbound_interface.mod simulation_interface.mod particles_interface.mod gravity_interface.mod hydro_interface.mod eos_interface.mod 
endif


ifdef MODUPPERCASE
Driver_finalizeSourceTerms.o : BURN_INTERFACE.mod FLAME_INTERFACE.mod RADTRANS_INTERFACE.mod COOL_INTERFACE.mod DIFFUSE_INTERFACE.mod TURB_INTERFACE.mod HEAT_INTERFACE.mod POLYTROPE_INTERFACE.mod ENERGYDEPOSITION_INTERFACE.mod DELEPTONIZE_INTERFACE.mod HEATEXCHANGE_INTERFACE.mod STIR_INTERFACE.mod  
else
Driver_finalizeSourceTerms.o : burn_interface.mod flame_interface.mod radtrans_interface.mod cool_interface.mod diffuse_interface.mod turb_interface.mod heat_interface.mod polytrope_interface.mod energydeposition_interface.mod deleptonize_interface.mod heatexchange_interface.mod stir_interface.mod 
endif


ifdef MODUPPERCASE
Driver_getComm.o : DRIVER_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
Driver_getComm.o : driver_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
Driver_getDt.o : DRIVER_DATA.mod  
else
Driver_getDt.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_getElapsedWCTime.o : DRIVER_DATA.mod  
else
Driver_getElapsedWCTime.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_getMype.o : DRIVER_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
Driver_getMype.o : driver_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
Driver_getNStep.o : DRIVER_DATA.mod  
else
Driver_getNStep.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_getNumProcs.o : DRIVER_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
Driver_getNumProcs.o : driver_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
Driver_getSimTime.o : DRIVER_DATA.mod  
else
Driver_getSimTime.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_getTimeStamp.o : DRIVER_DATA.mod  
else
Driver_getTimeStamp.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_init.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Driver_init.o : io_interface.mod cosmology_interface.mod runtimeparameters_interface.mod driver_data.mod logfile_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_initFlash.o : DRIVER_INTERFACE.mod DRIVER_DATA.mod SIMULATION_INTERFACE.mod GRID_INTERFACE.mod MULTISPECIES_INTERFACE.mod PARTICLES_INTERFACE.mod PROFILER_INTERFACE.mod SIMULATION_DATA.mod PHYSICALCONSTANTS_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod SOLIDMECHANICS_INTERFACE.mod GRAVITY_INTERFACE.mod IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod FLAME_INTERFACE.mod INCOMPNS_INTERFACE.mod OPACITY_INTERFACE.mod TIMERS_INTERFACE.mod IMBOUND_INTERFACE.mod LOGFILE_INTERFACE.mod HYDRO_INTERFACE.mod EOS_INTERFACE.mod constants.h Flash.h 
else
Driver_initFlash.o : driver_interface.mod driver_data.mod simulation_interface.mod grid_interface.mod multispecies_interface.mod particles_interface.mod profiler_interface.mod simulation_data.mod physicalconstants_interface.mod runtimeparameters_interface.mod solidmechanics_interface.mod gravity_interface.mod io_interface.mod cosmology_interface.mod flame_interface.mod incompns_interface.mod opacity_interface.mod timers_interface.mod imbound_interface.mod logfile_interface.mod hydro_interface.mod eos_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_initMaterialProperties.o : MASSDIFFUSIVITY_INTERFACE.mod MAGNETICRESISTIVITY_INTERFACE.mod NSE_INTERFACE.mod CONDUCTIVITY_INTERFACE.mod VISCOSITY_INTERFACE.mod  
else
Driver_initMaterialProperties.o : massdiffusivity_interface.mod magneticresistivity_interface.mod nse_interface.mod conductivity_interface.mod viscosity_interface.mod 
endif


ifdef MODUPPERCASE
Driver_initParallel.o : DRIVER_DATA.mod  
else
Driver_initParallel.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_initSourceTerms.o : COLUMNDENSITY_INTERFACE.mod BURN_INTERFACE.mod FLAME_INTERFACE.mod RADTRANS_INTERFACE.mod COOL_INTERFACE.mod DIFFUSE_INTERFACE.mod IONIZE_INTERFACE.mod TURB_INTERFACE.mod HEAT_INTERFACE.mod RADIATIONFIELD_INTERFACE.mod PHOTOIONIZATION_INTERFACE.mod POLYTROPE_INTERFACE.mod CHEM_INTERFACE.mod ENERGYDEPOSITION_INTERFACE.mod DELEPTONIZE_INTERFACE.mod HEATEXCHANGE_INTERFACE.mod STIR_INTERFACE.mod  
else
Driver_initSourceTerms.o : columndensity_interface.mod burn_interface.mod flame_interface.mod radtrans_interface.mod cool_interface.mod diffuse_interface.mod ionize_interface.mod turb_interface.mod heat_interface.mod radiationfield_interface.mod photoionization_interface.mod polytrope_interface.mod chem_interface.mod energydeposition_interface.mod deleptonize_interface.mod heatexchange_interface.mod stir_interface.mod 
endif


ifdef MODUPPERCASE
Driver_logMemoryUsage.o : UT_SYSMEMDATA.mod DRIVER_DATA.mod LOGFILE_INTERFACE.mod UT_SYSMEMINTERFACE.mod constants.h Flash.h ut_sysMem.h 
else
Driver_logMemoryUsage.o : ut_sysmemdata.mod driver_data.mod logfile_interface.mod ut_sysmeminterface.mod constants.h Flash.h ut_sysMem.h
endif


ifdef MODUPPERCASE
Driver_mpiThreadSupport.o : DRIVER_DATA.mod  
else
Driver_mpiThreadSupport.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_putTimeStamp.o : DRIVER_DATA.mod  
else
Driver_putTimeStamp.o : driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_sendOutputData.o : IO_INTERFACE.mod DRIVER_DATA.mod  
else
Driver_sendOutputData.o : io_interface.mod driver_data.mod 
endif


ifdef MODUPPERCASE
Driver_setupParallelEnv.o : DRIVER_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Driver_setupParallelEnv.o : driver_data.mod runtimeparameters_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Driver_sourceTerms.o : COLUMNDENSITY_INTERFACE.mod BURN_INTERFACE.mod FLAME_INTERFACE.mod COOL_INTERFACE.mod CHEM_INTERFACE.mod IONIZE_INTERFACE.mod TURB_INTERFACE.mod HEAT_INTERFACE.mod PHOTOIONIZATION_INTERFACE.mod POLYTROPE_INTERFACE.mod DRIVER_DATA.mod RADIATIONFIELD_INTERFACE.mod ENERGYDEPOSITION_INTERFACE.mod DELEPTONIZE_INTERFACE.mod HEATEXCHANGE_INTERFACE.mod STIR_INTERFACE.mod  
else
Driver_sourceTerms.o : columndensity_interface.mod burn_interface.mod flame_interface.mod cool_interface.mod chem_interface.mod ionize_interface.mod turb_interface.mod heat_interface.mod photoionization_interface.mod polytrope_interface.mod driver_data.mod radiationfield_interface.mod energydeposition_interface.mod deleptonize_interface.mod heatexchange_interface.mod stir_interface.mod 
endif

Driver_superTimeStep.o: constants.h

ifdef MODUPPERCASE
Driver_verifyInitDt.o : COSMOLOGY_INTERFACE.mod DIFFUSE_INTERFACE.mod DRIVER_DATA.mod GRID_INTERFACE.mod HYDRO_INTERFACE.mod HEATEXCHANGE_INTERFACE.mod constants.h Flash.h 
else
Driver_verifyInitDt.o : cosmology_interface.mod diffuse_interface.mod driver_data.mod grid_interface.mod hydro_interface.mod heatexchange_interface.mod constants.h Flash.h
endif

EnergyDeposition.o: 
EnergyDeposition_finalize.o: 
EnergyDeposition_init.o: 

ifdef MODUPPERCASE
Eos.o : EOS_DATA.mod DRIVER_INTERFACE.mod EOS_LOCALINTERFACE.mod Eos.h constants.h Flash.h 
else
Eos.o : eos_data.mod driver_interface.mod eos_localinterface.mod Eos.h constants.h Flash.h
endif


ifdef MODUPPERCASE
Eos_finalize.o : EOS_LOCALINTERFACE.mod  
else
Eos_finalize.o : eos_localinterface.mod 
endif


ifdef MODUPPERCASE
Eos_getAbarZbar.o : EOS_DATA.mod MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod Multispecies.h Flash.h 
else
Eos_getAbarZbar.o : eos_data.mod multispecies_interface.mod driver_interface.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Eos_getData.o : DRIVER_INTERFACE.mod EOS_DATA.mod Eos.h constants.h Flash.h Eos_map.h 
else
Eos_getData.o : driver_interface.mod eos_data.mod Eos.h constants.h Flash.h Eos_map.h
endif


ifdef MODUPPERCASE
Eos_getParameters.o : DRIVER_INTERFACE.mod EOS_DATA.mod  
else
Eos_getParameters.o : driver_interface.mod eos_data.mod 
endif


ifdef MODUPPERCASE
Eos_getTempData.o : DRIVER_INTERFACE.mod EOS_DATA.mod Eos.h constants.h Flash.h Eos_map.h 
else
Eos_getTempData.o : driver_interface.mod eos_data.mod Eos.h constants.h Flash.h Eos_map.h
endif


ifdef MODUPPERCASE
Eos_guardCells.o : EOS_DATA.mod EOS_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Eos_guardCells.o : eos_data.mod eos_interface.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Eos_init.o : PHYSICALCONSTANTS_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod EOS_LOCALINTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod EOS_DATA.mod Eos.h constants.h Flash.h 
else
Eos_init.o : physicalconstants_interface.mod runtimeparameters_interface.mod eos_localinterface.mod logfile_interface.mod driver_interface.mod eos_data.mod Eos.h constants.h Flash.h
endif

Eos_logDiagnostics.o: 
Eos_nucOneZone.o: 

ifdef MODUPPERCASE
Eos_putData.o : EOS_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod Eos.h constants.h Flash.h Eos_map.h 
else
Eos_putData.o : eos_data.mod logfile_interface.mod driver_interface.mod Eos.h constants.h Flash.h Eos_map.h
endif


ifdef MODUPPERCASE
Eos_unitTest.o : LOGFILE_INTERFACE.mod  
else
Eos_unitTest.o : logfile_interface.mod 
endif


ifdef MODUPPERCASE
Eos_wrapped.o : EOS_DATA.mod EOS_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_INTERFACE.mod Eos.h constants.h Flash.h 
else
Eos_wrapped.o : eos_data.mod eos_interface.mod grid_interface.mod driver_interface.mod logfile_interface.mod Eos.h constants.h Flash.h
endif

Flame_computeAbarZbar.o: 
Flame_finalize.o: 
Flame_getProfile.o: 
Flame_getWidth.o: 
Flame_init.o: 
Flame_laminarSpeed.o: 
Flame_rhJump.o: Eos.h Flash.h
Flame_rhJumpReactive.o: Eos.h
Flame_step.o: 

ifdef MODUPPERCASE
Flash.o : DRIVER_INTERFACE.mod  
else
Flash.o : driver_interface.mod 
endif


ifdef MODUPPERCASE
Gravity_accelAtCoords.o : DRIVER_INTERFACE.mod  
else
Gravity_accelAtCoords.o : driver_interface.mod 
endif


ifdef MODUPPERCASE
Gravity_accelListOfBlocks.o : DRIVER_INTERFACE.mod GRAVITY_DATA.mod GRID_INTERFACE.mod GRAVITY_INTERFACE.mod constants.h Flash.h 
else
Gravity_accelListOfBlocks.o : driver_interface.mod gravity_data.mod grid_interface.mod gravity_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Gravity_accelOneBlock.o : DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Gravity_accelOneBlock.o : driver_interface.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Gravity_accelOneRow.o : GRAVITY_DATA.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Gravity_accelOneRow.o : gravity_data.mod grid_interface.mod constants.h Flash.h
endif

Gravity_bhAccBotNode.o: constants.h Flash.h
Gravity_bhAccNode.o: constants.h Flash.h
Gravity_bhBotNodeContrib.o: constants.h Flash.h FortranLangFeatures.fh
Gravity_bhEwald.o: constants.h Flash.h Flash_mpi.h
Gravity_bhFillBotNode.o: constants.h
Gravity_bhFinalizeBlock.o: constants.h
Gravity_bhGenEwaldField.o: constants.h Flash.h Flash_mpi.h
Gravity_bhGenEwaldFieldLevel.o: constants.h Flash.h Flash_mpi.h
Gravity_bhGetNodeStruct.o: 
Gravity_bhInitFieldVar.o: constants.h Flash.h
Gravity_bhMAC.o: constants.h Flash.h Flash_mpi.h
Gravity_bhNodeContrib.o: constants.h Flash.h FortranLangFeatures.fh
Gravity_bhNormalizeNode.o: constants.h Flash.h
Gravity_bhPartErr.o: constants.h Flash.h Flash_mpi.h
Gravity_bhPostprocNode.o: constants.h Flash.h Flash_mpi.h
Gravity_bhSelfContrib.o: constants.h FortranLangFeatures.fh
Gravity_bhStartBlock.o: constants.h Flash.h FortranLangFeatures.fh
Gravity_computeDt.o: 
Gravity_finalize.o: 

ifdef MODUPPERCASE
Gravity_init.o : PHYSICALCONSTANTS_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod GRAVITY_DATA.mod DRIVER_INTERFACE.mod LOGFILE_INTERFACE.mod constants.h Flash.h Multigrid.h 
else
Gravity_init.o : physicalconstants_interface.mod runtimeparameters_interface.mod gravity_data.mod driver_interface.mod logfile_interface.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
Gravity_potentialListOfBlocks.o : COSMOLOGY_INTERFACE.mod DRIVER_INTERFACE.mod PARTICLES_INTERFACE.mod TIMERS_INTERFACE.mod GRAVITY_DATA.mod GRID_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
Gravity_potentialListOfBlocks.o : cosmology_interface.mod driver_interface.mod particles_interface.mod timers_interface.mod gravity_data.mod grid_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Gravity_unitTest.o : LOGFILE_INTERFACE.mod  
else
Gravity_unitTest.o : logfile_interface.mod 
endif


ifdef MODUPPERCASE
Grid_GCPutScratch.o : GR_INTERFACE.mod GRID_INTERFACE.mod GR_GCSCRATCHDATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_GCPutScratch.o : gr_interface.mod grid_interface.mod gr_gcscratchdata.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_GCTransferOneBlk.o : GR_INTERFACE.mod GRID_INTERFACE.mod GR_GCSCRATCHDATA.mod constants.h Flash.h 
else
Grid_GCTransferOneBlk.o : gr_interface.mod grid_interface.mod gr_gcscratchdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_addToVar.o : GRID_INTERFACE.mod constants.h Flash.h Particles.h 
else
Grid_addToVar.o : grid_interface.mod constants.h Flash.h Particles.h
endif

Grid_advanceDiffusion.o: 
Grid_applyBCEdge.o: 
Grid_applyBCEdgeAllUnkVars.o: Flash.h

ifdef MODUPPERCASE
Grid_bcApplyToRegion.o : GR_BCINTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_bcApplyToRegion.o : gr_bcinterface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_bcApplyToRegionMixedGds.o : GRID_DATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GR_BCINTERFACE.mod constants.h Flash.h 
else
Grid_bcApplyToRegionMixedGds.o : grid_data.mod grid_interface.mod driver_interface.mod gr_bcinterface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_bcApplyToRegionSpecialized.o : DRIVER_INTERFACE.mod GRID_DATA.mod constants.h 
else
Grid_bcApplyToRegionSpecialized.o : driver_interface.mod grid_data.mod constants.h
endif

Grid_computeUserVars.o: 

ifdef MODUPPERCASE
Grid_computeVarDiff.o : TIMERS_INTERFACE.mod PHYSICALDATA.mod TREE.mod WORKSPACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Grid_computeVarDiff.o : timers_interface.mod physicaldata.mod tree.mod workspace.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_computeVarNorm.o : WORKSPACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod DRIVER_INTERFACE.mod PHYSICALDATA.mod constants.h Flash.h 
else
Grid_computeVarNorm.o : workspace.mod grid_data.mod tree.mod timers_interface.mod driver_interface.mod physicaldata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_conserveField.o : GRID_DATA.mod TREE.mod PARAMESH_INTERFACES.mod GRID_INTERFACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h  
else
Grid_conserveField.o : grid_data.mod tree.mod paramesh_interfaces.mod grid_interface.mod physicaldata.mod paramesh_dimensions.mod constants.h Flash.h 
endif


ifdef MODUPPERCASE
Grid_conserveFluxes.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_conserveFluxes.o : paramesh_interfaces.mod physicaldata.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_conserveToPrimitive.o : GRID_DATA.mod constants.h Flash.h 
else
Grid_conserveToPrimitive.o : grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_dump.o : PHYSICALDATA.mod GRID_DATA.mod Flash.h 
else
Grid_dump.o : physicaldata.mod grid_data.mod Flash.h
endif


ifdef MODUPPERCASE
Grid_extendedGetBlkBC.o : PARAMESH_DIMENSIONS.mod GR_INTERFACE.mod TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h 
else
Grid_extendedGetBlkBC.o : paramesh_dimensions.mod gr_interface.mod tree.mod driver_interface.mod grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_fillGuardCells.o : PHYSICALDATA.mod DRIVER_INTERFACE.mod GRID_DATA.mod TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod PARAMESH_MPI_INTERFACES.mod GR_INTERFACE.mod PARAMESH_DIMENSIONS.mod EOS_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
Grid_fillGuardCells.o : physicaldata.mod driver_interface.mod grid_data.mod timers_interface.mod paramesh_interfaces.mod logfile_interface.mod grid_interface.mod paramesh_mpi_interfaces.mod gr_interface.mod paramesh_dimensions.mod eos_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Grid_finalize.o : GR_SBINTERFACE.mod GR_PTINTERFACE.mod GR_BCINTERFACE.mod GRID_DATA.mod  
else
Grid_finalize.o : gr_sbinterface.mod gr_ptinterface.mod gr_bcinterface.mod grid_data.mod 
endif

Grid_formatNonRep.o: constants.h Flash.h

ifdef MODUPPERCASE
Grid_getBlkBC.o : GR_INTERFACE.mod TREE.mod GRID_DATA.mod constants.h 
else
Grid_getBlkBC.o : gr_interface.mod tree.mod grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getBlkBoundBox.o : TREE.mod DRIVER_INTERFACE.mod constants.h 
else
Grid_getBlkBoundBox.o : tree.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getBlkCenterCoords.o : TREE.mod constants.h 
else
Grid_getBlkCenterCoords.o : tree.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getBlkCornerID.o : TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
Grid_getBlkCornerID.o : tree.mod driver_interface.mod grid_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getBlkData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkIDFromPos.o : GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getBlkIDFromPos.o : gr_interface.mod grid_interface.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkIDFromPosForListsOfBlocks.o : GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getBlkIDFromPosForListsOfBlocks.o : grid_interface.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkIndexLimits.o : DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getBlkIndexLimits.o : driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkNeighBlkIDFromPos.o : GR_INTERFACE.mod constants.h 
else
Grid_getBlkNeighBlkIDFromPos.o : gr_interface.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getBlkNeighLevels.o : TREE.mod constants.h Flash.h 
else
Grid_getBlkNeighLevels.o : tree.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkPhysicalSize.o : TREE.mod constants.h 
else
Grid_getBlkPhysicalSize.o : tree.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getBlkPtr.o : PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getBlkPtr.o : paramesh_interfaces.mod workspace.mod physicaldata.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getBlkRefineLevel.o : TREE.mod  
else
Grid_getBlkRefineLevel.o : tree.mod 
endif


ifdef MODUPPERCASE
Grid_getBlkType.o : TREE.mod constants.h 
else
Grid_getBlkType.o : tree.mod constants.h
endif

Grid_getBoundboxCentroids.o: 

ifdef MODUPPERCASE
Grid_getCellCoords.o : DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getCellCoords.o : driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getDeltas.o : TREE.mod GRID_DATA.mod constants.h 
else
Grid_getDeltas.o : tree.mod grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getDomainBC.o : GRID_DATA.mod constants.h 
else
Grid_getDomainBC.o : grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getDomainBoundBox.o : GRID_DATA.mod constants.h 
else
Grid_getDomainBoundBox.o : grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getFluxData.o : PHYSICALDATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getFluxData.o : physicaldata.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getGeometry.o : GRID_DATA.mod  
else
Grid_getGeometry.o : grid_data.mod 
endif


ifdef MODUPPERCASE
Grid_getGlobalIndexLimits.o : TREE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getGlobalIndexLimits.o : tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getListOfBlocks.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getListOfBlocks.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getLocalNumBlks.o : TREE.mod  
else
Grid_getLocalNumBlks.o : tree.mod 
endif


ifdef MODUPPERCASE
Grid_getMaxCommonRefinement.o : TREE.mod DRIVER_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
Grid_getMaxCommonRefinement.o : tree.mod driver_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Grid_getMaxRefinement.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
Grid_getMaxRefinement.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Grid_getMinCellSize.o : GRID_DATA.mod  
else
Grid_getMinCellSize.o : grid_data.mod 
endif


ifdef MODUPPERCASE
Grid_getMinCellSizes.o : GRID_DATA.mod constants.h 
else
Grid_getMinCellSizes.o : grid_data.mod constants.h
endif


ifdef MODUPPERCASE
Grid_getNeighProcList.o : UT_QSORTINTERFACE.mod GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod GR_INTERFACETYPEDECL.mod constants.h Flash.h 
else
Grid_getNeighProcList.o : ut_qsortinterface.mod gr_interface.mod grid_interface.mod grid_data.mod gr_interfacetypedecl.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getNumVars.o : DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_getNumVars.o : driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getPlaneData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getPlaneData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getPointData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getPointData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getRowData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getRowData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getSingleCellCoords.o : DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getSingleCellCoords.o : driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_getSingleCellVol.o : GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_getSingleCellVol.o : grid_interface.mod grid_data.mod constants.h Flash.h
endif

Grid_getVarNonRep.o: constants.h Flash.h

ifdef MODUPPERCASE
Grid_guardCellMaskHook.o : BURN_INTERFACE.mod GRID_DATA.mod  
else
Grid_guardCellMaskHook.o : burn_interface.mod grid_data.mod 
endif


ifdef MODUPPERCASE
Grid_init.o : GRID_INTERFACE.mod GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod SIMULATION_INTERFACE.mod DRIVER_INTERFACE.mod PARAMESH_COMM_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
Grid_init.o : grid_interface.mod grid_data.mod runtimeparameters_interface.mod tree.mod simulation_interface.mod driver_interface.mod paramesh_comm_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_initDomain.o : IO_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod GR_SBINTERFACE.mod LOGFILE_INTERFACE.mod PARTICLES_INTERFACE.mod GR_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
Grid_initDomain.o : io_interface.mod grid_interface.mod grid_data.mod tree.mod timers_interface.mod paramesh_interfaces.mod gr_sbinterface.mod logfile_interface.mod particles_interface.mod gr_interface.mod simulation_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_limitAbundance.o : GRID_DATA.mod constants.h Flash.h 
else
Grid_limitAbundance.o : grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_mapMeshToParticles.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod PARTICLES_INTERFACE.mod GridParticles.h constants.h Flash.h Particles.h 
else
Grid_mapMeshToParticles.o : grid_interface.mod driver_interface.mod particles_interface.mod GridParticles.h constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Grid_mapParticlesToMesh.o : GRID_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod TREE.mod TIMERS_INTERFACE.mod PARTICLES_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod GR_PTMAPDATA.mod GR_PTINTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
Grid_mapParticlesToMesh.o : grid_interface.mod grid_data.mod gr_ptdata.mod tree.mod timers_interface.mod particles_interface.mod logfile_interface.mod driver_interface.mod gr_ptmapdata.mod gr_ptinterface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
Grid_markBlkDerefine.o : TREE.mod  
else
Grid_markBlkDerefine.o : tree.mod 
endif


ifdef MODUPPERCASE
Grid_markBlkRefine.o : TREE.mod  
else
Grid_markBlkRefine.o : tree.mod 
endif


ifdef MODUPPERCASE
Grid_markRefineDerefine.o : RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod GRID_INTERFACE.mod GRID_DATA.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
Grid_markRefineDerefine.o : runtimeparameters_interface.mod tree.mod grid_interface.mod grid_data.mod simulation_interface.mod constants.h Flash.h
endif

Grid_markRefineSpecialized.o: constants.h

ifdef MODUPPERCASE
Grid_moveParticles.o : GRID_INTERFACE.mod GR_PTINTERFACE.mod GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h 
else
Grid_moveParticles.o : grid_interface.mod gr_ptinterface.mod grid_data.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_notifySolnDataUpdate.o : GRID_DATA.mod  
else
Grid_notifySolnDataUpdate.o : grid_data.mod 
endif

Grid_outsideBoundBox.o: constants.h Flash.h
Grid_parseNonRep.o: Flash.h
Grid_pfft.o: 
Grid_pfftFinalize.o: 
Grid_pfftGetIndexLimits.o: constants.h
Grid_pfftInit.o: constants.h
Grid_pfftMapFromOutput.o: 
Grid_pfftMapToInput.o: 

ifdef MODUPPERCASE
Grid_primitiveToConserve.o : GRID_DATA.mod constants.h Flash.h 
else
Grid_primitiveToConserve.o : grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_putBlkData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_putBlkData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_putFluxData.o : PHYSICALDATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_putFluxData.o : physicaldata.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_putLocalNumBlks.o : TREE.mod  
else
Grid_putLocalNumBlks.o : tree.mod 
endif


ifdef MODUPPERCASE
Grid_putPlaneData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_putPlaneData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_putPointData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_putPointData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_putRowData.o : GR_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_putRowData.o : gr_interface.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_receiveInputData.o : PHYSICALDATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_receiveInputData.o : physicaldata.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_releaseBlkPtr.o : DRIVER_DATA.mod PHYSICALDATA.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_releaseBlkPtr.o : driver_data.mod physicaldata.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_renormAbundance.o : GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Grid_renormAbundance.o : grid_interface.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_renormMassScalars.o : SIMULATION_INTERFACE.mod constants.h Flash.h 
else
Grid_renormMassScalars.o : simulation_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_restrictAllLevels.o : GRID_DATA.mod TIMERS_INTERFACE.mod GRID_INTERFACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h 
else
Grid_restrictAllLevels.o : grid_data.mod timers_interface.mod grid_interface.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_restrictByLevels.o : PARAMESH_MPI_INTERFACES.mod PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod GRID_DATA.mod constants.h Flash.h Flash_mpi.h 
else
Grid_restrictByLevels.o : paramesh_mpi_interfaces.mod paramesh_interfaces.mod tree.mod physicaldata.mod grid_data.mod constants.h Flash.h Flash_mpi.h
endif

Grid_sbBroadcastParticles.o: 
Grid_sbCreateGroups.o: 
Grid_sbSelectMaster.o: 

ifdef MODUPPERCASE
Grid_sendOutputData.o : IO_INTERFACE.mod TREE.mod GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
Grid_sendOutputData.o : io_interface.mod tree.mod grid_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Grid_setFluxHandling.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod DRIVER_INTERFACE.mod Flash.h 
else
Grid_setFluxHandling.o : physicaldata.mod paramesh_dimensions.mod driver_interface.mod Flash.h
endif


ifdef MODUPPERCASE
Grid_setSolverDbgContextInfo.o : GR_SOLVERSDATA.mod  
else
Grid_setSolverDbgContextInfo.o : gr_solversdata.mod 
endif

Grid_solidBodyUnitTest.o: 

ifdef MODUPPERCASE
Grid_solvePoisson.o : GRID_DATA.mod TIMERS_INTERFACE.mod GR_HGINTERFACE.mod DRIVER_INTERFACE.mod GR_HGDATA.mod GR_ISOINTERFACE.mod constants.h Flash.h Multigrid.h 
else
Grid_solvePoisson.o : grid_data.mod timers_interface.mod gr_hginterface.mod driver_interface.mod gr_hgdata.mod gr_isointerface.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
Grid_sortParticles.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h Particles.h 
else
Grid_sortParticles.o : grid_interface.mod driver_interface.mod gr_ptdata.mod constants.h Flash.h Particles.h
endif

Grid_unitTest.o: 

ifdef MODUPPERCASE
Grid_updateRefinement.o : GRID_DATA.mod TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod GR_INTERFACE.mod constants.h Flash.h 
else
Grid_updateRefinement.o : grid_data.mod timers_interface.mod paramesh_interfaces.mod logfile_interface.mod grid_interface.mod gr_interface.mod constants.h Flash.h
endif

Grid_updateSolidBodyForces.o: Flash.h
Heat.o: 
Heat_computeDt.o: constants.h Flash.h
Heat_finalize.o: 
Heat_init.o: 
Heatexchange.o: 
Heatexchange_computeDt.o: constants.h Flash.h
Heatexchange_finalize.o: 
Heatexchange_init.o: 

ifdef MODUPPERCASE
Hydro.o : HYDRO_DATA.mod HY_PPM_INTERFACE.mod constants.h Flash.h 
else
Hydro.o : hydro_data.mod hy_ppm_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Hydro_computeDt.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Hydro_computeDt.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Hydro_detectShock.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Hydro_detectShock.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Hydro_finalize.o : HYDRO_DATA.mod Flash.h 
else
Hydro_finalize.o : hydro_data.mod Flash.h
endif


ifdef MODUPPERCASE
Hydro_init.o : RUNTIMEPARAMETERS_INTERFACE.mod HYDRO_DATA.mod GRID_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Hydro_init.o : runtimeparameters_interface.mod hydro_data.mod grid_interface.mod logfile_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Hydro_mapBcType.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Hydro_mapBcType.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Hydro_recalibrateEints.o : HY_UHD_MULTITEMPDATA.mod HYDRO_DATA.mod GRID_INTERFACE.mod  constants.h Flash.h 
else
Hydro_recalibrateEints.o : hy_uhd_multitempdata.mod hydro_data.mod grid_interface.mod  constants.h Flash.h
endif

Hydro_sendOutputData.o: 

ifdef MODUPPERCASE
Hydro_shockStrength.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Hydro_shockStrength.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
IO_checkForPlot.o : IO_DATA.mod  
else
IO_checkForPlot.o : io_data.mod 
endif


ifdef MODUPPERCASE
IO_endRayWrite.o : IO_DATA.mod DRIVER_INTERFACE.mod  
else
IO_endRayWrite.o : io_data.mod driver_interface.mod 
endif

IO_finalize.o: constants.h Flash.h

ifdef MODUPPERCASE
IO_getPrevScalar.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
IO_getPrevScalar.o : io_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
IO_getScalar.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
IO_getScalar.o : io_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
IO_init.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod GRID_INTERFACE.mod IO_PTINTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod SIMULATION_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
IO_init.o : io_interface.mod cosmology_interface.mod grid_interface.mod io_ptinterface.mod runtimeparameters_interface.mod io_data.mod simulation_interface.mod driver_interface.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
IO_initRPsFromCheckpoint.o : RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
IO_initRPsFromCheckpoint.o : runtimeparameters_interface.mod io_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
IO_output.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod GRID_INTERFACE.mod IO_PTINTERFACE.mod TIMERS_INTERFACE.mod IO_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash_mpi.h 
else
IO_output.o : io_interface.mod cosmology_interface.mod grid_interface.mod io_ptinterface.mod timers_interface.mod io_data.mod logfile_interface.mod driver_interface.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
IO_outputFinal.o : IO_INTERFACE.mod IO_DATA.mod constants.h 
else
IO_outputFinal.o : io_interface.mod io_data.mod constants.h
endif


ifdef MODUPPERCASE
IO_outputInitial.o : IO_INTERFACE.mod IO_DATA.mod GRID_INTERFACE.mod constants.h Flash_mpi.h 
else
IO_outputInitial.o : io_interface.mod io_data.mod grid_interface.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
IO_readCheckpoint.o : IO_INTERFACE.mod IO_DATA.mod SIMULATION_INTERFACE.mod TIMERS_INTERFACE.mod constants.h Flash.h 
else
IO_readCheckpoint.o : io_interface.mod io_data.mod simulation_interface.mod timers_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
IO_readParticles.o : IOPARTICLES_DATA.mod PARTICLES_INTERFACE.mod IO_PTINTERFACE.mod  
else
IO_readParticles.o : ioparticles_data.mod particles_interface.mod io_ptinterface.mod 
endif

IO_readUserArray.o: 

ifdef MODUPPERCASE
IO_sendOutputData.o : IO_INTERFACE.mod IO_DATA.mod  
else
IO_sendOutputData.o : io_interface.mod io_data.mod 
endif


ifdef MODUPPERCASE
IO_setScalar.o : IO_DATA.mod  
else
IO_setScalar.o : io_data.mod 
endif


ifdef MODUPPERCASE
IO_startRayWrite.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
IO_startRayWrite.o : io_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
IO_updateScalars.o : IO_INTERFACE.mod COSMOLOGY_INTERFACE.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod RADIATIONFIELD_INTERFACE.mod SIMULATION_INTERFACE.mod PARTICLES_INTERFACE.mod HYDRO_INTERFACE.mod  
else
IO_updateScalars.o : io_interface.mod cosmology_interface.mod grid_interface.mod driver_interface.mod radiationfield_interface.mod simulation_interface.mod particles_interface.mod hydro_interface.mod 
endif


ifdef MODUPPERCASE
IO_writeCheckpoint.o : IO_INTERFACE.mod TIMERS_INTERFACE.mod IO_DATA.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod SIMULATION_INTERFACE.mod io_flash.h constants.h Flash.h 
else
IO_writeCheckpoint.o : io_interface.mod timers_interface.mod io_data.mod logfile_interface.mod grid_interface.mod simulation_interface.mod io_flash.h constants.h Flash.h
endif


ifdef MODUPPERCASE
IO_writeIntegralQuantities.o : IO_DATA.mod GRID_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
IO_writeIntegralQuantities.o : io_data.mod grid_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
IO_writeParticles.o : IOPARTICLES_DATA.mod COSMOLOGY_INTERFACE.mod PARTICLES_DATA.mod PARTICLES_INTERFACE.mod IO_PTINTERFACE.mod IO_INTERFACE.mod TIMERS_INTERFACE.mod IO_DATA.mod SIMULATION_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_INTERFACE.mod constants.h Flash.h Particles.h Flash_mpi.h 
else
IO_writeParticles.o : ioparticles_data.mod cosmology_interface.mod particles_data.mod particles_interface.mod io_ptinterface.mod io_interface.mod timers_interface.mod io_data.mod simulation_interface.mod driver_interface.mod logfile_interface.mod constants.h Flash.h Particles.h Flash_mpi.h
endif


ifdef MODUPPERCASE
IO_writePlotfile.o : IO_INTERFACE.mod TIMERS_INTERFACE.mod IO_DATA.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod io_flash.h constants.h Flash.h 
else
IO_writePlotfile.o : io_interface.mod timers_interface.mod io_data.mod logfile_interface.mod grid_interface.mod io_flash.h constants.h Flash.h
endif


ifdef MODUPPERCASE
IO_writeRays.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash_mpi.h 
else
IO_writeRays.o : io_data.mod driver_interface.mod constants.h Flash_mpi.h
endif

IO_writeUserArray.o: 
ImBound.o: Flash.h
ImBound_finalize.o: 
ImBound_init.o: 
ImBound_setData.o: 
IncompNS.o: constants.h Flash.h
IncompNS_computeDt.o: 
IncompNS_finalize.o: 
IncompNS_init.o: 
IncompNS_sendOutputData.o: 
Ionize.o: 
Ionize_equil.o: Ionize.h
Ionize_finalize.o: 
Ionize_init.o: 

ifdef MODUPPERCASE
Logfile_break.o : LOGFILE_INTERFACE.mod LOGFILE_DATA.mod constants.h 
else
Logfile_break.o : logfile_interface.mod logfile_data.mod constants.h
endif


ifdef MODUPPERCASE
Logfile_close.o : LOGFILE_DATA.mod constants.h 
else
Logfile_close.o : logfile_data.mod constants.h
endif


ifdef MODUPPERCASE
Logfile_create.o : MULTISPECIES_INTERFACE.mod PHYSICALCONSTANTS_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_DATA.mod constants.h Flash.h 
else
Logfile_create.o : multispecies_interface.mod physicalconstants_interface.mod runtimeparameters_interface.mod logfile_interface.mod driver_interface.mod logfile_data.mod constants.h Flash.h
endif

Logfile_finalize.o: 
Logfile_getDateTimeStr.o: 

ifdef MODUPPERCASE
Logfile_init.o : RUNTIMEPARAMETERS_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_DATA.mod constants.h Flash.h 
else
Logfile_init.o : runtimeparameters_interface.mod logfile_interface.mod driver_interface.mod logfile_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Logfile_open.o : LOGFILE_INTERFACE.mod LOGFILE_DATA.mod  
else
Logfile_open.o : logfile_interface.mod logfile_data.mod 
endif


ifdef MODUPPERCASE
Logfile_stamp.o : LOGFILE_INTERFACE.mod LOGFILE_DATA.mod constants.h 
else
Logfile_stamp.o : logfile_interface.mod logfile_data.mod constants.h
endif


ifdef MODUPPERCASE
Logfile_stampMessage.o : LOGFILE_INTERFACE.mod LOGFILE_DATA.mod constants.h 
else
Logfile_stampMessage.o : logfile_interface.mod logfile_data.mod constants.h
endif


ifdef MODUPPERCASE
Logfile_stampVarMask.o : SIMULATION_INTERFACE.mod LOGFILE_INTERFACE.mod LOGFILE_DATA.mod constants.h Flash.h 
else
Logfile_stampVarMask.o : simulation_interface.mod logfile_interface.mod logfile_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Logfile_writeSummary.o : LOGFILE_INTERFACE.mod LOGFILE_DATA.mod constants.h 
else
Logfile_writeSummary.o : logfile_interface.mod logfile_data.mod constants.h
endif

MagneticResistivity.o: Flash.h
MagneticResistivity_finalize.o: 
MagneticResistivity_fullState.o: constants.h Flash.h
MagneticResistivity_init.o: 
MassDiffusivity.o: Flash.h
MassDiffusivity_finalize.o: 
MassDiffusivity_init.o: 
Multispecies_finalize.o: 

ifdef MODUPPERCASE
Multispecies_getAvg.o : MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod LOGFILE_INTERFACE.mod Multispecies.h Flash.h 
else
Multispecies_getAvg.o : multispecies_interface.mod driver_interface.mod logfile_interface.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_getProperty.o : DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h 
else
Multispecies_getProperty.o : driver_interface.mod multispecies_data.mod Multispecies.h
endif


ifdef MODUPPERCASE
Multispecies_getPropertyVector.o : DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h 
else
Multispecies_getPropertyVector.o : driver_interface.mod multispecies_data.mod Multispecies.h
endif


ifdef MODUPPERCASE
Multispecies_getSum.o : MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod Multispecies.h Flash.h 
else
Multispecies_getSum.o : multispecies_interface.mod driver_interface.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_getSumFrac.o : MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h Flash.h 
else
Multispecies_getSumFrac.o : multispecies_interface.mod driver_interface.mod multispecies_data.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_getSumInv.o : MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h Flash.h 
else
Multispecies_getSumInv.o : multispecies_interface.mod driver_interface.mod multispecies_data.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_getSumSqr.o : MULTISPECIES_INTERFACE.mod DRIVER_INTERFACE.mod Multispecies.h Flash.h 
else
Multispecies_getSumSqr.o : multispecies_interface.mod driver_interface.mod Multispecies.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_init.o : RUNTIMEPARAMETERS_INTERFACE.mod SIMULATION_INTERFACE.mod DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h constants.h Flash.h 
else
Multispecies_init.o : runtimeparameters_interface.mod simulation_interface.mod driver_interface.mod multispecies_data.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_list.o : SIMULATION_INTERFACE.mod MULTISPECIES_DATA.mod Eos.h constants.h Flash.h 
else
Multispecies_list.o : simulation_interface.mod multispecies_data.mod Eos.h constants.h Flash.h
endif


ifdef MODUPPERCASE
Multispecies_setProperty.o : DRIVER_INTERFACE.mod MULTISPECIES_DATA.mod Multispecies.h 
else
Multispecies_setProperty.o : driver_interface.mod multispecies_data.mod Multispecies.h
endif

Multispecies_unitTest.o: 
NSE_finalAtDens.o: 
NSE_finalAtPres.o: 
NSE_finalize.o: 
NSE_init.o: 
Opacity.o: 
Opacity_finalize.o: 
Opacity_init.o: 
Opacity_unitTest.o: 
Paramesh_finalize.o: 

ifdef MODUPPERCASE
Paramesh_init.o : GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod PARAMESH_INTERFACES.mod DRIVER_INTERFACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h 
else
Paramesh_init.o : grid_data.mod runtimeparameters_interface.mod paramesh_interfaces.mod driver_interface.mod physicaldata.mod paramesh_dimensions.mod constants.h Flash.h
endif

Particles_accumCount.o: 

ifdef MODUPPERCASE
Particles_addNew.o : PT_INTERFACE.mod PARTICLES_DATA.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h Particles.h Flash_mpi.h 
else
Particles_addNew.o : pt_interface.mod particles_data.mod logfile_interface.mod grid_interface.mod constants.h Flash.h Particles.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Particles_advance.o : PT_INTERFACE.mod PARTICLES_DATA.mod PARTICLES_INTERFACE.mod GRID_INTERFACE.mod GridParticles.h constants.h Flash.h Particles.h 
else
Particles_advance.o : pt_interface.mod particles_data.mod particles_interface.mod grid_interface.mod GridParticles.h constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_clean.o : PARTICLES_DATA.mod constants.h Flash.h 
else
Particles_clean.o : particles_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Particles_computeDt.o : PARTICLES_DATA.mod PARTICLES_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Particles_computeDt.o : particles_data.mod particles_interface.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Particles_dump.o : PARTICLES_DATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Particles_dump.o : particles_data.mod grid_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Particles_finalize.o : PT_INTERFACE.mod PARTICLES_DATA.mod  
else
Particles_finalize.o : pt_interface.mod particles_data.mod 
endif


ifdef MODUPPERCASE
Particles_getCountPerBlk.o : PARTICLES_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
Particles_getCountPerBlk.o : particles_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Particles_getGlobalNum.o : PARTICLES_DATA.mod LOGFILE_INTERFACE.mod  
else
Particles_getGlobalNum.o : particles_data.mod logfile_interface.mod 
endif


ifdef MODUPPERCASE
Particles_getLocalNum.o : PARTICLES_DATA.mod  
else
Particles_getLocalNum.o : particles_data.mod 
endif


ifdef MODUPPERCASE
Particles_init.o : PARTICLES_DATA.mod PARTICLES_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod PT_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod GridParticles.h constants.h Flash.h Particles.h 
else
Particles_init.o : particles_data.mod particles_interface.mod runtimeparameters_interface.mod pt_interface.mod logfile_interface.mod driver_interface.mod GridParticles.h constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_initData.o : PARTICLES_DATA.mod DRIVER_INTERFACE.mod PARTICLES_INTERFACE.mod PT_INTERFACE.mod SIMULATION_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_initData.o : particles_data.mod driver_interface.mod particles_interface.mod pt_interface.mod simulation_interface.mod grid_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_initForces.o : PT_INTERFACE.mod PARTICLES_DATA.mod PARTICLES_INTERFACE.mod GRID_INTERFACE.mod Flash.h Particles.h 
else
Particles_initForces.o : pt_interface.mod particles_data.mod particles_interface.mod grid_interface.mod Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_initPositions.o : PT_INTERFACE.mod PARTICLES_DATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_initPositions.o : pt_interface.mod particles_data.mod driver_interface.mod grid_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_longRangeForce.o : PARTICLES_DATA.mod GRID_INTERFACE.mod GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod SMOOTH_PARTICLES.mod DRIVER_INTERFACE.mod GRAVITY_INTERFACE.mod constants.h Flash.h Particles.h Flash_mpi.h 
else
Particles_longRangeForce.o : particles_data.mod grid_interface.mod grid_data.mod runtimeparameters_interface.mod smooth_particles.mod driver_interface.mod gravity_interface.mod constants.h Flash.h Particles.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Particles_manageLost.o : PARTICLES_DATA.mod Particles.h 
else
Particles_manageLost.o : particles_data.mod Particles.h
endif


ifdef MODUPPERCASE
Particles_mapFromMesh.o : PT_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_mapFromMesh.o : pt_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_mapToMeshOneBlk.o : PARTICLES_DATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Particles_mapToMeshOneBlk.o : particles_data.mod driver_interface.mod grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Particles_putLocalNum.o : PARTICLES_DATA.mod  
else
Particles_putLocalNum.o : particles_data.mod 
endif


ifdef MODUPPERCASE
Particles_sendOutputData.o : IO_INTERFACE.mod PARTICLES_DATA.mod PARTICLES_INTERFACE.mod Flash_mpi.h 
else
Particles_sendOutputData.o : io_interface.mod particles_data.mod particles_interface.mod Flash_mpi.h
endif

Particles_shortRangeForce.o: 
Particles_sinkAccelGasOnSinks.o: 
Particles_sinkAccelSinksOnGas.o: 
Particles_sinkAdvanceParticles.o: 
Particles_sinkComputeDt.o: 
Particles_sinkCreateAccrete.o: 
Particles_sinkInit.o: 
Particles_sinkMarkRefineDerefine.o: 
Particles_sinkMoveParticles.o: 
Particles_sinkSendOutputData.o: 
Particles_sinkSortParticles.o: 
Particles_sinkSyncWithParticles.o: 

ifdef MODUPPERCASE
Particles_specifyMethods.o : PARTICLES_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_specifyMethods.o : particles_data.mod driver_interface.mod constants.h Flash.h Particles.h
endif

Particles_unitTest.o: constants.h Flash.h

ifdef MODUPPERCASE
Particles_updateAttributes.o : TIMERS_INTERFACE.mod PARTICLES_DATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_updateAttributes.o : timers_interface.mod particles_data.mod grid_interface.mod driver_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_updateGridVar.o : PARTICLES_DATA.mod GRID_INTERFACE.mod Flash.h Particles.h 
else
Particles_updateGridVar.o : particles_data.mod grid_interface.mod Flash.h Particles.h
endif


ifdef MODUPPERCASE
Particles_updateRefinement.o : PARTICLES_DATA.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod PARTICLES_INTERFACE.mod constants.h Flash.h Particles.h 
else
Particles_updateRefinement.o : particles_data.mod logfile_interface.mod grid_interface.mod particles_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
Photoionization.o : PHOTOIONIZATION_DATA.mod CHEM_DATA.mod RADIATIONFIELD_DATA.mod GRID_INTERFACE.mod COSMOLOGY_INTERFACE.mod constants.h Flash.h 
else
Photoionization.o : photoionization_data.mod chem_data.mod radiationfield_data.mod grid_interface.mod cosmology_interface.mod constants.h Flash.h
endif

Photoionization_finalize.o: 

ifdef MODUPPERCASE
Photoionization_init.o : PHOTOIONIZATION_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod RADIATIONFIELD_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Photoionization_init.o : photoionization_data.mod runtimeparameters_interface.mod radiationfield_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
PhysicalConstants_get.o : PHYSICALCONSTANTS_INTERFACE.mod PHYSICALCONSTANTS_DATA.mod constants.h 
else
PhysicalConstants_get.o : physicalconstants_interface.mod physicalconstants_data.mod constants.h
endif


ifdef MODUPPERCASE
PhysicalConstants_init.o : RUNTIMEPARAMETERS_INTERFACE.mod PHYSICALCONSTANTS_DATA.mod DRIVER_INTERFACE.mod PC_INTERFACE.mod constants.h 
else
PhysicalConstants_init.o : runtimeparameters_interface.mod physicalconstants_data.mod driver_interface.mod pc_interface.mod constants.h
endif


ifdef MODUPPERCASE
PhysicalConstants_list.o : PHYSICALCONSTANTS_DATA.mod  
else
PhysicalConstants_list.o : physicalconstants_data.mod 
endif


ifdef MODUPPERCASE
PhysicalConstants_listUnits.o : PHYSICALCONSTANTS_DATA.mod  
else
PhysicalConstants_listUnits.o : physicalconstants_data.mod 
endif

PhysicalConstants_unitTest.o: 
Polytrope.o: 
Polytrope_finalize.o: 
Polytrope_init.o: 
PrimordialChemistry.o: 
PrimordialChemistry_computeDt.o: constants.h
PrimordialChemistry_finalize.o: 
PrimordialChemistry_init.o: 
Profiler_getSummary.o: 
Profiler_init.o: 
Profiler_start.o: 
Profiler_stop.o: 
RadTrans.o: 
RadTrans_computeDt.o: constants.h
RadTrans_finalize.o: 

ifdef MODUPPERCASE
RadTrans_getDbgContext.o : RADTRANS_INTERFACE.mod  
else
RadTrans_getDbgContext.o : radtrans_interface.mod 
endif


ifdef MODUPPERCASE
RadTrans_init.o : RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod  
else
RadTrans_init.o : runtimeparameters_interface.mod driver_interface.mod 
endif

RadTrans_mgdEFromT.o: constants.h
RadTrans_mgdGetBound.o: 
RadTrans_mgdSetBc.o: 
RadTrans_mgdSetBound.o: 
RadTrans_mgdSetEnergy.o: constants.h
RadTrans_planckInt.o: 
RadTrans_sumEnergy.o: 

ifdef MODUPPERCASE
RadiationField.o : COSMOLOGY_INTERFACE.mod DRIVER_DATA.mod COLUMNDENSITY_DATA.mod RADIATIONFIELD_DATA.mod GRID_INTERFACE.mod Multispecies.h constants.h Flash.h 
else
RadiationField.o : cosmology_interface.mod driver_data.mod columndensity_data.mod radiationfield_data.mod grid_interface.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
RadiationField_computeDt.o : COSMOLOGY_INTERFACE.mod DRIVER_DATA.mod RADIATIONFIELD_DATA.mod DRIVER_INTERFACE.mod  
else
RadiationField_computeDt.o : cosmology_interface.mod driver_data.mod radiationfield_data.mod driver_interface.mod 
endif

RadiationField_finalize.o: 

ifdef MODUPPERCASE
RadiationField_init.o : IO_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod CHEM_DATA.mod RADIATIONFIELD_DATA.mod DRIVER_DATA.mod DRIVER_INTERFACE.mod Multispecies.h constants.h Flash.h 
else
RadiationField_init.o : io_interface.mod runtimeparameters_interface.mod chem_data.mod radiationfield_data.mod driver_data.mod driver_interface.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
RadiationField_sendOutputData.o : IO_INTERFACE.mod RADIATIONFIELD_DATA.mod  
else
RadiationField_sendOutputData.o : io_interface.mod radiationfield_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_add.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_add.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_bcast.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_bcast.o : runtimeparameters_data.mod 
endif

RuntimeParameters_finalize.o: 

ifdef MODUPPERCASE
RuntimeParameters_get.o : RUNTIMEPARAMETERS_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
RuntimeParameters_get.o : runtimeparameters_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
RuntimeParameters_getAll.o : RUNTIMEPARAMETERS_DATA.mod constants.h 
else
RuntimeParameters_getAll.o : runtimeparameters_data.mod constants.h
endif


ifdef MODUPPERCASE
RuntimeParameters_getNum.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_getNum.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_getNumIgn.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_getNumIgn.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_getPrev.o : RUNTIMEPARAMETERS_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
RuntimeParameters_getPrev.o : runtimeparameters_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
RuntimeParameters_init.o : IO_INTERFACE.mod RUNTIMEPARAMETERS_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
RuntimeParameters_init.o : io_interface.mod runtimeparameters_data.mod runtimeparameters_interface.mod driver_interface.mod constants.h Flash.h Flash_mpi.h
endif

RuntimeParameters_mapStrToInt.o: Eos.h constants.h Flash.h

ifdef MODUPPERCASE
RuntimeParameters_read.o : RUNTIMEPARAMETERS_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod NAMEVALUELL_DATA.mod constants.h Flash.h 
else
RuntimeParameters_read.o : runtimeparameters_data.mod runtimeparameters_interface.mod driver_interface.mod namevaluell_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
RuntimeParameters_set.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_set.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_setPrev.o : RUNTIMEPARAMETERS_DATA.mod  
else
RuntimeParameters_setPrev.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
RuntimeParameters_stampIgnored.o : RUNTIMEPARAMETERS_DATA.mod LOGFILE_INTERFACE.mod constants.h 
else
RuntimeParameters_stampIgnored.o : runtimeparameters_data.mod logfile_interface.mod constants.h
endif

Simulation_adjustEvolution.o: 
Simulation_computeAnalytical.o: 
Simulation_customizeProlong.o: 
Simulation_defineDomain.o: constants.h
Simulation_finalize.o: 
Simulation_getRenormGroup.o: constants.h Flash.h
Simulation_getVarnameType.o: constants.h Flash.h
Simulation_guardCellMaskHook.o: 

ifdef MODUPPERCASE
Simulation_init.o : RUNTIMEPARAMETERS_INTERFACE.mod SIMULATION_DATA.mod PHYSICALCONSTANTS_INTERFACE.mod COSMOLOGY_DATA.mod DRIVER_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
Simulation_init.o : runtimeparameters_interface.mod simulation_data.mod physicalconstants_interface.mod cosmology_data.mod driver_data.mod logfile_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
Simulation_initBlock.o : MULTISPECIES_INTERFACE.mod GRID_INTERFACE.mod SIMULATION_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod EOS_INTERFACE.mod Eos.h Multispecies.h constants.h Flash.h 
else
Simulation_initBlock.o : multispecies_interface.mod grid_interface.mod simulation_data.mod runtimeparameters_interface.mod driver_interface.mod eos_interface.mod Eos.h Multispecies.h constants.h Flash.h
endif

Simulation_initParticleAttrib.o: 
Simulation_initRestart.o: 

ifdef MODUPPERCASE
Simulation_initSpecies.o : PHYSICALCONSTANTS_INTERFACE.mod MULTISPECIES_INTERFACE.mod Multispecies.h constants.h Flash.h 
else
Simulation_initSpecies.o : physicalconstants_interface.mod multispecies_interface.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
Simulation_mapIntToStr.o : RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Simulation_mapIntToStr.o : runtimeparameters_interface.mod driver_interface.mod grid_interface.mod constants.h Flash.h
endif

Simulation_mapParticlesVar.o: constants.h Flash.h

ifdef MODUPPERCASE
Simulation_mapStrToInt.o : RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h 
else
Simulation_mapStrToInt.o : runtimeparameters_interface.mod driver_interface.mod grid_interface.mod constants.h Flash.h
endif

Simulation_sendOutputData.o: 
SolidMechanics.o: Flash.h SolidMechanics.h
SolidMechanics_computeDt.o: 
SolidMechanics_finalize.o: 
SolidMechanics_init.o: 
Stir.o: 
Stir_computeDt.o: constants.h Flash.h
Stir_finalize.o: 
Stir_init.o: 
Timers_finalize.o: 

ifdef MODUPPERCASE
Timers_getSummary.o : TIMERS_DATA.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash_mpi.h 
else
Timers_getSummary.o : timers_data.mod logfile_interface.mod grid_interface.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
Timers_init.o : TIMERS_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod constants.h 
else
Timers_init.o : timers_data.mod runtimeparameters_interface.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
Timers_reset.o : TIMERS_DATA.mod  
else
Timers_reset.o : timers_data.mod 
endif


ifdef MODUPPERCASE
Timers_start.o : TIMERS_DATA.mod DRIVER_INTERFACE.mod TIMERS_INTERFACE.mod  
else
Timers_start.o : timers_data.mod driver_interface.mod timers_interface.mod 
endif


ifdef MODUPPERCASE
Timers_stop.o : TIMERS_DATA.mod TIMERS_INTERFACE.mod  
else
Timers_stop.o : timers_data.mod timers_interface.mod 
endif

TreeCol_bhAccBotNode.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhAccNode.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhBotNodeContrib.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhFillBotNode.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhFinalizeBlock.o: constants.h
TreeCol_bhGetNodeStruct.o: 
TreeCol_bhInitFieldVar.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhMAC.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhNodeContrib.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhNormalizeNode.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhPartErr.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhPostprocNode.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhSelfContrib.o: constants.h Flash.h Flash_mpi.h
TreeCol_bhStartBlock.o: constants.h Flash.h
TreeCol_finalize.o: 

ifdef MODUPPERCASE
TreeCol_init.o : RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod  
else
TreeCol_init.o : runtimeparameters_interface.mod driver_interface.mod 
endif

Turb_calc.o: 
Turb_finalize.o: 
Turb_init.o: 
Viscosity.o: Flash.h
Viscosity_finalize.o: 
Viscosity_init.o: 

ifdef MODUPPERCASE
amr_1blk_bcset.o : DRIVER_INTERFACE.mod GRID_DATA.mod TREE.mod GRID_INTERFACE.mod GR_INTERFACE.mod GR_BCINTERFACE.mod constants.h Flash.h 
else
amr_1blk_bcset.o : driver_interface.mod grid_data.mod tree.mod grid_interface.mod gr_interface.mod gr_bcinterface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
amr_1blk_cc_cp_remote.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_cp_remote.o : mpi_morton.mod tree.mod timings.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_gen_unk_fun.o : TIMINGS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_gen_unk_fun.o : timings.mod paramesh_preprocessor.fh
endif

amr_1blk_cc_prol_gen_work_fun.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_1blk_cc_prol_genorder.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_genorder.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_inject.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_inject.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_linear.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_linear.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_user.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_user.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_work_genorder.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_work_genorder.o : tree.mod physicaldata.mod paramesh_dimensions.mod workspace.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_work_inject.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod  
else
amr_1blk_cc_prol_work_inject.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod workspace.mod 
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_work_linear.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod  
else
amr_1blk_cc_prol_work_linear.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod workspace.mod 
endif


ifdef MODUPPERCASE
amr_1blk_cc_prol_work_user.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_cc_prol_work_user.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_copy_soln.o : TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_1blk_copy_soln.o : tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_ec_cp_remote.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_ec_cp_remote.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_ec_prol_gen_fun.o : PROLONG_ARRAYS.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_ec_prol_gen_fun.o : prolong_arrays.mod tree.mod timings.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_ec_prol_genorder.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_ec_prol_genorder.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_ec_prol_linear.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_ec_prol_linear.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_ec_prol_user.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_ec_prol_user.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_fc_clean_divb.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_fc_clean_divb.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_fc_cp_remote.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_fc_cp_remote.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_dbz.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_fc_prol_dbz.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_gen_fun.o : PROLONG_ARRAYS.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_fc_prol_gen_fun.o : prolong_arrays.mod tree.mod timings.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_genorder.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_fc_prol_genorder.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_inject.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_fc_prol_inject.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_linear.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_fc_prol_linear.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_fc_prol_user.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_fc_prol_user.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_guardcell_reset.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_guardcell_reset.o : physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_guardcell_srl.o : TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_guardcell_srl.o : tree.mod timings.mod paramesh_interfaces.mod workspace.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_nc_cp_remote.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_nc_cp_remote.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_nc_prol_gen_fun.o : PROLONG_ARRAYS.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_1blk_nc_prol_gen_fun.o : prolong_arrays.mod tree.mod timings.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_1blk_nc_prol_genorder.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_nc_prol_genorder.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_nc_prol_linear.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_nc_prol_linear.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_nc_prol_user.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_nc_prol_user.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_save_soln.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_1blk_save_soln.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_t_to_perm.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_1blk_t_to_perm.o : tree.mod physicaldata.mod paramesh_dimensions.mod workspace.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_1blk_to_perm.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod TIMINGS.mod paramesh_preprocessor.fh 
else
amr_1blk_to_perm.o : tree.mod physicaldata.mod paramesh_dimensions.mod workspace.mod timings.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_bcset_init.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_bcset_init.o : physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_block_geometry.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_block_geometry.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod workspace.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_check_refine.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
amr_check_refine.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_close.o : TREE.mod PROLONG_ARRAYS.mod MPI_MORTON.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_close.o : tree.mod prolong_arrays.mod mpi_morton.mod timings.mod paramesh_interfaces.mod workspace.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_compute_morton.o : TREE.mod IO.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_compute_morton.o : tree.mod io.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif

amr_get_new_nodetypes.o: 

ifdef MODUPPERCASE
amr_initialize.o : MPI_MORTON.mod PROLONG_ARRAYS.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_initialize.o : mpi_morton.mod prolong_arrays.mod tree.mod timings.mod paramesh_interfaces.mod workspace.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_mg_init.o : AMR_MG_COMMON.mod TREE.mod paramesh_preprocessor.fh 
else
amr_mg_init.o : amr_mg_common.mod tree.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_mg_morton_process.o : TREE.mod AMR_MG_COMMON.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod  
else
amr_mg_morton_process.o : tree.mod amr_mg_common.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod 
endif


ifdef MODUPPERCASE
amr_mg_prolong.o : AMR_MG_COMMON.mod TREE.mod  
else
amr_mg_prolong.o : amr_mg_common.mod tree.mod 
endif


ifdef MODUPPERCASE
amr_mg_restrict.o : PARAMESH_INTERFACES.mod TREE.mod  
else
amr_mg_restrict.o : paramesh_interfaces.mod tree.mod 
endif


ifdef MODUPPERCASE
amr_migrate_tree_data.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_migrate_tree_data.o : tree.mod paramesh_interfaces.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_morton_order.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_morton_order.o : tree.mod paramesh_interfaces.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_morton_process.o : TREE.mod TIMINGS.mod IO.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_morton_process.o : tree.mod timings.mod io.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_mpi_find_blk_in_buffer.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
amr_mpi_find_blk_in_buffer.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_perm_to_1blk.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_perm_to_1blk.o : mpi_morton.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_prolong_cc_fun_init.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_prolong_cc_fun_init.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod workspace.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_prolong_face_fun_init.o : TREE.mod PROLONG_ARRAYS.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod  
else
amr_prolong_face_fun_init.o : tree.mod prolong_arrays.mod physicaldata.mod paramesh_dimensions.mod workspace.mod 
endif


ifdef MODUPPERCASE
amr_prolong_fun_init.o : PARAMESH_INTERFACES.mod  
else
amr_prolong_fun_init.o : paramesh_interfaces.mod 
endif


ifdef MODUPPERCASE
amr_prolong_gen_unk1_fun.o : PHYSICALDATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h umap.h 
else
amr_prolong_gen_unk1_fun.o : physicaldata.mod driver_interface.mod grid_interface.mod grid_data.mod constants.h Flash.h umap.h
endif


ifdef MODUPPERCASE
amr_prolong_gen_work1_fun.o : GRID_DATA.mod GRID_INTERFACE.mod WORKSPACE.mod DRIVER_INTERFACE.mod constants.h Flash.h umap.h 
else
amr_prolong_gen_work1_fun.o : grid_data.mod grid_interface.mod workspace.mod driver_interface.mod constants.h Flash.h umap.h
endif

amr_q_sort.o: paramesh_preprocessor.fh
amr_q_sort_real.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_reorder_grid.o : TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_reorder_grid.o : tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_ec_fun.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_ec_fun.o : paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_ec_genorder.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_ec_genorder.o : physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif

amr_restrict_ec_user.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_restrict_edge.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_restrict_edge.o : physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_restrict_fc_fun.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_fc_fun.o : paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_fc_genorder.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_fc_genorder.o : physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif

amr_restrict_fc_user.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_restrict_nc_fun.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_nc_fun.o : paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_nc_genorder.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_nc_genorder.o : physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif

amr_restrict_nc_user.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_restrict_red.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod  
else
amr_restrict_red.o : physicaldata.mod paramesh_dimensions.mod 
endif


ifdef MODUPPERCASE
amr_restrict_unk_fun.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_unk_fun.o : paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_unk_genorder.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
amr_restrict_unk_genorder.o : physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif

amr_restrict_unk_user.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_restrict_work_fun.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_restrict_work_fun.o : paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod workspace.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_restrict_work_fun_recip.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod  
else
amr_restrict_work_fun_recip.o : physicaldata.mod paramesh_dimensions.mod workspace.mod 
endif


ifdef MODUPPERCASE
amr_restrict_work_genorder.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod paramesh_preprocessor.fh 
else
amr_restrict_work_genorder.o : physicaldata.mod paramesh_dimensions.mod workspace.mod paramesh_preprocessor.fh
endif

amr_restrict_work_user.o: paramesh_preprocessor.fh

ifdef MODUPPERCASE
amr_set_runtime_parameters.o : DRIVER_INTERFACE.mod GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod TIMINGS.mod LOGFILE_INTERFACE.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod constants.h paramesh_preprocessor.fh 
else
amr_set_runtime_parameters.o : driver_interface.mod grid_data.mod runtimeparameters_interface.mod tree.mod timings.mod logfile_interface.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.h paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_sort_by_work.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh Flash.h 
else
amr_sort_by_work.o : tree.mod paramesh_interfaces.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh Flash.h
endif


ifdef MODUPPERCASE
amr_sort_morton.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_sort_morton.o : tree.mod paramesh_interfaces.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_sort_morton_reorder_grid.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_sort_morton_reorder_grid.o : tree.mod paramesh_interfaces.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
amr_system_calls.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
amr_system_calls.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
avisco.o : DRIVER_INTERFACE.mod constants.h 
else
avisco.o : driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
cd_addColumnDensity.o : PHYSICALCONSTANTS_INTERFACE.mod COLUMNDENSITY_DATA.mod MULTISPECIES_INTERFACE.mod Multispecies.h constants.h Flash.h 
else
cd_addColumnDensity.o : physicalconstants_interface.mod columndensity_data.mod multispecies_interface.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
ch_bsimp_step.o : CHEM_DATA.mod  
else
ch_bsimp_step.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_bsimp_step_local.o : CHEM_DATA.mod  
else
ch_bsimp_step_local.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_calcCoolingRate.o : ERF_UTIL.mod CHEM_DATA.mod DRIVER_INTERFACE.mod  
else
ch_calcCoolingRate.o : erf_util.mod chem_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
ch_chemRates.o : ERF_UTIL.mod CHEM_DATA.mod  
else
ch_chemRates.o : erf_util.mod chem_data.mod 
endif


ifdef MODUPPERCASE
ch_computeEquilibrium.o : CHEM_DATA.mod DRIVER_INTERFACE.mod  
else
ch_computeEquilibrium.o : chem_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
ch_evolveChemDt.o : CHEM_DATA.mod  
else
ch_evolveChemDt.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_networkDerivs.o : ERF_UTIL.mod CHEM_DATA.mod constants.h 
else
ch_networkDerivs.o : erf_util.mod chem_data.mod constants.h
endif


ifdef MODUPPERCASE
ch_networkDerivsPack.o : CHEM_DATA.mod  
else
ch_networkDerivsPack.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_networkJacobnNumericalPack.o : CHEM_DATA.mod  
else
ch_networkJacobnNumericalPack.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_poly_extrap.o : CHEM_DATA.mod  
else
ch_poly_extrap.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_ratesInterp.o : CHEM_DATA.mod DRIVER_INTERFACE.mod  
else
ch_ratesInterp.o : chem_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
ch_setEquilibriumAbundancesHe.o : CHEM_DATA.mod  
else
ch_setEquilibriumAbundancesHe.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_thermoRates.o : CHEM_DATA.mod  
else
ch_thermoRates.o : chem_data.mod 
endif


ifdef MODUPPERCASE
ch_thermoRatesInterp.o : CHEM_DATA.mod DRIVER_INTERFACE.mod  
else
ch_thermoRatesInterp.o : chem_data.mod driver_interface.mod 
endif

clean_field.o: 

ifdef MODUPPERCASE
cma_flatten.o : HYDRO_DATA.mod Flash.h 
else
cma_flatten.o : hydro_data.mod Flash.h
endif

coeff.o: 

ifdef MODUPPERCASE
compress_fetch_list.o : PARAMESH_INTERFACES.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
compress_fetch_list.o : paramesh_interfaces.mod mpi_morton.mod paramesh_preprocessor.fh
endif

concatStringWithInt.o: constants.h

ifdef MODUPPERCASE
csm_friedmannDeriv.o : COSMOLOGY_DATA.mod  
else
csm_friedmannDeriv.o : cosmology_data.mod 
endif

csm_integrateFriedmann.o: 
current_date_time.o: 

ifdef MODUPPERCASE
detect.o : HYDRO_DATA.mod  
else
detect.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
dr_shortenLastDt.o : DRIVER_DATA.mod LOGFILE_INTERFACE.mod  
else
dr_shortenLastDt.o : driver_data.mod logfile_interface.mod 
endif


ifdef MODUPPERCASE
dr_wallClockLimitExceeded.o : DRIVER_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
dr_wallClockLimitExceeded.o : driver_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
eos_fillMapLookup.o : EOS_DATA.mod constants.h Eos_map.h 
else
eos_fillMapLookup.o : eos_data.mod constants.h Eos_map.h
endif

eos_helmholtz.o: Eos.h Flash.h
eos_idealGamma.o: Eos.h Flash.h
eos_idealGamma3T.o: Eos.h Flash.h
eos_initGamma.o: 
eos_initHelmholtz.o: 

ifdef MODUPPERCASE
eos_initMgamma.o : EOS_MGAMMADATA.mod RUNTIMEPARAMETERS_INTERFACE.mod MULTISPECIES_INTERFACE.mod EOS_DATA.mod Eos.h Multispecies.h Flash.h 
else
eos_initMgamma.o : eos_mgammadata.mod runtimeparameters_interface.mod multispecies_interface.mod eos_data.mod Eos.h Multispecies.h Flash.h
endif

eos_initMtemp.o: 
eos_initNuclear.o: 
eos_initTabulated.o: 

ifdef MODUPPERCASE
eos_mgamma.o : EOS_MGAMMADATA.mod DRIVER_INTERFACE.mod EOS_DATA.mod MULTISPECIES_INTERFACE.mod Eos.h Multispecies.h constants.h Flash.h 
else
eos_mgamma.o : eos_mgammadata.mod driver_interface.mod eos_data.mod multispecies_interface.mod Eos.h Multispecies.h constants.h Flash.h
endif

eos_mtemp.o: Eos.h Flash.h
eos_nuclear.o: Eos.h Flash.h
eos_tabFinalize.o: 
eos_tabIonmix.o: Eos.h
eos_tabulated.o: Eos.h Flash.h

ifdef MODUPPERCASE
eos_variableMap.o : DRIVER_INTERFACE.mod Eos.h constants.h Flash.h Eos_map.h 
else
eos_variableMap.o : driver_interface.mod Eos.h constants.h Flash.h Eos_map.h
endif


ifdef MODUPPERCASE
fill_old_loc.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod IO.mod paramesh_preprocessor.fh 
else
fill_old_loc.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod io.mod paramesh_preprocessor.fh
endif

findWords.o: constants.h

ifdef MODUPPERCASE
flash_convert_cc_hook.o : PHYSICALDATA.mod GR_FLASHHOOK_INTERFACES.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
flash_convert_cc_hook.o : physicaldata.mod gr_flashhook_interfaces.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
flash_unconvert_cc_hook.o : PHYSICALDATA.mod GR_FLASHHOOK_INTERFACES.mod GRID_DATA.mod constants.h Flash.h 
else
flash_unconvert_cc_hook.o : physicaldata.mod gr_flashhook_interfaces.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
flaten.o : HYDRO_DATA.mod  
else
flaten.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
gr_GCAllocScratch.o : GRID_INTERFACE.mod GR_GCSCRATCHDATA.mod constants.h Flash.h 
else
gr_GCAllocScratch.o : grid_interface.mod gr_gcscratchdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_GCReleaseScratch.o : GR_GCSCRATCHDATA.mod constants.h Flash.h 
else
gr_GCReleaseScratch.o : gr_gcscratchdata.mod constants.h Flash.h
endif

gr_GCTransferOneBlk.o: constants.h Flash.h

ifdef MODUPPERCASE
gr_amr_dump_runtime_parameters.o : GRID_DATA.mod TREE.mod TIMINGS.mod IO.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
gr_amr_dump_runtime_parameters.o : grid_data.mod tree.mod timings.mod io.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
gr_bcApplyToAllBlks.o : GR_BCINTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_bcApplyToAllBlks.o : gr_bcinterface.mod grid_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_bcApplyToOneFace.o : GR_HGINTERFACE.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod GR_BCINTERFACE.mod constants.h Flash.h 
else
gr_bcApplyToOneFace.o : gr_hginterface.mod driver_interface.mod grid_interface.mod gr_bcinterface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_bcApplyToOneFaceAllGds.o : DRIVER_INTERFACE.mod GRID_INTERFACE.mod GR_BCINTERFACE.mod constants.h Flash.h 
else
gr_bcApplyToOneFaceAllGds.o : driver_interface.mod grid_interface.mod gr_bcinterface.mod constants.h Flash.h
endif

gr_bcFinalize.o: 

ifdef MODUPPERCASE
gr_bcGetRegion.o : PHYSICALDATA.mod WORKSPACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_bcGetRegion.o : physicaldata.mod workspace.mod driver_interface.mod constants.h Flash.h
endif

gr_bcHseInit.o: 

ifdef MODUPPERCASE
gr_bcInit.o : RUNTIMEPARAMETERS_INTERFACE.mod GR_BCDATA.mod Flash.h 
else
gr_bcInit.o : runtimeparameters_interface.mod gr_bcdata.mod Flash.h
endif


ifdef MODUPPERCASE
gr_bcMapBcType.o : HYDRO_INTERFACE.mod GR_BICGINTERFACE.mod GR_HGINTERFACE.mod GR_MGINTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_bcMapBcType.o : hydro_interface.mod gr_bicginterface.mod gr_hginterface.mod gr_mginterface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_bcPutRegion.o : PHYSICALDATA.mod WORKSPACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_bcPutRegion.o : physicaldata.mod workspace.mod driver_interface.mod constants.h Flash.h
endif

gr_bhFinalize.o: 
gr_bhInit.o: 
gr_bicgFinalize.o: 
gr_bicgInit.o: 
gr_bicgMapBcType.o: 

ifdef MODUPPERCASE
gr_checkDataType.o : DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h 
else
gr_checkDataType.o : driver_interface.mod grid_interface.mod constants.h
endif


ifdef MODUPPERCASE
gr_checkGridConsistency.o : IO_INTERFACE.mod GRID_DATA.mod TREE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod PARAMESH_MPI_INTERFACES.mod constants.h Flash.h Flash_mpi.h 
else
gr_checkGridConsistency.o : io_interface.mod grid_data.mod tree.mod logfile_interface.mod driver_interface.mod paramesh_mpi_interfaces.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_checkGridState.o : GR_INTERFACETYPEDECL.mod GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_checkGridState.o : gr_interfacetypedecl.mod gr_interface.mod grid_interface.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_commSetUp.o : PARAMESH_MPI_INTERFACES.mod GRID_DATA.mod constants.h 
else
gr_commSetUp.o : paramesh_mpi_interfaces.mod grid_data.mod constants.h
endif


ifdef MODUPPERCASE
gr_conserveToPrimitive.o : PARAMESH_DIMENSIONS.mod PHYSICALDATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_conserveToPrimitive.o : paramesh_dimensions.mod physicaldata.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_createBlock.o : TREE.mod DRIVER_INTERFACE.mod Flash.h 
else
gr_createBlock.o : tree.mod driver_interface.mod Flash.h
endif


ifdef MODUPPERCASE
gr_createDomain.o : GR_INTERFACE.mod TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
gr_createDomain.o : gr_interface.mod tree.mod grid_data.mod driver_interface.mod simulation_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_enforceMaxRefine.o : TREE.mod  
else
gr_enforceMaxRefine.o : tree.mod 
endif


ifdef MODUPPERCASE
gr_ensureValidNeighborInfo.o : GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod PHYSICALDATA.mod constants.h 
else
gr_ensureValidNeighborInfo.o : grid_data.mod tree.mod timers_interface.mod logfile_interface.mod driver_interface.mod physicaldata.mod constants.h
endif


ifdef MODUPPERCASE
gr_expandDomain.o : RADTRANS_INTERFACE.mod PARTICLES_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod TREE.mod TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod PHYSICALDATA.mod EOS_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
gr_expandDomain.o : radtrans_interface.mod particles_interface.mod grid_data.mod driver_interface.mod tree.mod timers_interface.mod paramesh_interfaces.mod logfile_interface.mod grid_interface.mod physicaldata.mod eos_interface.mod simulation_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_extendedGetCellCoords.o : TREE.mod GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_extendedGetCellCoords.o : tree.mod grid_interface.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_extendedGetDeltas.o : GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
gr_extendedGetDeltas.o : grid_interface.mod grid_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
gr_findAllNeghID.o : GRID_DATA.mod TREE.mod GR_INTERFACETYPEDECL.mod DRIVER_INTERFACE.mod GR_INTERFACE.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h 
else
gr_findAllNeghID.o : grid_data.mod tree.mod gr_interfacetypedecl.mod driver_interface.mod gr_interface.mod paramesh_dimensions.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_findBlock.o : GRID_INTERFACE.mod constants.h Flash.h 
else
gr_findBlock.o : grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_findMean.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h Flash_mpi.h 
else
gr_findMean.o : grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_findNeghID.o : GR_INTERFACE.mod TREE.mod GRID_DATA.mod GRID_INTERFACE.mod constants.h Flash.h 
else
gr_findNeghID.o : gr_interface.mod tree.mod grid_data.mod grid_interface.mod constants.h Flash.h
endif

gr_findWhichChild.o: constants.h Flash.h
gr_findWhichChildren.o: constants.h Flash.h

ifdef MODUPPERCASE
gr_freeCommRecvBuffer.o : MPI_MORTON.mod  
else
gr_freeCommRecvBuffer.o : mpi_morton.mod 
endif


ifdef MODUPPERCASE
gr_getBlkHandle.o : MPI_MORTON.mod TREE.mod GRID_DATA.mod Flash.h 
else
gr_getBlkHandle.o : mpi_morton.mod tree.mod grid_data.mod Flash.h
endif


ifdef MODUPPERCASE
gr_getCellFaceArea.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_getCellFaceArea.o : grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_getCellVol.o : GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_getCellVol.o : grid_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_getDataOffsets.o : GRID_INTERFACE.mod constants.h Flash.h 
else
gr_getDataOffsets.o : grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_getInteriorBlkPtr.o : PHYSICALDATA.mod WORKSPACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_getInteriorBlkPtr.o : physicaldata.mod workspace.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_hgBndry.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod WORKSPACE.mod GR_HGINTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Multigrid.h 
else
gr_hgBndry.o : grid_interface.mod driver_interface.mod grid_data.mod tree.mod timers_interface.mod gr_hgdata.mod workspace.mod gr_hginterface.mod physicaldata.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgFinalize.o : GR_HGDATA.mod DRIVER_INTERFACE.mod  
else
gr_hgFinalize.o : gr_hgdata.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
gr_hgGuardCell.o : TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod GR_HGINTERFACE.mod WORKSPACE.mod GR_HGDATA.mod GR_INTERFACE.mod constants.h Flash.h 
else
gr_hgGuardCell.o : timers_interface.mod paramesh_interfaces.mod gr_hginterface.mod workspace.mod gr_hgdata.mod gr_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_hgInit.o : GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod GR_HGDATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h Flash_mpi.h Multigrid.h 
else
gr_hgInit.o : grid_data.mod runtimeparameters_interface.mod tree.mod gr_hgdata.mod logfile_interface.mod driver_interface.mod paramesh_dimensions.mod constants.h Flash.h Flash_mpi.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgInitSource.o : GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod GR_HGINTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Flash_mpi.h Multigrid.h 
else
gr_hgInitSource.o : grid_data.mod tree.mod timers_interface.mod gr_hgdata.mod gr_hginterface.mod physicaldata.mod constants.h Flash.h Flash_mpi.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgLevelAdd.o : PHYSICALDATA.mod TREE.mod constants.h Multigrid.h 
else
gr_hgLevelAdd.o : physicaldata.mod tree.mod constants.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgLevelAddScalar.o : PHYSICALDATA.mod TREE.mod constants.h Multigrid.h 
else
gr_hgLevelAddScalar.o : physicaldata.mod tree.mod constants.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgLevelMultiplyScalar.o : PHYSICALDATA.mod TREE.mod constants.h Multigrid.h 
else
gr_hgLevelMultiplyScalar.o : physicaldata.mod tree.mod constants.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgLevelZero.o : PHYSICALDATA.mod TREE.mod constants.h Multigrid.h 
else
gr_hgLevelZero.o : physicaldata.mod tree.mod constants.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgMapBcType.o : WORKSPACE.mod PHYSICALDATA.mod GR_HGDATA.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h Multigrid.h 
else
gr_hgMapBcType.o : workspace.mod physicaldata.mod gr_hgdata.mod grid_data.mod driver_interface.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgNorm.o : WORKSPACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod DRIVER_INTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Multigrid.h 
else
gr_hgNorm.o : workspace.mod grid_data.mod tree.mod timers_interface.mod gr_hgdata.mod driver_interface.mod physicaldata.mod constants.h Flash.h Multigrid.h
endif

gr_hgPfftFinalize.o: 
gr_hgPfftInit.o: 
gr_hgPoissonSolve1D.o: Multigrid.h
gr_hgPoissonSolve2D.o: Multigrid.h
gr_hgPoissonSolve3D.o: Multigrid.h

ifdef MODUPPERCASE
gr_hgPoissonSolveBlock.o : PARAMESH_DIMENSIONS.mod TREE.mod Flash.h Multigrid.h 
else
gr_hgPoissonSolveBlock.o : paramesh_dimensions.mod tree.mod Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgProlongBndries.o : DRIVER_INTERFACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod WORKSPACE.mod GR_HGINTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Flash_mpi.h Multigrid.h 
else
gr_hgProlongBndries.o : driver_interface.mod grid_data.mod tree.mod timers_interface.mod gr_hgdata.mod workspace.mod gr_hginterface.mod physicaldata.mod constants.h Flash.h Flash_mpi.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgRecordNodeTypeState.o : TREE.mod GR_HGDATA.mod LOGFILE_INTERFACE.mod GRID_DATA.mod Flash_mpi.h 
else
gr_hgRecordNodeTypeState.o : tree.mod gr_hgdata.mod logfile_interface.mod grid_data.mod Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_hgResidual.o : GRID_INTERFACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod WORKSPACE.mod GR_HGINTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Multigrid.h 
else
gr_hgResidual.o : grid_interface.mod grid_data.mod tree.mod timers_interface.mod gr_hgdata.mod workspace.mod gr_hginterface.mod physicaldata.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgRestoreNodeTypes.o : TREE.mod GR_HGDATA.mod TIMERS_INTERFACE.mod GRID_DATA.mod Flash.h 
else
gr_hgRestoreNodeTypes.o : tree.mod gr_hgdata.mod timers_interface.mod grid_data.mod Flash.h
endif


ifdef MODUPPERCASE
gr_hgRestrict.o : GR_HGDATA.mod PHYSICALDATA.mod TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h Flash_mpi.h 
else
gr_hgRestrict.o : gr_hgdata.mod physicaldata.mod tree.mod driver_interface.mod grid_data.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_hgSetExtBoundary.o : GR_HGDATA.mod TREE.mod WORKSPACE.mod constants.h Flash.h Multigrid.h 
else
gr_hgSetExtBoundary.o : gr_hgdata.mod tree.mod workspace.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgSetMaxLevel.o : GR_HGDATA.mod TREE.mod TIMERS_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_hgSetMaxLevel.o : gr_hgdata.mod tree.mod timers_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_hgSetZeroBoundary.o : GR_HGDATA.mod PHYSICALDATA.mod TREE.mod TIMERS_INTERFACE.mod constants.h Flash.h Multigrid.h 
else
gr_hgSetZeroBoundary.o : gr_hgdata.mod physicaldata.mod tree.mod timers_interface.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgSolve.o : GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TIMERS_INTERFACE.mod GR_HGINTERFACE.mod LOGFILE_INTERFACE.mod GR_HGDATA.mod constants.h Flash.h Multigrid.h 
else
gr_hgSolve.o : grid_data.mod runtimeparameters_interface.mod timers_interface.mod gr_hginterface.mod logfile_interface.mod gr_hgdata.mod constants.h Flash.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hgSolveLevel.o : GRID_INTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod TREE.mod TIMERS_INTERFACE.mod GR_HGDATA.mod WORKSPACE.mod GR_HGINTERFACE.mod PHYSICALDATA.mod constants.h Flash.h Flash_mpi.h Multigrid.h 
else
gr_hgSolveLevel.o : grid_interface.mod grid_data.mod driver_interface.mod tree.mod timers_interface.mod gr_hgdata.mod workspace.mod gr_hginterface.mod physicaldata.mod constants.h Flash.h Flash_mpi.h Multigrid.h
endif


ifdef MODUPPERCASE
gr_hg_amr_1blk_bcset_work.o : GR_HGDATA.mod TREE.mod WORKSPACE.mod constants.h Flash.h Multigrid.h 
else
gr_hg_amr_1blk_bcset_work.o : gr_hgdata.mod tree.mod workspace.mod constants.h Flash.h Multigrid.h
endif

gr_hypreAddGraph.o: constants.h Flash.h
gr_hypreApplyBcToFace.o: constants.h Flash.h
gr_hypreComputeB.o: constants.h Flash.h
gr_hypreCreateMatrix.o: 
gr_hypreDestroyGrid.o: 
gr_hypreDestroySolver.o: 
gr_hypreExchangeFacB.o: 
gr_hypreFinalize.o: 
gr_hypreGetFaceB.o: constants.h Flash.h
gr_hypreGridStatus.o: 
gr_hypreInit.o: 
gr_hypreSetIniGuess.o: constants.h Flash.h
gr_hypreSetupGrid.o: 
gr_hypreSetupSolver.o: 
gr_hypreSolve.o: 
gr_hypreUpdateSoln.o: 

ifdef MODUPPERCASE
gr_initGeometry.o : RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
gr_initGeometry.o : runtimeparameters_interface.mod driver_interface.mod grid_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_initParameshArrays.o : GRID_DATA.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h 
else
gr_initParameshArrays.o : grid_data.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_initParameshDomainBboxes.o : PARAMESH_MPI_INTERFACES.mod TREE.mod PARAMESH_DIMENSIONS.mod GRID_DATA.mod constants.h 
else
gr_initParameshDomainBboxes.o : paramesh_mpi_interfaces.mod tree.mod paramesh_dimensions.mod grid_data.mod constants.h
endif


ifdef MODUPPERCASE
gr_isoFindMassCenter.o : GR_ISOMPOLEDATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_isoFindMassCenter.o : gr_isompoledata.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif

gr_isoImageBdry.o: 

ifdef MODUPPERCASE
gr_isoImageMass.o : GRID_INTERFACE.mod constants.h Flash.h 
else
gr_isoImageMass.o : grid_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoMpoleFinalize.o : GR_ISOMPOLEDATA.mod  
else
gr_isoMpoleFinalize.o : gr_isompoledata.mod 
endif


ifdef MODUPPERCASE
gr_isoMpoleInit.o : RUNTIMEPARAMETERS_INTERFACE.mod GRID_DATA.mod GRID_DATA.mod PHYSICALCONSTANTS_INTERFACE.mod GR_ISOMPOLEDATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_isoMpoleInit.o : runtimeparameters_interface.mod grid_data.mod grid_data.mod physicalconstants_interface.mod gr_isompoledata.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoMpoleMoments.o : GR_ISOMPOLEDATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_isoMpoleMoments.o : gr_isompoledata.mod grid_interface.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoMpolePotential.o : GR_ISOMPOLEDATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_isoMpolePotential.o : gr_isompoledata.mod grid_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoSumLocal.o : GR_ISOMPOLEDATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_isoSumLocal.o : gr_isompoledata.mod grid_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoZoneMoments.o : GR_ISOMPOLEDATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
gr_isoZoneMoments.o : gr_isompoledata.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_isoZonePotential.o : GR_ISOMPOLEDATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
gr_isoZonePotential.o : gr_isompoledata.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_makeMaskConsistent.o : PHYSICALDATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod EOS_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_makeMaskConsistent.o : physicaldata.mod grid_interface.mod driver_interface.mod eos_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_markDerefineByTime.o : TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod LOGFILE_INTERFACE.mod constants.h 
else
gr_markDerefineByTime.o : tree.mod driver_interface.mod grid_data.mod logfile_interface.mod constants.h
endif


ifdef MODUPPERCASE
gr_markEllipsoid.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_markEllipsoid.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_markInRadius.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_markInRadius.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_markInRectangle.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_markInRectangle.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_markRefineDerefine.o : PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod GRID_DATA.mod constants.h Flash.h Flash_mpi.h 
else
gr_markRefineDerefine.o : paramesh_interfaces.mod tree.mod physicaldata.mod paramesh_dimensions.mod grid_data.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_markVarThreshold.o : COSMOLOGY_INTERFACE.mod MULTISPECIES_INTERFACE.mod GRID_DATA.mod SIMULATION_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod DRIVER_DATA.mod GRID_INTERFACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod SINKPARTICLES_INTERFACE.mod SINKPARTICLES_DATA.mod Multispecies.h constants.h Flash.h Flash_mpi.h 
else
gr_markVarThreshold.o : cosmology_interface.mod multispecies_interface.mod grid_data.mod simulation_data.mod runtimeparameters_interface.mod tree.mod driver_data.mod grid_interface.mod physicaldata.mod paramesh_dimensions.mod sinkparticles_interface.mod sinkparticles_data.mod Multispecies.h constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_markWithRadius.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_markWithRadius.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif

gr_mgFinalize.o: 
gr_mgInit.o: 
gr_mgMapBcType.o: 
gr_mgPfftFinalize.o: 
gr_mgPfftInit.o: 
gr_mpoleAllocateRadialArrays.o: 
gr_mpoleCen1Dspherical.o: 
gr_mpoleCen2Dcylindrical.o: 
gr_mpoleCen2Dspherical.o: 
gr_mpoleCen3Dcartesian.o: 
gr_mpoleCen3Dcylindrical.o: 
gr_mpoleCenterOfExpansion.o: 
gr_mpoleCollectMoments.o: 
gr_mpoleDeallocateRadialArrays.o: 
gr_mpoleDumpMoments.o: 
gr_mpoleFinalize.o: 
gr_mpoleHeapsort.o: 
gr_mpoleInit.o: 
gr_mpoleMom1Dspherical.o: 
gr_mpoleMom2Dcylindrical.o: 
gr_mpoleMom2Dspherical.o: 
gr_mpoleMom3Dcartesian.o: 
gr_mpoleMom3Dcylindrical.o: 
gr_mpoleMomBins1Dspherical.o: 
gr_mpoleMomBins2Dcylindrical.o: 
gr_mpoleMomBins2Dspherical.o: 
gr_mpoleMomBins3Dcartesian.o: 
gr_mpoleMomBins3Dcylindrical.o: 
gr_mpoleMoments.o: 
gr_mpolePot1Dspherical.o: 
gr_mpolePot2Dcylindrical.o: 
gr_mpolePot2Dspherical.o: 
gr_mpolePot3Dcartesian.o: 
gr_mpolePot3Dcylindrical.o: 
gr_mpolePotentials.o: 
gr_mpolePrintRadialInfo.o: 
gr_mpoleRad1Dspherical.o: 
gr_mpoleRad2Dcylindrical.o: 
gr_mpoleRad2Dspherical.o: 
gr_mpoleRad3Dcartesian.o: 
gr_mpoleRad3Dcylindrical.o: 
gr_mpoleRadialSampling.o: 
gr_mpoleSetInnerZoneGrid.o: 
gr_mpoleSetOuterZoneGrid.o: 
gr_mpoleSetRadialBinData.o: 

ifdef MODUPPERCASE
gr_packBCs.o : DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_packBCs.o : driver_interface.mod constants.h Flash.h
endif

gr_pfftFinalize.o: 
gr_pfftInit.o: 
gr_pfftPoissonDirect.o: constants.h

ifdef MODUPPERCASE
gr_primitiveToConserve.o : PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_primitiveToConserve.o : physicaldata.mod paramesh_dimensions.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif

gr_ptAdvance.o: 

ifdef MODUPPERCASE
gr_ptApplyBC.o : GRID_INTERFACE.mod GR_PTINTERFACE.mod GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptApplyBC.o : grid_interface.mod gr_ptinterface.mod grid_data.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptApplyBCsOneBlk.o : GR_PTMAPDATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptApplyBCsOneBlk.o : gr_ptmapdata.mod driver_interface.mod grid_interface.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptDumpState.o : GRID_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod TREE.mod GR_PTINTERFACE.mod DRIVER_INTERFACE.mod GR_PTMAPDATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptDumpState.o : grid_interface.mod grid_data.mod gr_ptdata.mod tree.mod gr_ptinterface.mod driver_interface.mod gr_ptmapdata.mod logfile_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif

gr_ptFillBlkParticleInfo.o: 

ifdef MODUPPERCASE
gr_ptFinalize.o : LOGFILE_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod  
else
gr_ptFinalize.o : logfile_interface.mod grid_data.mod gr_ptdata.mod 
endif


ifdef MODUPPERCASE
gr_ptFindNegh.o : GRID_INTERFACE.mod GRID_DATA.mod TREE.mod GR_PTINTERFACE.mod DRIVER_INTERFACE.mod GR_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptFindNegh.o : grid_interface.mod grid_data.mod tree.mod gr_ptinterface.mod driver_interface.mod gr_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptGetChildData.o : GR_INTERFACE.mod TREE.mod GR_PTINTERFACE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptGetChildData.o : gr_interface.mod tree.mod gr_ptinterface.mod grid_data.mod driver_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptGetSrcDestCoords.o : GR_PTMAPDATA.mod DRIVER_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptGetSrcDestCoords.o : gr_ptmapdata.mod driver_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptHandleExcess.o : DRIVER_INTERFACE.mod GRID_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptHandleExcess.o : driver_interface.mod grid_interface.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptInit.o : RUNTIMEPARAMETERS_INTERFACE.mod LOGFILE_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod Flash.h  
else
gr_ptInit.o : runtimeparameters_interface.mod logfile_interface.mod grid_data.mod gr_ptdata.mod Flash.h 
endif


ifdef MODUPPERCASE
gr_ptLocalMatch.o : GR_PTINTERFACE.mod GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptLocalMatch.o : gr_ptinterface.mod gr_interface.mod grid_interface.mod grid_data.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptMapInit.o : GR_PTMAPDATA.mod RUNTIMEPARAMETERS_INTERFACE.mod DRIVER_INTERFACE.mod  
else
gr_ptMapInit.o : gr_ptmapdata.mod runtimeparameters_interface.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
gr_ptMarkRefineDerefine.o : GRID_INTERFACE.mod TREE.mod GRID_DATA.mod PARTICLES_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptMarkRefineDerefine.o : grid_interface.mod tree.mod grid_data.mod particles_interface.mod gr_ptdata.mod constants.h Flash.h
endif

gr_ptMove.o: 

ifdef MODUPPERCASE
gr_ptMoveMappedData.o : DRIVER_INTERFACE.mod GR_PTINTERFACE.mod TIMERS_INTERFACE.mod GRID_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h 
else
gr_ptMoveMappedData.o : driver_interface.mod gr_ptinterface.mod timers_interface.mod grid_data.mod logfile_interface.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_ptMoveOffBlk.o : GR_PTINTERFACE.mod GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptMoveOffBlk.o : gr_ptinterface.mod gr_interface.mod grid_interface.mod grid_data.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptMovePttoPt.o : DRIVER_INTERFACE.mod UT_SORTINTERFACE.mod GRID_DATA.mod TIMERS_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h Flash_mpi.h 
else
gr_ptMovePttoPt.o : driver_interface.mod ut_sortinterface.mod grid_data.mod timers_interface.mod gr_ptdata.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_ptMoveSieve.o : GRID_DATA.mod GR_PTDATA.mod TREE.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod GR_PTSIEVEINTERFACE.mod GR_PTINTERFACE.mod constants.h Flash.h 
else
gr_ptMoveSieve.o : grid_data.mod gr_ptdata.mod tree.mod logfile_interface.mod driver_interface.mod gr_ptsieveinterface.mod gr_ptinterface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptNextProcPair.o : GRID_DATA.mod DRIVER_INTERFACE.mod GR_PTDATA.mod  
else
gr_ptNextProcPair.o : grid_data.mod driver_interface.mod gr_ptdata.mod 
endif


ifdef MODUPPERCASE
gr_ptOffProcMap.o : GR_PTINTERFACE.mod UT_CONVERSIONINTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptOffProcMap.o : gr_ptinterface.mod ut_conversioninterface.mod driver_interface.mod grid_data.mod gr_ptdata.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptOneFaceBC.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h 
else
gr_ptOneFaceBC.o : tree.mod grid_data.mod driver_interface.mod gr_ptdata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_ptPackUnpackData.o : DRIVER_INTERFACE.mod GR_PTINTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h 
else
gr_ptPackUnpackData.o : driver_interface.mod gr_ptinterface.mod grid_interface.mod grid_data.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_ptParseMetadata.o : GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptParseMetadata.o : grid_data.mod driver_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptParticleAtFcBdry.o : GR_PTMAPDATA.mod PARTICLES_DATA.mod TREE.mod DRIVER_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptParticleAtFcBdry.o : gr_ptmapdata.mod particles_data.mod tree.mod driver_interface.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptProlongSmear.o : GRID_DATA.mod GR_PTDATA.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptProlongSmear.o : grid_data.mod gr_ptdata.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptResetIndices.o : GR_PTDATA.mod GridParticles.h 
else
gr_ptResetIndices.o : gr_ptdata.mod GridParticles.h
endif


ifdef MODUPPERCASE
gr_ptResetProcPair.o : GRID_DATA.mod DRIVER_INTERFACE.mod GR_PTDATA.mod  
else
gr_ptResetProcPair.o : grid_data.mod driver_interface.mod gr_ptdata.mod 
endif


ifdef MODUPPERCASE
gr_ptSameProcMap.o : DRIVER_INTERFACE.mod GR_PTINTERFACE.mod GRID_INTERFACE.mod GR_PTDATA.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptSameProcMap.o : driver_interface.mod gr_ptinterface.mod grid_interface.mod gr_ptdata.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptSearchBlk.o : TREE.mod GRID_DATA.mod constants.h Flash.h gr_ptMapToMesh.h 
else
gr_ptSearchBlk.o : tree.mod grid_data.mod constants.h Flash.h gr_ptMapToMesh.h
endif


ifdef MODUPPERCASE
gr_ptSetIndices.o : GR_PTDATA.mod GridParticles.h 
else
gr_ptSetIndices.o : gr_ptdata.mod GridParticles.h
endif


ifdef MODUPPERCASE
gr_ptStoreOffBlockCells.o : DRIVER_INTERFACE.mod GRID_DATA.mod GR_INTERFACETYPEDECL.mod GR_PTINTERFACE.mod GRID_INTERFACE.mod GR_PTMAPDATA.mod GR_INTERFACE.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h 
else
gr_ptStoreOffBlockCells.o : driver_interface.mod grid_data.mod gr_interfacetypedecl.mod gr_ptinterface.mod grid_interface.mod gr_ptmapdata.mod gr_interface.mod constants.h Flash.h gr_ptMapToMesh.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_ptVerifyBlock.o : LOGFILE_INTERFACE.mod GR_PTDATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_ptVerifyBlock.o : logfile_interface.mod gr_ptdata.mod driver_interface.mod grid_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_recreateDomain.o : GR_INTERFACE.mod TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h 
else
gr_recreateDomain.o : gr_interface.mod tree.mod grid_data.mod driver_interface.mod simulation_interface.mod constants.h Flash.h
endif

gr_releaseInteriorBlkPtr.o: 

ifdef MODUPPERCASE
gr_restrictTree.o : PARAMESH_INTERFACES.mod PHYSICALDATA.mod TREE.mod GRID_DATA.mod constants.h Flash_mpi.h 
else
gr_restrictTree.o : paramesh_interfaces.mod physicaldata.mod tree.mod grid_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_sanitizeDataAfterInterp.o : PARAMESH_DIMENSIONS.mod PHYSICALDATA.mod TREE.mod LOGFILE_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_sanitizeDataAfterInterp.o : paramesh_dimensions.mod physicaldata.mod tree.mod logfile_interface.mod grid_data.mod constants.h Flash.h
endif

gr_sbCreateGroups.o: 
gr_sbCreateParticles.o: 
gr_sbFinalize.o: 
gr_sbGetProcBlock.o: 
gr_sbInit.o: 
gr_sbSendBoundBox.o: 
gr_sbSendForces.o: 
gr_sbSendParticleCount.o: 
gr_sbSendParticles.o: 
gr_sbSendPosn.o: 
gr_sbStoreParticlesPerProc.o: 
gr_sbUpdateForces.o: 

ifdef MODUPPERCASE
gr_setBlockType.o : GRID_DATA.mod  
else
gr_setBlockType.o : grid_data.mod 
endif


ifdef MODUPPERCASE
gr_setDataStructInfo.o : RUNTIMEPARAMETERS_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_setDataStructInfo.o : runtimeparameters_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_setGcFillNLayers.o : GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_setGcFillNLayers.o : grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_setMasks.o : PHYSICALDATA.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h Flash_mpi.h 
else
gr_setMasks.o : physicaldata.mod driver_interface.mod grid_data.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
gr_setMaxRefineByTime.o : TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod LOGFILE_INTERFACE.mod constants.h Flash.h 
else
gr_setMaxRefineByTime.o : tree.mod driver_interface.mod grid_data.mod logfile_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_solversFinalize.o : GR_BICGINTERFACE.mod GRID_DATA.mod GR_BHINTERFACE.mod GR_HGINTERFACE.mod GR_MGINTERFACE.mod GR_PFFTINTERFACE.mod  
else
gr_solversFinalize.o : gr_bicginterface.mod grid_data.mod gr_bhinterface.mod gr_hginterface.mod gr_mginterface.mod gr_pfftinterface.mod 
endif


ifdef MODUPPERCASE
gr_solversInit.o : GR_BICGINTERFACE.mod GRID_DATA.mod GR_BHINTERFACE.mod GR_HGINTERFACE.mod GR_MGINTERFACE.mod GRID_INTERFACE.mod GR_PFFTINTERFACE.mod  
else
gr_solversInit.o : gr_bicginterface.mod grid_data.mod gr_bhinterface.mod gr_hginterface.mod gr_mginterface.mod grid_interface.mod gr_pfftinterface.mod 
endif


ifdef MODUPPERCASE
gr_unmarkRefineByLogRadius.o : TREE.mod GRID_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
gr_unmarkRefineByLogRadius.o : tree.mod grid_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_updateData.o : TREE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_updateData.o : tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_updateRefinement.o : PARTICLES_INTERFACE.mod GRID_DATA.mod TREE.mod TIMERS_INTERFACE.mod PARAMESH_INTERFACES.mod SIMULATION_INTERFACE.mod GRID_INTERFACE.mod PHYSICALDATA.mod EOS_INTERFACE.mod constants.h Flash.h 
else
gr_updateRefinement.o : particles_interface.mod grid_data.mod tree.mod timers_interface.mod paramesh_interfaces.mod simulation_interface.mod grid_interface.mod physicaldata.mod eos_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_xyzToBlock.o : BITTREE.mod GR_INTERFACE.mod TREE.mod DRIVER_INTERFACE.mod GRID_DATA.mod constants.h Flash.h 
else
gr_xyzToBlock.o : bittree.mod gr_interface.mod tree.mod driver_interface.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
gr_xyzToBlockLevel.o : GRID_DATA.mod Flash.h 
else
gr_xyzToBlockLevel.o : grid_data.mod Flash.h
endif


ifdef MODUPPERCASE
grdvel.o : HYDRO_DATA.mod Flash.h 
else
grdvel.o : hydro_data.mod Flash.h
endif


ifdef MODUPPERCASE
hy_interpNoLim.o : HYDRO_DATA.mod  
else
hy_interpNoLim.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
hy_nomonot.o : HYDRO_DATA.mod  
else
hy_nomonot.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
hy_ppm_block.o : TIMERS_INTERFACE.mod HYDRO_DATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h PPM.h 
else
hy_ppm_block.o : timers_interface.mod hydro_data.mod driver_interface.mod grid_interface.mod constants.h Flash.h PPM.h
endif

hy_ppm_completeGeomFactors.o: constants.h

ifdef MODUPPERCASE
hy_ppm_force.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
hy_ppm_force.o : hydro_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
hy_ppm_geom.o : DRIVER_INTERFACE.mod constants.h Flash.h 
else
hy_ppm_geom.o : driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
hy_ppm_getTemporaryData.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
hy_ppm_getTemporaryData.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
hy_ppm_putTemporaryData.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
hy_ppm_putTemporaryData.o : hydro_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
hy_ppm_sweep.o : IO_INTERFACE.mod HYDRO_DATA.mod DIFFUSE_INTERFACE.mod TIMERS_INTERFACE.mod LOGFILE_INTERFACE.mod GRID_INTERFACE.mod HYDRO_INTERFACE.mod EOS_INTERFACE.mod HY_PPM_INTERFACE.mod Eos.h constants.h Flash.h PPM.h 
else
hy_ppm_sweep.o : io_interface.mod hydro_data.mod diffuse_interface.mod timers_interface.mod logfile_interface.mod grid_interface.mod hydro_interface.mod eos_interface.mod hy_ppm_interface.mod Eos.h constants.h Flash.h PPM.h
endif


ifdef MODUPPERCASE
hy_ppm_updateSoln.o : HYDRO_DATA.mod constants.h Flash.h PPM.h 
else
hy_ppm_updateSoln.o : hydro_data.mod constants.h Flash.h PPM.h
endif


ifdef MODUPPERCASE
hydro_1d.o : HYDRO_DATA.mod HY_PPM_INTERFACE.mod DRIVER_INTERFACE.mod GRAVITY_INTERFACE.mod constants.h Flash.h 
else
hydro_1d.o : hydro_data.mod hy_ppm_interface.mod driver_interface.mod gravity_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
interp.o : HYDRO_DATA.mod  
else
interp.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
interp_char.o : HYDRO_DATA.mod constants.h Flash.h 
else
interp_char.o : hydro_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
intrfc.o : HYDRO_DATA.mod Flash.h 
else
intrfc.o : hydro_data.mod Flash.h
endif


ifdef MODUPPERCASE
io_bcastScalars.o : IO_DATA.mod  
else
io_bcastScalars.o : io_data.mod 
endif


ifdef MODUPPERCASE
io_closeFile.o : IO_DATA.mod constants.h 
else
io_closeFile.o : io_data.mod constants.h
endif


ifdef MODUPPERCASE
io_createDatasets.o : IO_C_INTERFACE.mod TREE.mod IO_DATA.mod TIMERS_INTERFACE.mod ISO_C_BINDING.mod io_flash.h constants.h Flash.h 
else
io_createDatasets.o : io_c_interface.mod tree.mod io_data.mod timers_interface.mod iso_c_binding.mod io_flash.h constants.h Flash.h
endif


ifdef MODUPPERCASE
io_finalizeListsRead.o : RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod DRIVER_INTERFACE.mod  
else
io_finalizeListsRead.o : runtimeparameters_interface.mod io_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
io_finalizeListsWrite.o : IO_DATA.mod  
else
io_finalizeListsWrite.o : io_data.mod 
endif


ifdef MODUPPERCASE
io_getAllScalars.o : IO_DATA.mod constants.h 
else
io_getAllScalars.o : io_data.mod constants.h
endif


ifdef MODUPPERCASE
io_getNumScalars.o : IO_DATA.mod  
else
io_getNumScalars.o : io_data.mod 
endif


ifdef MODUPPERCASE
io_getOutputName.o : IO_DATA.mod constants.h 
else
io_getOutputName.o : io_data.mod constants.h
endif


ifdef MODUPPERCASE
io_getParticleOffset.o : IO_DATA.mod constants.h Flash_mpi.h 
else
io_getParticleOffset.o : io_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_getVarExtrema.o : IO_DATA.mod DRIVER_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
io_getVarExtrema.o : io_data.mod driver_interface.mod grid_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_initFile.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h 
else
io_initFile.o : io_data.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
io_isPlotVar.o : IO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
io_isPlotVar.o : io_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
io_memoryReport.o : UT_SYSMEMDATA.mod IO_DATA.mod LOGFILE_INTERFACE.mod UT_SYSMEMINTERFACE.mod constants.h Flash.h ut_sysMem.h 
else
io_memoryReport.o : ut_sysmemdata.mod io_data.mod logfile_interface.mod ut_sysmeminterface.mod constants.h Flash.h ut_sysMem.h
endif


ifdef MODUPPERCASE
io_prepareListsRead.o : IO_DATA.mod  
else
io_prepareListsRead.o : io_data.mod 
endif


ifdef MODUPPERCASE
io_prepareListsWrite.o : RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod constants.h Flash_mpi.h 
else
io_prepareListsWrite.o : runtimeparameters_interface.mod io_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_prepareSimInfo.o : IO_DATA.mod constants.h Flash_mpi.h 
else
io_prepareSimInfo.o : io_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_ptCorrectNextPartTime.o : IOPARTICLES_DATA.mod  
else
io_ptCorrectNextPartTime.o : ioparticles_data.mod 
endif

io_ptCreateSubset.o: constants.h Flash.h

ifdef MODUPPERCASE
io_ptInit.o : IOPARTICLES_DATA.mod IO_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
io_ptInit.o : ioparticles_data.mod io_interface.mod runtimeparameters_interface.mod io_data.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
io_ptReadParticleData.o : IO_INTERFACE.mod PARTICLES_DATA.mod DRIVER_INTERFACE.mod GRID_DATA.mod PARTICLES_INTERFACE.mod RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod SIMULATION_INTERFACE.mod GRID_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
io_ptReadParticleData.o : io_interface.mod particles_data.mod driver_interface.mod grid_data.mod particles_interface.mod runtimeparameters_interface.mod io_data.mod simulation_interface.mod grid_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_ptResetNextFile.o : IOPARTICLES_DATA.mod  
else
io_ptResetNextFile.o : ioparticles_data.mod 
endif


ifdef MODUPPERCASE
io_ptSendOutputData.o : IOPARTICLES_DATA.mod IO_INTERFACE.mod  
else
io_ptSendOutputData.o : ioparticles_data.mod io_interface.mod 
endif


ifdef MODUPPERCASE
io_ptWriteParticleData.o : PARTICLES_DATA.mod IO_DATA.mod GRID_DATA.mod GRID_INTERFACE.mod constants.h Flash.h Flash_mpi.h 
else
io_ptWriteParticleData.o : particles_data.mod io_data.mod grid_data.mod grid_interface.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_readData.o : IO_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod IO_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod IO_TYPEINTERFACE.mod PHYSICALDATA.mod io_flash.h constants.h Flash.h Flash_mpi.h 
else
io_readData.o : io_interface.mod grid_interface.mod grid_data.mod runtimeparameters_interface.mod tree.mod io_data.mod logfile_interface.mod driver_interface.mod io_typeinterface.mod physicaldata.mod io_flash.h constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_readRPsFromCheckpoint.o : RUNTIMEPARAMETERS_INTERFACE.mod IO_DATA.mod constants.h Flash_mpi.h 
else
io_readRPsFromCheckpoint.o : runtimeparameters_interface.mod io_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_rescaleCellBoxes.o : TREE.mod IO_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
io_rescaleCellBoxes.o : tree.mod io_data.mod logfile_interface.mod driver_interface.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
io_restrictBeforeWrite.o : IO_DATA.mod LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod constants.h 
else
io_restrictBeforeWrite.o : io_data.mod logfile_interface.mod driver_interface.mod constants.h
endif


ifdef MODUPPERCASE
io_setPrevScalar.o : IO_DATA.mod  
else
io_setPrevScalar.o : io_data.mod 
endif


ifdef MODUPPERCASE
io_writeData.o : GRID_DATA.mod IO_C_INTERFACE.mod TREE.mod IO_DATA.mod GRID_INTERFACE.mod IO_TYPEINTERFACE.mod PHYSICALDATA.mod io_flash.h constants.h Flash.h Flash_mpi.h 
else
io_writeData.o : grid_data.mod io_c_interface.mod tree.mod io_data.mod grid_interface.mod io_typeinterface.mod physicaldata.mod io_flash.h constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
io_xfer_tree_data.o : GRID_DATA.mod IO_C_INTERFACE.mod TREE.mod TIMERS_INTERFACE.mod IO_DATA.mod DRIVER_INTERFACE.mod ISO_C_BINDING.mod io_flash.h constants.h Flash.h 
else
io_xfer_tree_data.o : grid_data.mod io_c_interface.mod tree.mod timers_interface.mod io_data.mod driver_interface.mod iso_c_binding.mod io_flash.h constants.h Flash.h
endif


ifdef MODUPPERCASE
local_tree_build.o : LOCAL_TREE_COMMON.mod MPI_MORTON.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
local_tree_build.o : local_tree_common.mod mpi_morton.mod tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
log_allocateStrArr.o : LOGFILE_DATA.mod  
else
log_allocateStrArr.o : logfile_data.mod 
endif


ifdef MODUPPERCASE
log_getUnitsArr.o : LOGFILE_DATA.mod constants.h 
else
log_getUnitsArr.o : logfile_data.mod constants.h
endif

makeLowercase.o: 

ifdef MODUPPERCASE
monot.o : HYDRO_DATA.mod  
else
monot.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
morton_sort.o : PARAMESH_INTERFACES.mod IO.mod paramesh_preprocessor.fh 
else
morton_sort.o : paramesh_interfaces.mod io.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_1blk_guardcell.o : GR_FLASHHOOK_INTERFACES.mod MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_amr_1blk_guardcell.o : gr_flashhook_interfaces.mod mpi_morton.mod tree.mod timings.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_1blk_guardcell_c_to_f.o : PROLONG_ARRAYS.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
mpi_amr_1blk_guardcell_c_to_f.o : prolong_arrays.mod tree.mod timings.mod paramesh_interfaces.mod workspace.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_1blk_restrict.o : GR_FLASHHOOK_INTERFACES.mod MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_1blk_restrict.o : gr_flashhook_interfaces.mod mpi_morton.mod tree.mod timings.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_boundary_block_info.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_amr_boundary_block_info.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_check_derefine.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod TIMINGS.mod  
else
mpi_amr_check_derefine.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod timings.mod 
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_re.o : PARAMESH_INTERFACES.mod PARAMESH_COMM_DATA.mod  
else
mpi_amr_checkpoint_re.o : paramesh_interfaces.mod paramesh_comm_data.mod 
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_re_default.o : TREE.mod PARAMESH_INTERFACES.mod IO.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_re_default.o : tree.mod paramesh_interfaces.mod io.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_re_hdf5.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_re_hdf5.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_re_mpiio.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_re_mpiio.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_wr.o : PARAMESH_INTERFACES.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_wr.o : paramesh_interfaces.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_wr_default.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod IO.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_wr_default.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod io.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_wr_hdf5.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_wr_hdf5.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_checkpoint_wr_mpiio.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_checkpoint_wr_mpiio.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_comm_setup.o : MPI_MORTON.mod TREE.mod TIMINGS.mod LOGFILE_INTERFACE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_comm_setup.o : mpi_morton.mod tree.mod timings.mod logfile_interface.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_derefine_blocks.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_amr_derefine_blocks.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_edge_average.o : PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
mpi_amr_edge_average.o : paramesh_interfaces.mod tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_edge_average_udt.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_edge_average_udt.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_edge_average_vdt.o : TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_edge_average_vdt.o : tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_edge_diagonal_check.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
mpi_amr_edge_diagonal_check.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_flux_conserve.o : PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh 
else
mpi_amr_flux_conserve.o : paramesh_interfaces.mod tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_flux_conserve_udt.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_flux_conserve_udt.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_flux_conserve_vdt.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_flux_conserve_vdt.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_get_remote_block.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_get_remote_block.o : mpi_morton.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_get_remote_block_fvar.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_get_remote_block_fvar.o : mpi_morton.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_global_domain_limits.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_global_domain_limits.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_guardcell.o : TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_guardcell.o : tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_local_surr_blks_lkup.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_amr_local_surr_blks_lkup.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_plotfile_chombo.o : PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_plotfile_chombo.o : paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_prolong.o : GR_FLASHHOOK_INTERFACES.mod MPI_MORTON.mod PROLONG_ARRAYS.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_prolong.o : gr_flashhook_interfaces.mod mpi_morton.mod prolong_arrays.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_prolong_fc_divbconsist.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_prolong_fc_divbconsist.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_redist_blk.o : PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_redist_blk.o : paramesh_interfaces.mod tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_refine_blocks.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_amr_refine_blocks.o : mpi_morton.mod tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_refine_derefine.o : TREE.mod PARAMESH_INTERFACES.mod LOGFILE_INTERFACE.mod IO.mod PARAMESH_MPI_INTERFACES.mod BITTREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod ISO_C_BINDING.mod paramesh_preprocessor.fh Flash.h 
else
mpi_amr_refine_derefine.o : tree.mod paramesh_interfaces.mod logfile_interface.mod io.mod paramesh_mpi_interfaces.mod bittree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod iso_c_binding.mod paramesh_preprocessor.fh Flash.h
endif


ifdef MODUPPERCASE
mpi_amr_restrict.o : TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_restrict.o : tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_restrict_bnd_data.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_restrict_bnd_data.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_restrict_bnd_data_vdt.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_restrict_bnd_data_vdt.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_restrict_edge_data.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_restrict_edge_data.o : mpi_morton.mod tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_restrict_edge_data_vdt.o : TREE.mod PARAMESH_INTERFACES.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_restrict_edge_data_vdt.o : tree.mod paramesh_interfaces.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_restrict_fulltree.o : GR_FLASHHOOK_INTERFACES.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh Flash_mpi.h 
else
mpi_amr_restrict_fulltree.o : gr_flashhook_interfaces.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh Flash_mpi.h
endif


ifdef MODUPPERCASE
mpi_amr_singular_line.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_amr_singular_line.o : mpi_morton.mod tree.mod timings.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_store_comm_info.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_amr_store_comm_info.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_store_comm_info_mg.o : MPI_MORTON.mod TREE.mod AMR_MG_COMMON.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_amr_store_comm_info_mg.o : mpi_morton.mod tree.mod amr_mg_common.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_test_neigh_values.o : TREE.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_amr_test_neigh_values.o : tree.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_timing_report.o : PARAMESH_INTERFACES.mod TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod TIMINGS.mod paramesh_preprocessor.fh 
else
mpi_amr_timing_report.o : paramesh_interfaces.mod tree.mod physicaldata.mod paramesh_dimensions.mod timings.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_amr_tree_setup.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_amr_tree_setup.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_get_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_get_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_get_edge_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_get_edge_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_get_flux_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_get_flux_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_lib.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh Flash.h 
else
mpi_lib.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh Flash.h
endif


ifdef MODUPPERCASE
mpi_morton_bnd.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_morton_bnd.o : mpi_morton.mod tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_morton_bnd_fluxcon.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_INTERFACES.mod DRIVER_INTERFACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_morton_bnd_fluxcon.o : mpi_morton.mod tree.mod timings.mod paramesh_interfaces.mod driver_interface.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_morton_bnd_prolong.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_morton_bnd_prolong.o : mpi_morton.mod tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_morton_bnd_restrict.o : MPI_MORTON.mod TREE.mod TIMINGS.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod paramesh_preprocessor.fh 
else
mpi_morton_bnd_restrict.o : mpi_morton.mod tree.mod timings.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_pack_blocks.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_pack_blocks.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_pack_edges.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_pack_edges.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_pack_fluxes.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_pack_fluxes.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_pack_tree_info.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_pack_tree_info.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_put_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_put_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_put_edge_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_put_edge_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_put_edge_buffer_1blk.o : MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_put_edge_buffer_1blk.o : mpi_morton.mod tree.mod paramesh_interfaces.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_put_flux_buffer.o : MPI_MORTON.mod TREE.mod WORKSPACE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_put_flux_buffer.o : mpi_morton.mod tree.mod workspace.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_set_message_limits.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_set_message_limits.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_set_message_limits_unpack.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_set_message_limits_unpack.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_set_message_sizes.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_set_message_sizes.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_unpack_blocks.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_unpack_blocks.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_unpack_edges.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_unpack_edges.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_unpack_fluxes.o : MPI_MORTON.mod TREE.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
mpi_unpack_fluxes.o : mpi_morton.mod tree.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
mpi_unpack_tree_info.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod MPI_MORTON.mod paramesh_preprocessor.fh 
else
mpi_unpack_tree_info.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod mpi_morton.mod paramesh_preprocessor.fh
endif

mpi_wrapper_dble.o: 
mpi_wrapper_int.o: 
mpi_wrapper_logical.o: 

ifdef MODUPPERCASE
mpi_wrapper_real.o : PARAMESH_COMM_DATA.mod  
else
mpi_wrapper_real.o : paramesh_comm_data.mod 
endif

ms_mapMSIndex.o: Flash.h
nameSyntaxError.o: 

ifdef MODUPPERCASE
nameValueLL_bcast.o : DRIVER_INTERFACE.mod NAMEVALUELL_DATA.mod constants.h Flash_mpi.h 
else
nameValueLL_bcast.o : driver_interface.mod namevaluell_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
nameValueLL_get.o : LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod NAMEVALUELL_DATA.mod constants.h Flash_mpi.h 
else
nameValueLL_get.o : logfile_interface.mod driver_interface.mod namevaluell_data.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
nameValueLL_getAll.o : NAMEVALUELL_DATA.mod constants.h 
else
nameValueLL_getAll.o : namevaluell_data.mod constants.h
endif


ifdef MODUPPERCASE
nameValueLL_getNum.o : NAMEVALUELL_DATA.mod  
else
nameValueLL_getNum.o : namevaluell_data.mod 
endif

nameValueLL_logRules.o: constants.h

ifdef MODUPPERCASE
nameValueLL_rules.o : DRIVER_INTERFACE.mod NAMEVALUELL_DATA.mod  
else
nameValueLL_rules.o : driver_interface.mod namevaluell_data.mod 
endif


ifdef MODUPPERCASE
nameValueLL_set.o : LOGFILE_INTERFACE.mod DRIVER_INTERFACE.mod NAMEVALUELL_DATA.mod constants.h 
else
nameValueLL_set.o : logfile_interface.mod driver_interface.mod namevaluell_data.mod constants.h
endif


ifdef MODUPPERCASE
pc_utilities.o : PHYSICALCONSTANTS_DATA.mod constants.h 
else
pc_utilities.o : physicalconstants_data.mod constants.h
endif

poisson_sor.o: 

ifdef MODUPPERCASE
process_fetch_list.o : PARAMESH_MPI_INTERFACES.mod PARAMESH_DIMENSIONS.mod MPI_MORTON.mod TREE.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
process_fetch_list.o : paramesh_mpi_interfaces.mod paramesh_dimensions.mod mpi_morton.mod tree.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif

pt_advanceCharged.o: constants.h Flash.h Particles.h
pt_advanceCustom.o: Flash.h
pt_advanceDPD.o: Flash.h
pt_advanceEsti.o: Flash.h
pt_advanceEuler_active.o: Flash.h
pt_advanceEuler_passive.o: Flash.h
pt_advanceLeapfrog.o: Flash.h

ifdef MODUPPERCASE
pt_advanceLeapfrog_cosmo.o : COSMOLOGY_INTERFACE.mod PARTICLES_DATA.mod TIMERS_INTERFACE.mod PARTICLES_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h Particles.h 
else
pt_advanceLeapfrog_cosmo.o : cosmology_interface.mod particles_data.mod timers_interface.mod particles_interface.mod driver_interface.mod constants.h Flash.h Particles.h
endif

pt_advanceMidpoint.o: Flash.h
pt_advanceRK.o: Flash.h

ifdef MODUPPERCASE
pt_assignWeights.o : DRIVER_INTERFACE.mod constants.h 
else
pt_assignWeights.o : driver_interface.mod constants.h
endif

pt_coeffMisc.o: 

ifdef MODUPPERCASE
pt_createTag.o : PT_INTERFACE.mod PARTICLES_DATA.mod GRID_INTERFACE.mod DRIVER_INTERFACE.mod constants.h Flash.h 
else
pt_createTag.o : pt_interface.mod particles_data.mod grid_interface.mod driver_interface.mod constants.h Flash.h
endif

pt_dpdBondedForces.o: 
pt_dpdInit.o: 
pt_dpdNonBondedForces.o: Flash.h
pt_dpdSetIndices.o: constants.h Flash.h

ifdef MODUPPERCASE
pt_findTagOffset.o : PARTICLES_DATA.mod  
else
pt_findTagOffset.o : particles_data.mod 
endif

pt_initFinalize.o: 
pt_initLocal.o: 

ifdef MODUPPERCASE
pt_initPositions.o : PARTICLES_DATA.mod DRIVER_INTERFACE.mod GRID_DATA.mod SIMULATION_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod PT_INTERFACE.mod DRIVER_DATA.mod GRID_INTERFACE.mod constants.h Flash.h 
else
pt_initPositions.o : particles_data.mod driver_interface.mod grid_data.mod simulation_data.mod runtimeparameters_interface.mod tree.mod pt_interface.mod driver_data.mod grid_interface.mod constants.h Flash.h
endif

pt_initPositionsLattice.o: 
pt_initPositionsWithDensity.o: 
pt_mapFromMeshQuadratic.o: constants.h Flash.h Particles.h

ifdef MODUPPERCASE
pt_mapFromMeshWeighted.o : PARTICLES_DATA.mod DRIVER_INTERFACE.mod constants.h Flash.h Particles.h 
else
pt_mapFromMeshWeighted.o : particles_data.mod driver_interface.mod constants.h Flash.h Particles.h
endif

pt_mapOneParticle.o: constants.h Flash.h

ifdef MODUPPERCASE
pt_mapStringParamToInt.o : RUNTIMEPARAMETERS_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h 
else
pt_mapStringParamToInt.o : runtimeparameters_interface.mod simulation_interface.mod constants.h
endif

pt_picInit.o: 
pt_prepareEsti.o: Flash.h

ifdef MODUPPERCASE
pt_setDataStructures.o : PT_INTERFACE.mod PARTICLES_DATA.mod SIMULATION_INTERFACE.mod constants.h Flash.h Particles.h 
else
pt_setDataStructures.o : pt_interface.mod particles_data.mod simulation_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
pt_setMask.o : PT_INTERFACE.mod PARTICLES_DATA.mod LOGFILE_INTERFACE.mod SIMULATION_INTERFACE.mod constants.h Flash.h Particles.h 
else
pt_setMask.o : pt_interface.mod particles_data.mod logfile_interface.mod simulation_interface.mod constants.h Flash.h Particles.h
endif


ifdef MODUPPERCASE
pt_updateTypeDS.o : PARTICLES_DATA.mod constants.h Flash.h Particles.h 
else
pt_updateTypeDS.o : particles_data.mod constants.h Flash.h Particles.h
endif

pt_utAnaGetNewPosComponents.o: Flash.h
pt_utComputeError.o: 
pt_utFakeParticlesAdvance.o: 
pt_utUpdateAnaPosns.o: 

ifdef MODUPPERCASE
rationalize_fetch_list.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod MPI_MORTON.mod  
else
rationalize_fetch_list.o : tree.mod physicaldata.mod paramesh_dimensions.mod mpi_morton.mod 
endif

removeNullChar.o: 

ifdef MODUPPERCASE
rf_calcEffectiveFlux.o : PHOTOIONIZATION_DATA.mod COLUMNDENSITY_DATA.mod RADIATIONFIELD_DATA.mod Multispecies.h constants.h Flash.h 
else
rf_calcEffectiveFlux.o : photoionization_data.mod columndensity_data.mod radiationfield_data.mod Multispecies.h constants.h Flash.h
endif


ifdef MODUPPERCASE
rieman.o : HYDRO_DATA.mod DRIVER_INTERFACE.mod  
else
rieman.o : hydro_data.mod driver_interface.mod 
endif


ifdef MODUPPERCASE
riemann_hlle.o : HYDRO_DATA.mod  
else
riemann_hlle.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
rp_getArgument.o : F90_UNIX_ENV.mod constants.h 
else
rp_getArgument.o : f90_unix_env.mod constants.h
endif


ifdef MODUPPERCASE
rp_getOpt.o : F90_UNIX_ENV.mod constants.h 
else
rp_getOpt.o : f90_unix_env.mod constants.h
endif


ifdef MODUPPERCASE
rp_initParameters.o : RUNTIMEPARAMETERS_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod constants.h rp_rules.h 
else
rp_initParameters.o : runtimeparameters_data.mod runtimeparameters_interface.mod constants.h rp_rules.h
endif


ifdef MODUPPERCASE
rp_rules.o : RUNTIMEPARAMETERS_DATA.mod  
else
rp_rules.o : runtimeparameters_data.mod 
endif


ifdef MODUPPERCASE
rp_storeIgnoredParams.o : RUNTIMEPARAMETERS_DATA.mod constants.h 
else
rp_storeIgnoredParams.o : runtimeparameters_data.mod constants.h
endif


ifdef MODUPPERCASE
send_block_data.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod paramesh_preprocessor.fh 
else
send_block_data.o : tree.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod paramesh_preprocessor.fh
endif


ifdef MODUPPERCASE
set_f2c_indexes.o : TREE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod WORKSPACE.mod  
else
set_f2c_indexes.o : tree.mod physicaldata.mod paramesh_dimensions.mod workspace.mod 
endif

setup_buildstamp.o: 
setup_flashRelease.o: 
setup_getFlashUnits.o: constants.h

ifdef MODUPPERCASE
smooth_Init.o : SMOOTH_DATA.mod RUNTIMEPARAMETERS_INTERFACE.mod TREE.mod PARTICLES_DATA.mod constants.h Flash.h Flash_mpi.h 
else
smooth_Init.o : smooth_data.mod runtimeparameters_interface.mod tree.mod particles_data.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
smooth_Prolong.o : GRID_INTERFACE.mod DRIVER_INTERFACE.mod GRID_DATA.mod TREE.mod SMOOTH_DATA.mod WORKSPACE.mod PHYSICALDATA.mod constants.h Flash.h umap.h Flash_mpi.h 
else
smooth_Prolong.o : grid_interface.mod driver_interface.mod grid_data.mod tree.mod smooth_data.mod workspace.mod physicaldata.mod constants.h Flash.h umap.h Flash_mpi.h
endif


ifdef MODUPPERCASE
smooth_Restrict.o : GRID_DATA.mod TREE.mod SMOOTH_DATA.mod PARAMESH_INTERFACES.mod DRIVER_INTERFACE.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod constants.h Flash.h Flash_mpi.h 
else
smooth_Restrict.o : grid_data.mod tree.mod smooth_data.mod paramesh_interfaces.mod driver_interface.mod physicaldata.mod paramesh_dimensions.mod constants.h Flash.h Flash_mpi.h
endif


ifdef MODUPPERCASE
smooth_fillGuardCells.o : GR_INTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod TREE.mod SMOOTH_DATA.mod PARAMESH_INTERFACES.mod WORKSPACE.mod PHYSICALDATA.mod constants.h Flash.h 
else
smooth_fillGuardCells.o : gr_interface.mod grid_interface.mod grid_data.mod tree.mod smooth_data.mod paramesh_interfaces.mod workspace.mod physicaldata.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
smooth_prepareNodes.o : SMOOTH_DATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
smooth_prepareNodes.o : smooth_data.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
smooth_recordNodeTypeStates.o : SMOOTH_DATA.mod TREE.mod GRID_DATA.mod Flash_mpi.h 
else
smooth_recordNodeTypeStates.o : smooth_data.mod tree.mod grid_data.mod Flash_mpi.h
endif


ifdef MODUPPERCASE
smooth_restoreNodeTypes.o : SMOOTH_DATA.mod TREE.mod GRID_DATA.mod  
else
smooth_restoreNodeTypes.o : smooth_data.mod tree.mod grid_data.mod 
endif


ifdef MODUPPERCASE
smooth_setMaxLevel.o : SMOOTH_DATA.mod TREE.mod GRID_DATA.mod constants.h Flash.h 
else
smooth_setMaxLevel.o : smooth_data.mod tree.mod grid_data.mod constants.h Flash.h
endif


ifdef MODUPPERCASE
states.o : HYDRO_DATA.mod  
else
states.o : hydro_data.mod 
endif


ifdef MODUPPERCASE
test_multigrid.o : WORKSPACE.mod TREE.mod PARAMESH_INTERFACES.mod IO.mod PARAMESH_MPI_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh  
else
test_multigrid.o : workspace.mod tree.mod paramesh_interfaces.mod io.mod paramesh_mpi_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_preprocessor.fh 
endif


ifdef MODUPPERCASE
tmr_buildSummary.o : TIMERS_DATA.mod DRIVER_INTERFACE.mod constants.h Flash_mpi.h 
else
tmr_buildSummary.o : timers_data.mod driver_interface.mod constants.h Flash_mpi.h
endif


ifdef MODUPPERCASE
tmr_create.o : TIMERS_DATA.mod  
else
tmr_create.o : timers_data.mod 
endif

tmr_etime.o: 

ifdef MODUPPERCASE
tmr_findTimerIndex.o : TIMERS_DATA.mod  
else
tmr_findTimerIndex.o : timers_data.mod 
endif


ifdef MODUPPERCASE
tmr_getMaxCallStackDepth.o : TIMERS_DATA.mod  
else
tmr_getMaxCallStackDepth.o : timers_data.mod 
endif


ifdef MODUPPERCASE
tmr_getMaxTimerParents.o : TIMERS_DATA.mod  
else
tmr_getMaxTimerParents.o : timers_data.mod 
endif


ifdef MODUPPERCASE
tmr_init.o : TIMERS_DATA.mod  
else
tmr_init.o : timers_data.mod 
endif

tmr_lookupIndex.o: 

ifdef MODUPPERCASE
tmr_stackLib.o : TIMERS_DATA.mod  
else
tmr_stackLib.o : timers_data.mod 
endif


ifdef MODUPPERCASE
tree_search_for_surrblks.o : LOCAL_TREE_COMMON.mod MPI_MORTON.mod TREE.mod PARAMESH_INTERFACES.mod PHYSICALDATA.mod PARAMESH_DIMENSIONS.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod  
else
tree_search_for_surrblks.o : local_tree_common.mod mpi_morton.mod tree.mod paramesh_interfaces.mod physicaldata.mod paramesh_dimensions.mod paramesh_comm_data.mod constants.mod 
endif

user_coord_transfm.o: 
ut_constRealZeroFn1.o: 
ut_convertToArrayIndicies.o: 
ut_convertToMemoryOffset.o: 
ut_cubicRoots.o: 
ut_fndpos.o: 

ifdef MODUPPERCASE
ut_getFreeFileUnit.o : DRIVER_INTERFACE.mod  
else
ut_getFreeFileUnit.o : driver_interface.mod 
endif

ut_hunt.o: 

ifdef MODUPPERCASE
ut_polint.o : UT_INTERPOLATIONINTERFACE.mod DRIVER_INTERFACE.mod  
else
ut_polint.o : ut_interpolationinterface.mod driver_interface.mod 
endif

ut_qsort.o: 
ut_quadraticInterpol.o: 
ut_quadraticRoots.o: 
ut_quarticRoots.o: 
ut_sortOnProcs.o: constants.h Flash.h

ifdef MODUPPERCASE
ut_sysMemStats.o : UT_SYSMEMDATA.mod constants.h ut_sysMem.h 
else
ut_sysMemStats.o : ut_sysmemdata.mod constants.h ut_sysMem.h
endif


ifdef MODUPPERCASE
ut_sysMemSummaryStats.o : UT_SYSMEMDATA.mod UT_SYSMEMINTERFACE.mod constants.h 
else
ut_sysMemSummaryStats.o : ut_sysmemdata.mod ut_sysmeminterface.mod constants.h
endif

umap.o: Flash.h umap.h
constants.o: 
Flash.o: 
Eos.o: 
Multispecies.o: 
Flash_mpi.o: 
Ionize.o: 
ut_sysMem.o: 
Eos_map.o: 
FortranLangFeatures.o: 
Multigrid.o: 
Particles.o: 
GridParticles.o: 
gr_ptMapToMesh.o: constants.h
io_flash.o: Flash.h
SolidMechanics.o: 
Timers.o: 
paramesh_preprocessor.o: Flash.h paramesh_reorder.h
umap.o: 
PPM.o: 
rp_rules.o: 
paramesh_reorder.o: 


### Dependencies of modules

ifdef MODUPPERCASE
BURN_INTERFACE.mod: Burn_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Burn_interface.mod
BURN_INTERFACE.mod Burn_interface.mod Burn_interface.o: Burn_interface.F90  constants.h Flash.h
else
burn_interface.mod: Burn_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Burn_interface.mod
burn_interface.mod Burn_interface.mod Burn_interface.o: Burn_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
INCOMPNS_INTERFACE.mod: IncompNS_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IncompNS_interface.mod
INCOMPNS_INTERFACE.mod IncompNS_interface.mod IncompNS_interface.o: IncompNS_interface.F90  constants.h Flash.h
else
incompns_interface.mod: IncompNS_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IncompNS_interface.mod
incompns_interface.mod IncompNS_interface.mod IncompNS_interface.o: IncompNS_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
TREECOL_INTERFACE.mod: TreeCol_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: TreeCol_interface.mod
TREECOL_INTERFACE.mod TreeCol_interface.mod TreeCol_interface.o: TreeCol_interface.F90  constants.h FortranLangFeatures.fh
else
treecol_interface.mod: TreeCol_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: TreeCol_interface.mod
treecol_interface.mod TreeCol_interface.mod TreeCol_interface.o: TreeCol_interface.F90  constants.h FortranLangFeatures.fh
endif

ifdef MODUPPERCASE
UT_SYSMEMINTERFACE.mod: ut_sysMemInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sysMemInterface.mod
UT_SYSMEMINTERFACE.mod ut_sysMemInterface.mod ut_sysMemInterface.o: ut_sysMemInterface.F90 UT_SYSMEMDATA.mod constants.h
else
ut_sysmeminterface.mod: ut_sysMemInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sysMemInterface.mod
ut_sysmeminterface.mod ut_sysMemInterface.mod ut_sysMemInterface.o: ut_sysMemInterface.F90 ut_sysmemdata.mod constants.h
endif

ifdef MODUPPERCASE
COLUMNDENSITY_DATA.mod: ColumnDensity_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ColumnDensity_data.mod
COLUMNDENSITY_DATA.mod ColumnDensity_data.mod ColumnDensity_data.o: ColumnDensity_data.F90 SIMULATION_DATA.mod constants.h Flash.h
else
columndensity_data.mod: ColumnDensity_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ColumnDensity_data.mod
columndensity_data.mod ColumnDensity_data.mod ColumnDensity_data.o: ColumnDensity_data.F90 simulation_data.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
PRIMORDIALCHEMISTRY_INTERFACE.mod: PrimordialChemistry_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PrimordialChemistry_interface.mod
PRIMORDIALCHEMISTRY_INTERFACE.mod PrimordialChemistry_interface.mod PrimordialChemistry_interface.o: PrimordialChemistry_interface.F90  constants.h Flash.h
else
primordialchemistry_interface.mod: PrimordialChemistry_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PrimordialChemistry_interface.mod
primordialchemistry_interface.mod PrimordialChemistry_interface.mod PrimordialChemistry_interface.o: PrimordialChemistry_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
CONDUCTIVITY_INTERFACE.mod: Conductivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Conductivity_interface.mod
CONDUCTIVITY_INTERFACE.mod Conductivity_interface.mod Conductivity_interface.o: Conductivity_interface.F90  Flash.h
else
conductivity_interface.mod: Conductivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Conductivity_interface.mod
conductivity_interface.mod Conductivity_interface.mod Conductivity_interface.o: Conductivity_interface.F90  Flash.h
endif

ifdef MODUPPERCASE
SIMULATION_DATA.mod: Simulation_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Simulation_data.mod
SIMULATION_DATA.mod Simulation_data.mod Simulation_data.o: Simulation_data.F90  constants.h
else
simulation_data.mod: Simulation_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Simulation_data.mod
simulation_data.mod Simulation_data.mod Simulation_data.o: Simulation_data.F90  constants.h
endif

ifdef MODUPPERCASE
COSMOLOGY_DATA.mod: Cosmology_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cosmology_data.mod
COSMOLOGY_DATA.mod Cosmology_data.mod Cosmology_data.o: Cosmology_data.F90  
else
cosmology_data.mod: Cosmology_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cosmology_data.mod
cosmology_data.mod Cosmology_data.mod Cosmology_data.o: Cosmology_data.F90  
endif

ifdef MODUPPERCASE
CHEM_INTERFACE.mod: Chem_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Chem_interface.mod
CHEM_INTERFACE.mod Chem_interface.mod Chem_interface.o: Chem_interface.F90  constants.h Flash.h Ionize.h
else
chem_interface.mod: Chem_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Chem_interface.mod
chem_interface.mod Chem_interface.mod Chem_interface.o: Chem_interface.F90  constants.h Flash.h Ionize.h
endif

ifdef MODUPPERCASE
GR_INTERFACETYPEDECL.mod: gr_interfaceTypeDecl.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_interfaceTypeDecl.mod
GR_INTERFACETYPEDECL.mod gr_interfaceTypeDecl.mod gr_interfaceTypeDecl.o: gr_interfaceTypeDecl.F90  constants.h Flash.h
else
gr_interfacetypedecl.mod: gr_interfaceTypeDecl.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_interfaceTypeDecl.mod
gr_interfacetypedecl.mod gr_interfaceTypeDecl.mod gr_interfaceTypeDecl.o: gr_interfaceTypeDecl.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_PTINTERFACE.mod: gr_ptInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptInterface.mod
GR_PTINTERFACE.mod gr_ptInterface.mod gr_ptInterface.o: gr_ptInterface.F90  constants.h Flash.h
else
gr_ptinterface.mod: gr_ptInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptInterface.mod
gr_ptinterface.mod gr_ptInterface.mod gr_ptInterface.o: gr_ptInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GRAVITY_INTERFACE.mod: Gravity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Gravity_interface.mod
GRAVITY_INTERFACE.mod Gravity_interface.mod Gravity_interface.o: Gravity_interface.F90  constants.h FortranLangFeatures.fh
else
gravity_interface.mod: Gravity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Gravity_interface.mod
gravity_interface.mod Gravity_interface.mod Gravity_interface.o: Gravity_interface.F90  constants.h FortranLangFeatures.fh
endif

ifdef MODUPPERCASE
PHOTOIONIZATION_DATA.mod: Photoionization_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Photoionization_data.mod
PHOTOIONIZATION_DATA.mod Photoionization_data.mod Photoionization_data.o: Photoionization_data.F90 RADIATIONFIELD_DATA.mod constants.h Flash.h
else
photoionization_data.mod: Photoionization_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Photoionization_data.mod
photoionization_data.mod Photoionization_data.mod Photoionization_data.o: Photoionization_data.F90 radiationfield_data.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_PTSIEVEINTERFACE.mod: gr_ptSieveInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptSieveInterface.mod
GR_PTSIEVEINTERFACE.mod gr_ptSieveInterface.mod gr_ptSieveInterface.o: gr_ptSieveInterface.F90  constants.h Flash.h
else
gr_ptsieveinterface.mod: gr_ptSieveInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptSieveInterface.mod
gr_ptsieveinterface.mod gr_ptSieveInterface.mod gr_ptSieveInterface.o: gr_ptSieveInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
OPACITY_INTERFACE.mod: Opacity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Opacity_interface.mod
OPACITY_INTERFACE.mod Opacity_interface.mod Opacity_interface.o: Opacity_interface.F90  
else
opacity_interface.mod: Opacity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Opacity_interface.mod
opacity_interface.mod Opacity_interface.mod Opacity_interface.o: Opacity_interface.F90  
endif

ifdef MODUPPERCASE
IO_C_INTERFACE.mod: io_c_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io_c_interface.mod
IO_C_INTERFACE.mod io_c_interface.mod io_c_interface.o: io_c_interface.F90 ISO_C_BINDING.mod constants.h Flash.h
else
io_c_interface.mod  io_c_interface.o: io_c_interface.F90 iso_c_binding.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
PROLONG_ARRAYS.mod: prolong_arrays.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: prolong_arrays.mod
PROLONG_ARRAYS.mod prolong_arrays.mod prolong_arrays.o: prolong_arrays.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
prolong_arrays.mod  prolong_arrays.o: prolong_arrays.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
DEBUGGER_INTERFACE.mod: Debugger_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Debugger_interface.mod
DEBUGGER_INTERFACE.mod Debugger_interface.mod Debugger_interface.o: Debugger_interface.F90  
else
debugger_interface.mod: Debugger_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Debugger_interface.mod
debugger_interface.mod Debugger_interface.mod Debugger_interface.o: Debugger_interface.F90  
endif

ifdef MODUPPERCASE
PT_INTERFACE.mod: pt_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: pt_interface.mod
PT_INTERFACE.mod pt_interface.mod pt_interface.o: pt_interface.F90  constants.h Flash.h
else
pt_interface.mod  pt_interface.o: pt_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
SOLIDMECHANICS_INTERFACE.mod: SolidMechanics_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: SolidMechanics_interface.mod
SOLIDMECHANICS_INTERFACE.mod SolidMechanics_interface.mod SolidMechanics_interface.o: SolidMechanics_interface.F90  constants.h Flash.h SolidMechanics.h
else
solidmechanics_interface.mod: SolidMechanics_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: SolidMechanics_interface.mod
solidmechanics_interface.mod SolidMechanics_interface.mod SolidMechanics_interface.o: SolidMechanics_interface.F90  constants.h Flash.h SolidMechanics.h
endif

ifdef MODUPPERCASE
GR_HGINTERFACE.mod: gr_hgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_hgInterface.mod
GR_HGINTERFACE.mod gr_hgInterface.mod gr_hgInterface.o: gr_hgInterface.F90  
else
gr_hginterface.mod: gr_hgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_hgInterface.mod
gr_hginterface.mod gr_hgInterface.mod gr_hgInterface.o: gr_hgInterface.F90  
endif

ifdef MODUPPERCASE
CD_INTERFACE.mod: cd_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: cd_interface.mod
CD_INTERFACE.mod cd_interface.mod cd_interface.o: cd_interface.F90  constants.h Flash.h
else
cd_interface.mod  cd_interface.o: cd_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
LOGFILE_DATA.mod: Logfile_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Logfile_data.mod
LOGFILE_DATA.mod Logfile_data.mod Logfile_data.o: Logfile_data.F90  constants.h Flash.h
else
logfile_data.mod: Logfile_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Logfile_data.mod
logfile_data.mod Logfile_data.mod Logfile_data.o: Logfile_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
EOS_INTERFACE.mod: Eos_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Eos_interface.mod
EOS_INTERFACE.mod Eos_interface.mod Eos_interface.o: Eos_interface.F90  Eos.h constants.h Flash.h
else
eos_interface.mod: Eos_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Eos_interface.mod
eos_interface.mod Eos_interface.mod Eos_interface.o: Eos_interface.F90  Eos.h constants.h Flash.h
endif

ifdef MODUPPERCASE
IOPARTICLES_DATA.mod: IOParticles_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IOParticles_data.mod
IOPARTICLES_DATA.mod IOParticles_data.mod IOParticles_data.o: IOParticles_data.F90  constants.h Flash.h
else
ioparticles_data.mod: IOParticles_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IOParticles_data.mod
ioparticles_data.mod IOParticles_data.mod IOParticles_data.o: IOParticles_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
IO_PTINTERFACE.mod: io_ptInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io_ptInterface.mod
IO_PTINTERFACE.mod io_ptInterface.mod io_ptInterface.o: io_ptInterface.F90  constants.h Flash.h
else
io_ptinterface.mod: io_ptInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io_ptInterface.mod
io_ptinterface.mod io_ptInterface.mod io_ptInterface.o: io_ptInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_PTDATA.mod: gr_ptData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptData.mod
GR_PTDATA.mod gr_ptData.mod gr_ptData.o: gr_ptData.F90  Flash.h
else
gr_ptdata.mod: gr_ptData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptData.mod
gr_ptdata.mod gr_ptData.mod gr_ptData.o: gr_ptData.F90  Flash.h
endif

ifdef MODUPPERCASE
GR_ISOMPOLEDATA.mod: gr_isoMpoleData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_isoMpoleData.mod
GR_ISOMPOLEDATA.mod gr_isoMpoleData.mod gr_isoMpoleData.o: gr_isoMpoleData.F90  
else
gr_isompoledata.mod: gr_isoMpoleData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_isoMpoleData.mod
gr_isompoledata.mod gr_isoMpoleData.mod gr_isoMpoleData.o: gr_isoMpoleData.F90  
endif

ifdef MODUPPERCASE
DRIVER_DATA.mod: Driver_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Driver_data.mod
DRIVER_DATA.mod Driver_data.mod Driver_data.o: Driver_data.F90  constants.h Flash.h
else
driver_data.mod: Driver_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Driver_data.mod
driver_data.mod Driver_data.mod Driver_data.o: Driver_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GRID_INTERFACE.mod: Grid_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Grid_interface.mod
GRID_INTERFACE.mod Grid_interface.mod Grid_interface.o: Grid_interface.F90  constants.h Flash.h Particles.h
else
grid_interface.mod: Grid_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Grid_interface.mod
grid_interface.mod Grid_interface.mod Grid_interface.o: Grid_interface.F90  constants.h Flash.h Particles.h
endif

ifdef MODUPPERCASE
DELEPTONIZE_INTERFACE.mod: Deleptonize_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Deleptonize_interface.mod
DELEPTONIZE_INTERFACE.mod Deleptonize_interface.mod Deleptonize_interface.o: Deleptonize_interface.F90  constants.h Flash.h
else
deleptonize_interface.mod: Deleptonize_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Deleptonize_interface.mod
deleptonize_interface.mod Deleptonize_interface.mod Deleptonize_interface.o: Deleptonize_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
COLUMNDENSITY_INTERFACE.mod: ColumnDensity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ColumnDensity_interface.mod
COLUMNDENSITY_INTERFACE.mod ColumnDensity_interface.mod ColumnDensity_interface.o: ColumnDensity_interface.F90  constants.h Flash.h
else
columndensity_interface.mod: ColumnDensity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ColumnDensity_interface.mod
columndensity_interface.mod ColumnDensity_interface.mod ColumnDensity_interface.o: ColumnDensity_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
DRIVER_INTERFACE.mod: Driver_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Driver_interface.mod
DRIVER_INTERFACE.mod Driver_interface.mod Driver_interface.o: Driver_interface.F90  constants.h Flash.h
else
driver_interface.mod: Driver_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Driver_interface.mod
driver_interface.mod Driver_interface.mod Driver_interface.o: Driver_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
LOCAL_TREE_COMMON.mod: find_surrblks.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: find_surrblks.mod
LOCAL_TREE_COMMON.mod find_surrblks.mod find_surrblks.o: find_surrblks.F90 LOCAL_TREE_MODULE.mod paramesh_preprocessor.fh
else
local_tree_common.mod: find_surrblks.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: find_surrblks.mod
local_tree_common.mod find_surrblks.mod find_surrblks.o: find_surrblks.F90 local_tree_module.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
RUNTIMEPARAMETERS_INTERFACE.mod: RuntimeParameters_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RuntimeParameters_interface.mod
RUNTIMEPARAMETERS_INTERFACE.mod RuntimeParameters_interface.mod RuntimeParameters_interface.o: RuntimeParameters_interface.F90  constants.h Flash.h
else
runtimeparameters_interface.mod: RuntimeParameters_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RuntimeParameters_interface.mod
runtimeparameters_interface.mod RuntimeParameters_interface.mod RuntimeParameters_interface.o: RuntimeParameters_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
EOS_LOCALINTERFACE.mod: eos_localInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_localInterface.mod
EOS_LOCALINTERFACE.mod eos_localInterface.mod eos_localInterface.o: eos_localInterface.F90  Eos.h Flash.h
else
eos_localinterface.mod: eos_localInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_localInterface.mod
eos_localinterface.mod eos_localInterface.mod eos_localInterface.o: eos_localInterface.F90  Eos.h Flash.h
endif

ifdef MODUPPERCASE
AMR_MG_COMMON.mod: amr_mg_common.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: amr_mg_common.mod
AMR_MG_COMMON.mod amr_mg_common.mod amr_mg_common.o: amr_mg_common.F90 PARAMESH_DIMENSIONS.mod TREE.mod paramesh_preprocessor.fh
else
amr_mg_common.mod  amr_mg_common.o: amr_mg_common.F90 paramesh_dimensions.mod tree.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
EOS_MGAMMADATA.mod: eos_mgammaData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_mgammaData.mod
EOS_MGAMMADATA.mod eos_mgammaData.mod eos_mgammaData.o: eos_mgammaData.F90  Flash.h
else
eos_mgammadata.mod: eos_mgammaData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_mgammaData.mod
eos_mgammadata.mod eos_mgammaData.mod eos_mgammaData.o: eos_mgammaData.F90  Flash.h
endif

ifdef MODUPPERCASE
VISCOSITY_INTERFACE.mod: Viscosity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Viscosity_interface.mod
VISCOSITY_INTERFACE.mod Viscosity_interface.mod Viscosity_interface.o: Viscosity_interface.F90  Flash.h
else
viscosity_interface.mod: Viscosity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Viscosity_interface.mod
viscosity_interface.mod Viscosity_interface.mod Viscosity_interface.o: Viscosity_interface.F90  Flash.h
endif

ifdef MODUPPERCASE
RADIATIONFIELD_INTERFACE.mod: RadiationField_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadiationField_interface.mod
RADIATIONFIELD_INTERFACE.mod RadiationField_interface.mod RadiationField_interface.o: RadiationField_interface.F90  constants.h Flash.h
else
radiationfield_interface.mod: RadiationField_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadiationField_interface.mod
radiationfield_interface.mod RadiationField_interface.mod RadiationField_interface.o: RadiationField_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_INTERFACE.mod: gr_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_interface.mod
GR_INTERFACE.mod gr_interface.mod gr_interface.o: gr_interface.F90 GR_INTERFACETYPEDECL.mod constants.h Flash.h
else
gr_interface.mod  gr_interface.o: gr_interface.F90 gr_interfacetypedecl.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
PC_INTERFACE.mod: pc_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: pc_interface.mod
PC_INTERFACE.mod pc_interface.mod pc_interface.o: pc_interface.F90  constants.h
else
pc_interface.mod  pc_interface.o: pc_interface.F90  constants.h
endif

ifdef MODUPPERCASE
IO_INTERFACE.mod: IO_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IO_interface.mod
IO_INTERFACE.mod IO_interface.mod IO_interface.o: IO_interface.F90  
else
io_interface.mod: IO_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IO_interface.mod
io_interface.mod IO_interface.mod IO_interface.o: IO_interface.F90  
endif

ifdef MODUPPERCASE
UT_SYSMEMDATA.mod: ut_sysMemData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sysMemData.mod
UT_SYSMEMDATA.mod ut_sysMemData.mod ut_sysMemData.o: ut_sysMemData.F90  constants.h
else
ut_sysmemdata.mod: ut_sysMemData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sysMemData.mod
ut_sysmemdata.mod ut_sysMemData.mod ut_sysMemData.o: ut_sysMemData.F90  constants.h
endif

ifdef MODUPPERCASE
MULTISPECIES_INTERFACE.mod: Multispecies_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Multispecies_interface.mod
MULTISPECIES_INTERFACE.mod Multispecies_interface.mod Multispecies_interface.o: Multispecies_interface.F90  constants.h Flash.h
else
multispecies_interface.mod: Multispecies_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Multispecies_interface.mod
multispecies_interface.mod Multispecies_interface.mod Multispecies_interface.o: Multispecies_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
NSE_INTERFACE.mod: NSE_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: NSE_interface.mod
NSE_INTERFACE.mod NSE_interface.mod NSE_interface.o: NSE_interface.F90  
else
nse_interface.mod: NSE_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: NSE_interface.mod
nse_interface.mod NSE_interface.mod NSE_interface.o: NSE_interface.F90  
endif

ifdef MODUPPERCASE
HEAT_INTERFACE.mod: Heat_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Heat_interface.mod
HEAT_INTERFACE.mod Heat_interface.mod Heat_interface.o: Heat_interface.F90  constants.h Flash.h
else
heat_interface.mod: Heat_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Heat_interface.mod
heat_interface.mod Heat_interface.mod Heat_interface.o: Heat_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_BHINTERFACE.mod: gr_bhInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bhInterface.mod
GR_BHINTERFACE.mod gr_bhInterface.mod gr_bhInterface.o: gr_bhInterface.F90  
else
gr_bhinterface.mod: gr_bhInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bhInterface.mod
gr_bhinterface.mod gr_bhInterface.mod gr_bhInterface.o: gr_bhInterface.F90  
endif

ifdef MODUPPERCASE
F90_UNIX_ENV.mod : 
else
f90_unix_env.mod : 
endif

ifdef MODUPPERCASE
STIR_INTERFACE.mod: Stir_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Stir_interface.mod
STIR_INTERFACE.mod Stir_interface.mod Stir_interface.o: Stir_interface.F90  constants.h
else
stir_interface.mod: Stir_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Stir_interface.mod
stir_interface.mod Stir_interface.mod Stir_interface.o: Stir_interface.F90  constants.h
endif

ifdef MODUPPERCASE
SINKPARTICLES_DATA.mod : 
else
sinkparticles_data.mod : 
endif

ifdef MODUPPERCASE
COSMOLOGY_INTERFACE.mod: Cosmology_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cosmology_interface.mod
COSMOLOGY_INTERFACE.mod Cosmology_interface.mod Cosmology_interface.o: Cosmology_interface.F90  constants.h Flash.h
else
cosmology_interface.mod: Cosmology_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cosmology_interface.mod
cosmology_interface.mod Cosmology_interface.mod Cosmology_interface.o: Cosmology_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
HYDRO_DATA.mod: Hydro_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Hydro_data.mod
HYDRO_DATA.mod Hydro_data.mod Hydro_data.o: Hydro_data.F90  constants.h Flash.h
else
hydro_data.mod: Hydro_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Hydro_data.mod
hydro_data.mod Hydro_data.mod Hydro_data.o: Hydro_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PHYSICALCONSTANTS_INTERFACE.mod: PhysicalConstants_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PhysicalConstants_interface.mod
PHYSICALCONSTANTS_INTERFACE.mod PhysicalConstants_interface.mod PhysicalConstants_interface.o: PhysicalConstants_interface.F90  constants.h Flash.h
else
physicalconstants_interface.mod: PhysicalConstants_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PhysicalConstants_interface.mod
physicalconstants_interface.mod PhysicalConstants_interface.mod PhysicalConstants_interface.o: PhysicalConstants_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
UT_CONVERSIONINTERFACE.mod: ut_conversionInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_conversionInterface.mod
UT_CONVERSIONINTERFACE.mod ut_conversionInterface.mod ut_conversionInterface.o: ut_conversionInterface.F90  
else
ut_conversioninterface.mod: ut_conversionInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_conversionInterface.mod
ut_conversioninterface.mod ut_conversionInterface.mod ut_conversionInterface.o: ut_conversionInterface.F90  
endif

ifdef MODUPPERCASE
EOS_MTINTERFACE.mod: eos_mtInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_mtInterface.mod
EOS_MTINTERFACE.mod eos_mtInterface.mod eos_mtInterface.o: eos_mtInterface.F90  Eos.h
else
eos_mtinterface.mod: eos_mtInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_mtInterface.mod
eos_mtinterface.mod eos_mtInterface.mod eos_mtInterface.o: eos_mtInterface.F90  Eos.h
endif

ifdef MODUPPERCASE
SMOOTH_DATA.mod: smooth_Data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: smooth_Data.mod
SMOOTH_DATA.mod smooth_Data.mod smooth_Data.o: smooth_Data.F90 TREE.mod constants.h Flash.h
else
smooth_data.mod: smooth_Data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: smooth_Data.mod
smooth_data.mod smooth_Data.mod smooth_Data.o: smooth_Data.F90 tree.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_HGDATA.mod: gr_hgData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_hgData.mod
GR_HGDATA.mod gr_hgData.mod gr_hgData.o: gr_hgData.F90 TREE.mod constants.h Flash.h
else
gr_hgdata.mod: gr_hgData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_hgData.mod
gr_hgdata.mod gr_hgData.mod gr_hgData.o: gr_hgData.F90 tree.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
HY_PPM_INTERFACE.mod: hy_ppm_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: hy_ppm_interface.mod
HY_PPM_INTERFACE.mod hy_ppm_interface.mod hy_ppm_interface.o: hy_ppm_interface.F90  constants.h Flash.h
else
hy_ppm_interface.mod  hy_ppm_interface.o: hy_ppm_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_BCINTERFACE.mod: gr_bcInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bcInterface.mod
GR_BCINTERFACE.mod gr_bcInterface.mod gr_bcInterface.o: gr_bcInterface.F90  constants.h Flash.h
else
gr_bcinterface.mod: gr_bcInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bcInterface.mod
gr_bcinterface.mod gr_bcInterface.mod gr_bcInterface.o: gr_bcInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
RUNTIMEPARAMETERS_DATA.mod: RuntimeParameters_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RuntimeParameters_data.mod
RUNTIMEPARAMETERS_DATA.mod RuntimeParameters_data.mod RuntimeParameters_data.o: RuntimeParameters_data.F90 NAMEVALUELL_DATA.mod constants.h
else
runtimeparameters_data.mod: RuntimeParameters_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RuntimeParameters_data.mod
runtimeparameters_data.mod RuntimeParameters_data.mod RuntimeParameters_data.o: RuntimeParameters_data.F90 namevaluell_data.mod constants.h
endif

ifdef MODUPPERCASE
EOS_TABINTERFACE.mod: eos_tabInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_tabInterface.mod
EOS_TABINTERFACE.mod eos_tabInterface.mod eos_tabInterface.o: eos_tabInterface.F90 EOS_TABDATA.mod Eos.h
else
eos_tabinterface.mod: eos_tabInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: eos_tabInterface.mod
eos_tabinterface.mod eos_tabInterface.mod eos_tabInterface.o: eos_tabInterface.F90 eos_tabdata.mod Eos.h
endif

ifdef MODUPPERCASE
DIFFUSE_INTERFACE.mod: Diffuse_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Diffuse_interface.mod
DIFFUSE_INTERFACE.mod Diffuse_interface.mod Diffuse_interface.o: Diffuse_interface.F90  constants.h Flash.h
else
diffuse_interface.mod: Diffuse_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Diffuse_interface.mod
diffuse_interface.mod Diffuse_interface.mod Diffuse_interface.o: Diffuse_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
SMOOTH_PARTICLES.mod: Smooth_particles.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Smooth_particles.mod
SMOOTH_PARTICLES.mod Smooth_particles.mod Smooth_particles.o: Smooth_particles.F90 PARTICLES_DATA.mod UT_SORTINTERFACE.mod GRID_INTERFACE.mod GRID_DATA.mod GR_PTDATA.mod SIMULATION_DATA.mod TREE.mod DRIVER_DATA.mod TIMERS_INTERFACE.mod DRIVER_INTERFACE.mod SMOOTH_DATA.mod LOGFILE_INTERFACE.mod PARTICLES_INTERFACE.mod GRAVITY_INTERFACE.mod GR_PTMAPDATA.mod GR_PTSIEVEINTERFACE.mod PHYSICALDATA.mod GR_PTINTERFACE.mod constants.h Flash.h Particles.h gr_ptMapToMesh.h Flash_mpi.h
else
smooth_particles.mod: Smooth_particles.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Smooth_particles.mod
smooth_particles.mod Smooth_particles.mod Smooth_particles.o: Smooth_particles.F90 particles_data.mod ut_sortinterface.mod grid_interface.mod grid_data.mod gr_ptdata.mod simulation_data.mod tree.mod driver_data.mod timers_interface.mod driver_interface.mod smooth_data.mod logfile_interface.mod particles_interface.mod gravity_interface.mod gr_ptmapdata.mod gr_ptsieveinterface.mod physicaldata.mod gr_ptinterface.mod constants.h Flash.h Particles.h gr_ptMapToMesh.h Flash_mpi.h
endif

ifdef MODUPPERCASE
GRID_DATA.mod: Grid_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Grid_data.mod
GRID_DATA.mod Grid_data.mod Grid_data.o: Grid_data.F90  constants.h Flash.h
else
grid_data.mod: Grid_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Grid_data.mod
grid_data.mod Grid_data.mod Grid_data.o: Grid_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
TIMERS_DATA.mod: Timers_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Timers_data.mod
TIMERS_DATA.mod Timers_data.mod Timers_data.o: Timers_data.F90  Timers.h
else
timers_data.mod: Timers_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Timers_data.mod
timers_data.mod Timers_data.mod Timers_data.o: Timers_data.F90  Timers.h
endif

ifdef MODUPPERCASE
PARAMESH_INTERFACES.mod: paramesh_interfaces.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: paramesh_interfaces.mod
PARAMESH_INTERFACES.mod paramesh_interfaces.mod paramesh_interfaces.o: paramesh_interfaces.F90  paramesh_preprocessor.fh
else
paramesh_interfaces.mod  paramesh_interfaces.o: paramesh_interfaces.F90  paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
GRAVITY_DATA.mod: Gravity_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Gravity_data.mod
GRAVITY_DATA.mod Gravity_data.mod Gravity_data.o: Gravity_data.F90  constants.h Flash.h
else
gravity_data.mod: Gravity_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Gravity_data.mod
gravity_data.mod Gravity_data.mod Gravity_data.o: Gravity_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PARTICLES_INTERFACE.mod: Particles_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Particles_interface.mod
PARTICLES_INTERFACE.mod Particles_interface.mod Particles_interface.o: Particles_interface.F90  constants.h Flash.h
else
particles_interface.mod: Particles_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Particles_interface.mod
particles_interface.mod Particles_interface.mod Particles_interface.o: Particles_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PARAMESH_MPI_INTERFACES.mod: paramesh_mpi_interfaces.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: paramesh_mpi_interfaces.mod
PARAMESH_MPI_INTERFACES.mod paramesh_mpi_interfaces.mod paramesh_mpi_interfaces.o: paramesh_mpi_interfaces.F90  
else
paramesh_mpi_interfaces.mod  paramesh_mpi_interfaces.o: paramesh_mpi_interfaces.F90  
endif

ifdef MODUPPERCASE
PROFILER_INTERFACE.mod: Profiler_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Profiler_interface.mod
PROFILER_INTERFACE.mod Profiler_interface.mod Profiler_interface.o: Profiler_interface.F90  
else
profiler_interface.mod: Profiler_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Profiler_interface.mod
profiler_interface.mod Profiler_interface.mod Profiler_interface.o: Profiler_interface.F90  
endif

ifdef MODUPPERCASE
IONIZE_INTERFACE.mod: Ionize_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Ionize_interface.mod
IONIZE_INTERFACE.mod Ionize_interface.mod Ionize_interface.o: Ionize_interface.F90  constants.h Flash.h Ionize.h
else
ionize_interface.mod: Ionize_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Ionize_interface.mod
ionize_interface.mod Ionize_interface.mod Ionize_interface.o: Ionize_interface.F90  constants.h Flash.h Ionize.h
endif

ifdef MODUPPERCASE
RADIATIONFIELD_DATA.mod: RadiationField_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadiationField_data.mod
RADIATIONFIELD_DATA.mod RadiationField_data.mod RadiationField_data.o: RadiationField_data.F90  constants.h Flash.h
else
radiationfield_data.mod: RadiationField_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadiationField_data.mod
radiationfield_data.mod RadiationField_data.mod RadiationField_data.o: RadiationField_data.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PHYSICALCONSTANTS_DATA.mod: PhysicalConstants_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PhysicalConstants_data.mod
PHYSICALCONSTANTS_DATA.mod PhysicalConstants_data.mod PhysicalConstants_data.o: PhysicalConstants_data.F90  constants.h
else
physicalconstants_data.mod: PhysicalConstants_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: PhysicalConstants_data.mod
physicalconstants_data.mod PhysicalConstants_data.mod PhysicalConstants_data.o: PhysicalConstants_data.F90  constants.h
endif

ifdef MODUPPERCASE
GR_SBINTERFACE.mod: gr_sbInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_sbInterface.mod
GR_SBINTERFACE.mod gr_sbInterface.mod gr_sbInterface.o: gr_sbInterface.F90  constants.h Flash.h
else
gr_sbinterface.mod: gr_sbInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_sbInterface.mod
gr_sbinterface.mod gr_sbInterface.mod gr_sbInterface.o: gr_sbInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
CONSTANTS.mod: constants.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: constants.mod
CONSTANTS.mod constants.mod constants.o: constants.F90  
else
constants.mod  constants.o: constants.F90  
endif

ifdef MODUPPERCASE
GR_GCSCRATCHDATA.mod: gr_GCScratchData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_GCScratchData.mod
GR_GCSCRATCHDATA.mod gr_GCScratchData.mod gr_GCScratchData.o: gr_GCScratchData.F90  Flash.h
else
gr_gcscratchdata.mod: gr_GCScratchData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_GCScratchData.mod
gr_gcscratchdata.mod gr_GCScratchData.mod gr_GCScratchData.o: gr_GCScratchData.F90  Flash.h
endif

ifdef MODUPPERCASE
HEATEXCHANGE_INTERFACE.mod: Heatexchange_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Heatexchange_interface.mod
HEATEXCHANGE_INTERFACE.mod Heatexchange_interface.mod Heatexchange_interface.o: Heatexchange_interface.F90  constants.h
else
heatexchange_interface.mod: Heatexchange_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Heatexchange_interface.mod
heatexchange_interface.mod Heatexchange_interface.mod Heatexchange_interface.o: Heatexchange_interface.F90  constants.h
endif

ifdef MODUPPERCASE
GR_BCDATA.mod: gr_bcData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bcData.mod
GR_BCDATA.mod gr_bcData.mod gr_bcData.o: gr_bcData.F90  
else
gr_bcdata.mod: gr_bcData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bcData.mod
gr_bcdata.mod gr_bcData.mod gr_bcData.o: gr_bcData.F90  
endif

ifdef MODUPPERCASE
EOS_TABDATA.mod : 
else
eos_tabdata.mod : 
endif

ifdef MODUPPERCASE
FLAME_INTERFACE.mod: Flame_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Flame_interface.mod
FLAME_INTERFACE.mod Flame_interface.mod Flame_interface.o: Flame_interface.F90  Eos.h constants.h Flash.h
else
flame_interface.mod: Flame_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Flame_interface.mod
flame_interface.mod Flame_interface.mod Flame_interface.o: Flame_interface.F90  Eos.h constants.h Flash.h
endif

ifdef MODUPPERCASE
RADTRANS_INTERFACETYPEDECL.mod: RadTrans_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
RADTRANS_INTERFACE.mod: RadTrans_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadTrans_interface.mod
RADTRANS_INTERFACETYPEDECL.mod RADTRANS_INTERFACE.mod RadTrans_interface.mod RadTrans_interface.o: RadTrans_interface.F90  constants.h
else
radtrans_interfacetypedecl.mod: RadTrans_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
radtrans_interface.mod: RadTrans_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: RadTrans_interface.mod
radtrans_interfacetypedecl.mod radtrans_interface.mod RadTrans_interface.mod RadTrans_interface.o: RadTrans_interface.F90  constants.h
endif

ifdef MODUPPERCASE
GR_PFFTINTERFACETYPEDECL.mod: gr_pfftInterfaceTypeDecl.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_pfftInterfaceTypeDecl.mod
GR_PFFTINTERFACETYPEDECL.mod gr_pfftInterfaceTypeDecl.mod gr_pfftInterfaceTypeDecl.o: gr_pfftInterfaceTypeDecl.F90  
else
gr_pfftinterfacetypedecl.mod: gr_pfftInterfaceTypeDecl.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_pfftInterfaceTypeDecl.mod
gr_pfftinterfacetypedecl.mod gr_pfftInterfaceTypeDecl.mod gr_pfftInterfaceTypeDecl.o: gr_pfftInterfaceTypeDecl.F90  
endif

ifdef MODUPPERCASE
TURB_INTERFACE.mod: Turb_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Turb_interface.mod
TURB_INTERFACE.mod Turb_interface.mod Turb_interface.o: Turb_interface.F90  constants.h Flash.h
else
turb_interface.mod: Turb_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Turb_interface.mod
turb_interface.mod Turb_interface.mod Turb_interface.o: Turb_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
TIMERS_INTERFACE.mod: Timers_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Timers_interface.mod
TIMERS_INTERFACE.mod Timers_interface.mod Timers_interface.o: Timers_interface.F90  
else
timers_interface.mod: Timers_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Timers_interface.mod
timers_interface.mod Timers_interface.mod Timers_interface.o: Timers_interface.F90  
endif

ifdef MODUPPERCASE
GLOBAL_DATA_AND_SUBS.mod: UNIT_TEST.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: UNIT_TEST.mod
GLOBAL_DATA_AND_SUBS.mod UNIT_TEST.mod UNIT_TEST.o: UNIT_TEST.F90  
else
global_data_and_subs.mod: UNIT_TEST.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: UNIT_TEST.mod
global_data_and_subs.mod UNIT_TEST.mod UNIT_TEST.o: UNIT_TEST.F90  
endif

ifdef MODUPPERCASE
MAGNETICRESISTIVITY_INTERFACE.mod: MagneticResistivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: MagneticResistivity_interface.mod
MAGNETICRESISTIVITY_INTERFACE.mod MagneticResistivity_interface.mod MagneticResistivity_interface.o: MagneticResistivity_interface.F90  Flash.h
else
magneticresistivity_interface.mod: MagneticResistivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: MagneticResistivity_interface.mod
magneticresistivity_interface.mod MagneticResistivity_interface.mod MagneticResistivity_interface.o: MagneticResistivity_interface.F90  Flash.h
endif

ifdef MODUPPERCASE
NAMEVALUELL_DATA.mod: nameValueLL_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: nameValueLL_data.mod
NAMEVALUELL_DATA.mod nameValueLL_data.mod nameValueLL_data.o: nameValueLL_data.F90 DRIVER_INTERFACE.mod constants.h
else
namevaluell_data.mod: nameValueLL_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: nameValueLL_data.mod
namevaluell_data.mod nameValueLL_data.mod nameValueLL_data.o: nameValueLL_data.F90 driver_interface.mod constants.h
endif

ifdef MODUPPERCASE
HYDRO_INTERFACE.mod: Hydro_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Hydro_interface.mod
HYDRO_INTERFACE.mod Hydro_interface.mod Hydro_interface.o: Hydro_interface.F90  constants.h Flash.h
else
hydro_interface.mod: Hydro_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Hydro_interface.mod
hydro_interface.mod Hydro_interface.mod Hydro_interface.o: Hydro_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_ISOINTERFACE.mod: gr_isoInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_isoInterface.mod
GR_ISOINTERFACE.mod gr_isoInterface.mod gr_isoInterface.o: gr_isoInterface.F90  constants.h Flash.h
else
gr_isointerface.mod: gr_isoInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_isoInterface.mod
gr_isointerface.mod gr_isoInterface.mod gr_isoInterface.o: gr_isoInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
HY_UHD_MULTITEMPDATA.mod : 
else
hy_uhd_multitempdata.mod : 
endif

ifdef MODUPPERCASE
COOL_INTERFACE.mod: Cool_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cool_interface.mod
COOL_INTERFACE.mod Cool_interface.mod Cool_interface.o: Cool_interface.F90  constants.h Flash.h
else
cool_interface.mod: Cool_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Cool_interface.mod
cool_interface.mod Cool_interface.mod Cool_interface.o: Cool_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
TREE.mod: tree.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: tree.mod
TREE.mod tree.mod tree.o: tree.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
tree.mod  tree.o: tree.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
POLYTROPE_INTERFACE.mod: Polytrope_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Polytrope_interface.mod
POLYTROPE_INTERFACE.mod Polytrope_interface.mod Polytrope_interface.o: Polytrope_interface.F90  
else
polytrope_interface.mod: Polytrope_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Polytrope_interface.mod
polytrope_interface.mod Polytrope_interface.mod Polytrope_interface.o: Polytrope_interface.F90  
endif

ifdef MODUPPERCASE
IMBOUND_INTERFACE.mod: ImBound_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ImBound_interface.mod
IMBOUND_INTERFACE.mod ImBound_interface.mod ImBound_interface.o: ImBound_interface.F90  constants.h Flash.h
else
imbound_interface.mod: ImBound_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ImBound_interface.mod
imbound_interface.mod ImBound_interface.mod ImBound_interface.o: ImBound_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
GR_SOLVERSDATA.mod: gr_solversData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_solversData.mod
GR_SOLVERSDATA.mod gr_solversData.mod gr_solversData.o: gr_solversData.F90 GR_INTERFACETYPEDECL.mod 
else
gr_solversdata.mod: gr_solversData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_solversData.mod
gr_solversdata.mod gr_solversData.mod gr_solversData.o: gr_solversData.F90 gr_interfacetypedecl.mod 
endif

ifdef MODUPPERCASE
LOCAL_TREE_MODULE.mod: local_tree.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: local_tree.mod
LOCAL_TREE_MODULE.mod local_tree.mod local_tree.o: local_tree.F90 PARAMESH_DIMENSIONS.mod PHYSICALDATA.mod TREE.mod PARAMESH_COMM_DATA.mod CONSTANTS.mod 
else
local_tree_module.mod: local_tree.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: local_tree.mod
local_tree_module.mod local_tree.mod local_tree.o: local_tree.F90 paramesh_dimensions.mod physicaldata.mod tree.mod paramesh_comm_data.mod constants.mod 
endif

ifdef MODUPPERCASE
GR_FLASHHOOK_INTERFACES.mod: gr_flashHook_interfaces.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_flashHook_interfaces.mod
GR_FLASHHOOK_INTERFACES.mod gr_flashHook_interfaces.mod gr_flashHook_interfaces.o: gr_flashHook_interfaces.F90  
else
gr_flashhook_interfaces.mod: gr_flashHook_interfaces.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_flashHook_interfaces.mod
gr_flashhook_interfaces.mod gr_flashHook_interfaces.mod gr_flashHook_interfaces.o: gr_flashHook_interfaces.F90  
endif

ifdef MODUPPERCASE
PARAMESH_DIMENSIONS.mod: paramesh_dimensions.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: paramesh_dimensions.mod
PARAMESH_DIMENSIONS.mod paramesh_dimensions.mod paramesh_dimensions.o: paramesh_dimensions.F90  paramesh_preprocessor.fh
else
paramesh_dimensions.mod  paramesh_dimensions.o: paramesh_dimensions.F90  paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
SINKPARTICLES_INTERFACE.mod : 
else
sinkparticles_interface.mod : 
endif

ifdef MODUPPERCASE
UT_INTERPOLATIONINTERFACE.mod: ut_interpolationInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_interpolationInterface.mod
UT_INTERPOLATIONINTERFACE.mod ut_interpolationInterface.mod ut_interpolationInterface.o: ut_interpolationInterface.F90  
else
ut_interpolationinterface.mod: ut_interpolationInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_interpolationInterface.mod
ut_interpolationinterface.mod ut_interpolationInterface.mod ut_interpolationInterface.o: ut_interpolationInterface.F90  
endif

ifdef MODUPPERCASE
GR_BICGINTERFACE.mod: gr_bicgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bicgInterface.mod
GR_BICGINTERFACE.mod gr_bicgInterface.mod gr_bicgInterface.o: gr_bicgInterface.F90  
else
gr_bicginterface.mod: gr_bicgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_bicgInterface.mod
gr_bicginterface.mod gr_bicgInterface.mod gr_bicgInterface.o: gr_bicgInterface.F90  
endif

ifdef MODUPPERCASE
UT_SORTINTERFACE.mod: ut_sortInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sortInterface.mod
UT_SORTINTERFACE.mod ut_sortInterface.mod ut_sortInterface.o: ut_sortInterface.F90  
else
ut_sortinterface.mod: ut_sortInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_sortInterface.mod
ut_sortinterface.mod ut_sortInterface.mod ut_sortInterface.o: ut_sortInterface.F90  
endif

ifdef MODUPPERCASE
TIMINGS.mod: timings.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: timings.mod
TIMINGS.mod timings.mod timings.o: timings.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
timings.mod  timings.o: timings.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
IO.mod: io.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io.mod
IO.mod io.mod io.o: io.F90  paramesh_preprocessor.fh
else
io.mod  io.o: io.F90  paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
GR_PTMAPDATA.mod: gr_ptMapData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptMapData.mod
GR_PTMAPDATA.mod gr_ptMapData.mod gr_ptMapData.o: gr_ptMapData.F90  constants.h Flash.h
else
gr_ptmapdata.mod: gr_ptMapData.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_ptMapData.mod
gr_ptmapdata.mod gr_ptMapData.mod gr_ptMapData.o: gr_ptMapData.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PARTICLES_DATA.mod: Particles_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Particles_data.mod
PARTICLES_DATA.mod Particles_data.mod Particles_data.o: Particles_data.F90  GridParticles.h constants.h Flash.h Particles.h
else
particles_data.mod: Particles_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Particles_data.mod
particles_data.mod Particles_data.mod Particles_data.o: Particles_data.F90  GridParticles.h constants.h Flash.h Particles.h
endif

ifdef MODUPPERCASE
MPI_MORTON.mod: mpi_morton.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: mpi_morton.mod
MPI_MORTON.mod mpi_morton.mod mpi_morton.o: mpi_morton.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
mpi_morton.mod  mpi_morton.o: mpi_morton.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
PHYSICALDATA.mod: physicaldata.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: physicaldata.mod
PHYSICALDATA.mod physicaldata.mod physicaldata.o: physicaldata.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
physicaldata.mod  physicaldata.o: physicaldata.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
ISO_C_BINDING.mod : 
else
iso_c_binding.mod : 
endif

ifdef MODUPPERCASE
GR_MGINTERFACE.mod: gr_mgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_mgInterface.mod
GR_MGINTERFACE.mod gr_mgInterface.mod gr_mgInterface.o: gr_mgInterface.F90  
else
gr_mginterface.mod: gr_mgInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_mgInterface.mod
gr_mginterface.mod gr_mgInterface.mod gr_mgInterface.o: gr_mgInterface.F90  
endif

ifdef MODUPPERCASE
CHEM_DATA.mod: Chem_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Chem_data.mod
CHEM_DATA.mod Chem_data.mod Chem_data.o: Chem_data.F90  Ionize.h Flash.h constants.h
else
chem_data.mod: Chem_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Chem_data.mod
chem_data.mod Chem_data.mod Chem_data.o: Chem_data.F90  Ionize.h Flash.h constants.h
endif

ifdef MODUPPERCASE
WORKSPACE.mod: workspace.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: workspace.mod
WORKSPACE.mod workspace.mod workspace.o: workspace.F90 PARAMESH_DIMENSIONS.mod paramesh_preprocessor.fh
else
workspace.mod  workspace.o: workspace.F90 paramesh_dimensions.mod paramesh_preprocessor.fh
endif

ifdef MODUPPERCASE
IO_TYPEINTERFACE.mod: io_typeInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io_typeInterface.mod
IO_TYPEINTERFACE.mod io_typeInterface.mod io_typeInterface.o: io_typeInterface.F90 IO_DATA.mod io_flash.h constants.h Flash.h
else
io_typeinterface.mod: io_typeInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: io_typeInterface.mod
io_typeinterface.mod io_typeInterface.mod io_typeInterface.o: io_typeInterface.F90 io_data.mod io_flash.h constants.h Flash.h
endif

ifdef MODUPPERCASE
LOGFILE_INTERFACE.mod: Logfile_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Logfile_interface.mod
LOGFILE_INTERFACE.mod Logfile_interface.mod Logfile_interface.o: Logfile_interface.F90  constants.h Flash.h
else
logfile_interface.mod: Logfile_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Logfile_interface.mod
logfile_interface.mod Logfile_interface.mod Logfile_interface.o: Logfile_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
UT_QSORTINTERFACE.mod: ut_qsortInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_qsortInterface.mod
UT_QSORTINTERFACE.mod ut_qsortInterface.mod ut_qsortInterface.o: ut_qsortInterface.F90  
else
ut_qsortinterface.mod: ut_qsortInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: ut_qsortInterface.mod
ut_qsortinterface.mod ut_qsortInterface.mod ut_qsortInterface.o: ut_qsortInterface.F90  
endif

ifdef MODUPPERCASE
MASSDIFFUSIVITY_INTERFACE.mod: MassDiffusivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: MassDiffusivity_interface.mod
MASSDIFFUSIVITY_INTERFACE.mod MassDiffusivity_interface.mod MassDiffusivity_interface.o: MassDiffusivity_interface.F90  Flash.h
else
massdiffusivity_interface.mod: MassDiffusivity_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: MassDiffusivity_interface.mod
massdiffusivity_interface.mod MassDiffusivity_interface.mod MassDiffusivity_interface.o: MassDiffusivity_interface.F90  Flash.h
endif

ifdef MODUPPERCASE
GR_MPOLEINTERFACE.mod: gr_mpoleInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_mpoleInterface.mod
GR_MPOLEINTERFACE.mod gr_mpoleInterface.mod gr_mpoleInterface.o: gr_mpoleInterface.F90  constants.h Flash.h
else
gr_mpoleinterface.mod: gr_mpoleInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_mpoleInterface.mod
gr_mpoleinterface.mod gr_mpoleInterface.mod gr_mpoleInterface.o: gr_mpoleInterface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
PARAMESH_COMM_DATA.mod: paramesh_comm_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: paramesh_comm_data.mod
PARAMESH_COMM_DATA.mod paramesh_comm_data.mod paramesh_comm_data.o: paramesh_comm_data.F90  
else
paramesh_comm_data.mod  paramesh_comm_data.o: paramesh_comm_data.F90  
endif

ifdef MODUPPERCASE
EOS_DATA.mod: Eos_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Eos_data.mod
EOS_DATA.mod Eos_data.mod Eos_data.o: Eos_data.F90  Eos.h Flash.h Eos_map.h
else
eos_data.mod: Eos_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Eos_data.mod
eos_data.mod Eos_data.mod Eos_data.o: Eos_data.F90  Eos.h Flash.h Eos_map.h
endif

ifdef MODUPPERCASE
ERF_UTIL.mod: erf_util.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: erf_util.mod
ERF_UTIL.mod erf_util.mod erf_util.o: erf_util.F90  
else
erf_util.mod  erf_util.o: erf_util.F90  
endif

ifdef MODUPPERCASE
MULTISPECIES_DATA.mod: Multispecies_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Multispecies_data.mod
MULTISPECIES_DATA.mod Multispecies_data.mod Multispecies_data.o: Multispecies_data.F90  Multispecies.h Flash.h
else
multispecies_data.mod: Multispecies_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Multispecies_data.mod
multispecies_data.mod Multispecies_data.mod Multispecies_data.o: Multispecies_data.F90  Multispecies.h Flash.h
endif

ifdef MODUPPERCASE
PHOTOIONIZATION_INTERFACE.mod: Photoionization_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Photoionization_interface.mod
PHOTOIONIZATION_INTERFACE.mod Photoionization_interface.mod Photoionization_interface.o: Photoionization_interface.F90  constants.h Flash.h
else
photoionization_interface.mod: Photoionization_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Photoionization_interface.mod
photoionization_interface.mod Photoionization_interface.mod Photoionization_interface.o: Photoionization_interface.F90  constants.h Flash.h
endif

ifdef MODUPPERCASE
SIMULATION_INTERFACE.mod: Simulation_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Simulation_interface.mod
SIMULATION_INTERFACE.mod Simulation_interface.mod Simulation_interface.o: Simulation_interface.F90  constants.h
else
simulation_interface.mod: Simulation_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: Simulation_interface.mod
simulation_interface.mod Simulation_interface.mod Simulation_interface.o: Simulation_interface.F90  constants.h
endif

ifdef MODUPPERCASE
ENERGYDEPOSITION_INTERFACE.mod: EnergyDeposition_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: EnergyDeposition_interface.mod
ENERGYDEPOSITION_INTERFACE.mod EnergyDeposition_interface.mod EnergyDeposition_interface.o: EnergyDeposition_interface.F90  
else
energydeposition_interface.mod: EnergyDeposition_interface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: EnergyDeposition_interface.mod
energydeposition_interface.mod EnergyDeposition_interface.mod EnergyDeposition_interface.o: EnergyDeposition_interface.F90  
endif

ifdef MODUPPERCASE
IO_DATA.mod: IO_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IO_data.mod
IO_DATA.mod IO_data.mod IO_data.o: IO_data.F90 ISO_C_BINDING.mod NAMEVALUELL_DATA.mod constants.h Flash.h
else
io_data.mod: IO_data.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: IO_data.mod
io_data.mod IO_data.mod IO_data.o: IO_data.F90 iso_c_binding.mod namevaluell_data.mod constants.h Flash.h
endif

ifdef MODUPPERCASE
BITTREE.mod : 
else
bittree.mod : 
endif

ifdef MODUPPERCASE
GR_PFFTINTERFACE.mod: gr_pfftInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_pfftInterface.mod
GR_PFFTINTERFACE.mod gr_pfftInterface.mod gr_pfftInterface.o: gr_pfftInterface.F90 GR_PFFTINTERFACETYPEDECL.mod constants.h
else
gr_pfftinterface.mod: gr_pfftInterface.mod ;if [ -s "$<" -a "$<" -nt "$@" ];then ln -f $< $@;else test -f $@&&touch $@||/bin/true;fi
.INTERMEDIATE: gr_pfftInterface.mod
gr_pfftinterface.mod gr_pfftInterface.mod gr_pfftInterface.o: gr_pfftInterface.F90 gr_pfftinterfacetypedecl.mod constants.h
endif


### List of flash module object files
DATA_OBJS = 
DATA_OBJS += Burn_interface.o IncompNS_interface.o ut_sysMemInterface.o ColumnDensity_data.o Conductivity_interface.o 
DATA_OBJS += Simulation_data.o Cosmology_data.o Chem_interface.o gr_interfaceTypeDecl.o gr_ptInterface.o 
DATA_OBJS += Gravity_interface.o Photoionization_data.o gr_ptSieveInterface.o Opacity_interface.o io_c_interface.o 
DATA_OBJS += prolong_arrays.o pt_interface.o SolidMechanics_interface.o gr_hgInterface.o cd_interface.o 
DATA_OBJS += Logfile_data.o Eos_interface.o IOParticles_data.o io_ptInterface.o gr_ptData.o 
DATA_OBJS += gr_isoMpoleData.o Driver_data.o Grid_interface.o Deleptonize_interface.o ColumnDensity_interface.o 
DATA_OBJS += Driver_interface.o find_surrblks.o RuntimeParameters_interface.o eos_localInterface.o amr_mg_common.o 
DATA_OBJS += eos_mgammaData.o Viscosity_interface.o RadiationField_interface.o gr_interface.o pc_interface.o 
DATA_OBJS += IO_interface.o ut_sysMemData.o Multispecies_interface.o NSE_interface.o Heat_interface.o 
DATA_OBJS += gr_bhInterface.o  Stir_interface.o  Cosmology_interface.o 
DATA_OBJS += Hydro_data.o PhysicalConstants_interface.o ut_conversionInterface.o smooth_Data.o gr_hgData.o 
DATA_OBJS += hy_ppm_interface.o gr_bcInterface.o RuntimeParameters_data.o Diffuse_interface.o Smooth_particles.o 
DATA_OBJS += Grid_data.o Timers_data.o paramesh_interfaces.o Gravity_data.o Particles_interface.o 
DATA_OBJS += paramesh_mpi_interfaces.o Profiler_interface.o Ionize_interface.o RadiationField_data.o PhysicalConstants_data.o 
DATA_OBJS += gr_sbInterface.o constants.o gr_GCScratchData.o Heatexchange_interface.o gr_bcData.o 
DATA_OBJS +=  Flame_interface.o RadTrans_interface.o gr_pfftInterfaceTypeDecl.o Turb_interface.o 
DATA_OBJS += Timers_interface.o UNIT_TEST.o MagneticResistivity_interface.o nameValueLL_data.o Hydro_interface.o 
DATA_OBJS += gr_isoInterface.o  Cool_interface.o tree.o Polytrope_interface.o 
DATA_OBJS += ImBound_interface.o gr_solversData.o local_tree.o gr_flashHook_interfaces.o paramesh_dimensions.o 
DATA_OBJS +=  ut_interpolationInterface.o gr_bicgInterface.o ut_sortInterface.o timings.o 
DATA_OBJS += io.o gr_ptMapData.o Particles_data.o mpi_morton.o physicaldata.o 
DATA_OBJS +=  gr_mgInterface.o Chem_data.o workspace.o io_typeInterface.o 
DATA_OBJS += Logfile_interface.o ut_qsortInterface.o MassDiffusivity_interface.o paramesh_comm_data.o Eos_data.o 
DATA_OBJS += erf_util.o Multispecies_data.o Photoionization_interface.o Simulation_interface.o EnergyDeposition_interface.o 
DATA_OBJS += IO_data.o  gr_pfftInterface.o 


Chem_computeDt.F90 Cosmology_redshiftHydro.F90 Eos_getData.F90 Eos_getTempData.F90 Eos_putData.F90 Eos_wrapped.F90 Gravity_accelListOfBlocks.F90 Gravity_accelOneRow.F90 Gravity_potentialListOfBlocks.F90 Grid_GCPutScratch.F90 Grid_computeVarDiff.F90 Grid_computeVarNorm.F90 Grid_conserveField.F90 Grid_data.F90 Grid_getBlkData.F90 Grid_getBlkPtr.F90 Grid_getFluxData.F90 Grid_getPlaneData.F90 Grid_getPointData.F90 Grid_getRowData.F90 Grid_init.F90 Grid_limitAbundance.F90 Grid_mapParticlesToMesh.F90 Grid_putBlkData.F90 Grid_putFluxData.F90 Grid_putPlaneData.F90 Grid_putPointData.F90 Grid_putRowData.F90 Grid_renormAbundance.F90 Grid_renormMassScalars.F90 Hydro_computeDt.F90 Hydro_detectShock.F90 Hydro_recalibrateEints.F90 Hydro_shockStrength.F90 IO_writeIntegralQuantities.F90 RadiationField_computeDt.F90 flash_convert_cc_hook.F90 flash_unconvert_cc_hook.F90 gr_bcGetRegion.F90 gr_bcPutRegion.F90 gr_conserveToPrimitive.F90 gr_findMean.F90 gr_getInteriorBlkPtr.F90 gr_hgBndry.F90 gr_hgInitSource.F90 gr_hgLevelAdd.F90 gr_hgLevelAddScalar.F90 gr_hgLevelMultiplyScalar.F90 gr_hgLevelZero.F90 gr_hgMapBcType.F90 gr_hgNorm.F90 gr_hgProlongBndries.F90 gr_hgResidual.F90 gr_hgRestrict.F90 gr_hgSetZeroBoundary.F90 gr_hgSolveLevel.F90 gr_hypreAddGraph.F90 gr_hypreApplyBcToFace.F90 gr_hypreComputeB.F90 gr_hypreDestroyGrid.F90 gr_hypreDestroySolver.F90 gr_hypreExchangeFacB.F90 gr_hypreGetFaceB.F90 gr_hypreGridStatus.F90 gr_hypreSetIniGuess.F90 gr_hypreSetupGrid.F90 gr_hypreSetupSolver.F90 gr_hypreSolve.F90 gr_hypreUpdateSoln.F90 gr_isoImageMass.F90 gr_isoMpoleMoments.F90 gr_isoMpolePotential.F90 gr_isoSumLocal.F90 gr_markRefineDerefine.F90 gr_mpoleCen1Dspherical.F90 gr_mpoleCen2Dcylindrical.F90 gr_mpoleCen2Dspherical.F90 gr_mpoleCen3Dcartesian.F90 gr_mpoleCen3Dcylindrical.F90 gr_mpoleMom1Dspherical.F90 gr_mpoleMom2Dcylindrical.F90 gr_mpoleMom2Dspherical.F90 gr_mpoleMom3Dcartesian.F90 gr_mpoleMom3Dcylindrical.F90 gr_mpolePot1Dspherical.F90 gr_mpolePot2Dcylindrical.F90 gr_mpolePot2Dspherical.F90 gr_mpolePot3Dcartesian.F90 gr_mpolePot3Dcylindrical.F90 gr_primitiveToConserve.F90 gr_ptHandleExcess.F90 gr_ptPackUnpackData.F90 gr_ptSameProcMap.F90 gr_sanitizeDataAfterInterp.F90 hy_ppm_block.F90 hy_ppm_interface.F90 hy_ppm_sweep.F90 hy_ppm_updateSoln.F90 io_getVarExtrema.F90 io_readData.F90 io_writeData.F90 pt_mapFromMeshWeighted.F90 smooth_Restrict.F90 amr_1blk_cc_cp_remote.F90 amr_1blk_cc_prol_genorder.F90 amr_1blk_cc_prol_inject.F90 amr_1blk_cc_prol_linear.F90 amr_1blk_cc_prol_user.F90 amr_1blk_cc_prol_work_genorder.F90 amr_1blk_cc_prol_work_user.F90 amr_1blk_copy_soln.F90 amr_1blk_ec_cp_remote.F90 amr_1blk_ec_prol_genorder.F90 amr_1blk_ec_prol_linear.F90 amr_1blk_ec_prol_user.F90 amr_1blk_fc_clean_divb.F90 amr_1blk_fc_cp_remote.F90 amr_1blk_fc_prol_gen_fun.F90 amr_1blk_fc_prol_genorder.F90 amr_1blk_fc_prol_linear.F90 amr_1blk_fc_prol_user.F90 amr_1blk_nc_cp_remote.F90 amr_1blk_nc_prol_genorder.F90 amr_1blk_nc_prol_linear.F90 amr_1blk_nc_prol_user.F90 amr_1blk_save_soln.F90 amr_1blk_t_to_perm.F90 amr_1blk_to_perm.F90 amr_block_geometry.F90 amr_check_refine.F90 amr_compute_morton.F90 amr_initialize.F90 amr_mg_common.F90 amr_mg_init.F90 amr_migrate_tree_data.F90 amr_morton_order.F90 amr_morton_process.F90 amr_mpi_find_blk_in_buffer.F90 amr_perm_to_1blk.F90 amr_prolong_cc_fun_init.F90 amr_prolong_gen_unk1_fun.F90 amr_q_sort.F90 amr_q_sort_real.F90 amr_reorder_grid.F90 amr_restrict_ec_fun.F90 amr_restrict_ec_genorder.F90 amr_restrict_ec_user.F90 amr_restrict_edge.F90 amr_restrict_fc_fun.F90 amr_restrict_fc_genorder.F90 amr_restrict_fc_user.F90 amr_restrict_nc_fun.F90 amr_restrict_nc_genorder.F90 amr_restrict_nc_user.F90 amr_restrict_red.F90 amr_restrict_unk_fun.F90 amr_restrict_unk_genorder.F90 amr_restrict_unk_user.F90 amr_restrict_work_fun.F90 amr_restrict_work_genorder.F90 amr_restrict_work_user.F90 amr_set_runtime_parameters.F90 amr_sort_by_work.F90 amr_sort_morton.F90 amr_sort_morton_reorder_grid.F90 amr_system_calls.F90 compress_fetch_list.F90 fill_old_loc.F90 io.F90 morton_sort.F90 mpi_amr_1blk_guardcell.F90 mpi_amr_1blk_guardcell_c_to_f.F90 mpi_amr_1blk_restrict.F90 mpi_amr_boundary_block_info.F90 mpi_amr_checkpoint_re_default.F90 mpi_amr_checkpoint_re_hdf5.F90 mpi_amr_checkpoint_re_mpiio.F90 mpi_amr_checkpoint_wr.F90 mpi_amr_checkpoint_wr_default.F90 mpi_amr_checkpoint_wr_hdf5.F90 mpi_amr_checkpoint_wr_mpiio.F90 mpi_amr_comm_setup.F90 mpi_amr_derefine_blocks.F90 mpi_amr_edge_average.F90 mpi_amr_edge_average_udt.F90 mpi_amr_edge_average_vdt.F90 mpi_amr_edge_diagonal_check.F90 mpi_amr_flux_conserve.F90 mpi_amr_flux_conserve_udt.F90 mpi_amr_flux_conserve_vdt.F90 mpi_amr_get_remote_block.F90 mpi_amr_get_remote_block_fvar.F90 mpi_amr_global_domain_limits.F90 mpi_amr_guardcell.F90 mpi_amr_local_surr_blks_lkup.F90 mpi_amr_plotfile_chombo.F90 mpi_amr_prolong.F90 mpi_amr_prolong_fc_divbconsist.F90 mpi_amr_redist_blk.F90 mpi_amr_refine_blocks.F90 mpi_amr_refine_derefine.F90 mpi_amr_restrict.F90 mpi_amr_restrict_bnd_data.F90 mpi_amr_restrict_bnd_data_vdt.F90 mpi_amr_restrict_edge_data.F90 mpi_amr_restrict_edge_data_vdt.F90 mpi_amr_restrict_fulltree.F90 mpi_amr_singular_line.F90 mpi_amr_store_comm_info.F90 mpi_amr_store_comm_info_mg.F90 mpi_amr_test_neigh_values.F90 mpi_amr_timing_report.F90 mpi_amr_tree_setup.F90 mpi_get_buffer.F90 mpi_get_edge_buffer.F90 mpi_get_flux_buffer.F90 mpi_lib.F90 mpi_morton.F90 mpi_morton_bnd.F90 mpi_morton_bnd_fluxcon.F90 mpi_morton_bnd_prolong.F90 mpi_morton_bnd_restrict.F90 mpi_pack_blocks.F90 mpi_pack_edges.F90 mpi_pack_fluxes.F90 mpi_pack_tree_info.F90 mpi_put_buffer.F90 mpi_put_edge_buffer.F90 mpi_put_edge_buffer_1blk.F90 mpi_put_flux_buffer.F90 mpi_set_message_limits.F90 mpi_set_message_limits_unpack.F90 mpi_set_message_sizes.F90 mpi_unpack_blocks.F90 mpi_unpack_edges.F90 mpi_unpack_fluxes.F90 mpi_unpack_tree_info.F90 paramesh_dimensions.F90 paramesh_interfaces.F90 physicaldata.F90 process_fetch_list.F90 prolong_arrays.F90 send_block_data.F90 test_multigrid.F90 timings.F90 tree.F90 workspace.F90 : reorder



###Automatically appended dependencies of C files on headers###
/home/r900-3/milos/hdf5-1.6.7/include.o: 
Driver_abortFlashC.o: constants.h  mangle_names.h
dr_set_rlimits.o: constants.h mangle_names.h
dr_sleep.o: mangle_names.h
io_attribute.o: io_attribute.h
io_comp_decomp.o: io_comp_decomp.h
io_compressDecompress.o: io_compressDecompress.h
io_create_dataset.o: io_create_dataset.h
io_h5_attribute.o: io_h5_attribute.h
io_h5_read_present_dims.o: constants.h mangle_names.h Flash.h
io_h5_report_xfer_method.o: io_h5_report_xfer_method.h
io_h5_type.o: io_h5_type.h
io_h5_type_matched_xfer.o: io_h5_type_matched_xfer.h
io_h5_xfer.o: io_h5_xfer.h
io_h5_xfer_wrapper.o: io_h5_xfer_wrapper.h
io_h5create_dataset.o: io_h5create_dataset.h
io_h5create_raydset.o: constants.h mangle_names.h
io_h5file_interface.o: mangle_names.h hdf5_flash.h
io_h5read_blk_particle_info.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_generic_int_arr.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_generic_real_arr.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_globalintvect.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_globalstrvect.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_header.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_lists.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_localnp.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_num_props.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_particle_names.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_particles.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_single_part_prop.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5read_unknowns.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_blk_particle_info.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_generic_int_arr.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_generic_real_arr.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_header.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_lists.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_localnp.o: constants.h mangle_names.h hdf5_flash.h Flash.h
io_h5write_particles.o: constants.h mangle_names.h hdf5_flash.h
io_h5write_raydata.o: constants.h mangle_names.h hdf5_flash.h
io_h5write_unknowns.o: io_h5_attribute.h constants.h io_flash.h mangle_names.h Flash.h hdf5_flash.h
io_h5write_unknowns_sp.o: io_h5_attribute.h constants.h io_flash.h mangle_names.h Flash.h hdf5_flash.h
io_mpi_type.o: io_mpi_type.h
io_repack_data.o: io_repack_data.h
io_xfer_cont_slab.o: io_xfer_cont_slab.h
read_blocks_hdf5_r4.o: 
read_blocks_hdf5_r8.o: 
setup_buildstats.o: constants.h Flash.h mangle_names.h
ut_qsortC.o: ut_qsortC.h
ut_sys_mem_usage.o: mangle_names.h ut_sysMem.h
write_blocks_chombo_r4.o: 
write_blocks_chombo_r8.o: 
write_blocks_hdf5_r4.o: 
write_blocks_hdf5_r8.o: 
constants.o: 
mangle_names.o: 
io_attribute.o: io_h5_attribute.h constants.h io_flash.h mangle_names.h  Flash.h
io_comp_decomp.o: 
io_compressDecompress.o: 
io_create_dataset.o: constants.h io_flash.h mangle_names.h io_h5create_dataset.h Flash.h 
io_h5_attribute.o: io_flash.h constants.h Flash.h io_h5_type.h
Flash.o: 
io_h5_report_xfer_method.o: io_flash.h constants.h Flash.h
io_h5_type.o: io_flash.h constants.h Flash.h
io_h5_type_matched_xfer.o: constants.h io_flash.h io_h5_type.h io_repack_data.h Flash.h hdf5_flash.h io_h5_xfer.h
io_h5_xfer.o: io_flash.h constants.h Flash.h
io_h5_xfer_wrapper.o: constants.h io_flash.h io_h5_type.h Flash.h hdf5_flash.h io_h5_xfer.h io_h5_type_matched_xfer.h io_h5_report_xfer_method.h
io_h5create_dataset.o: io_flash.h constants.h Flash.h io_h5_type.h
hdf5_flash.o: constants.h
io_flash.o: Flash.h
io_mpi_type.o: io_flash.h constants.h Flash.h
io_repack_data.o: 
io_xfer_cont_slab.o: constants.h io_flash.h io_h5_xfer_wrapper.h mangle_names.h  Flash.h
ut_qsortC.o: mangle_names.h
ut_sysMem.o: 
